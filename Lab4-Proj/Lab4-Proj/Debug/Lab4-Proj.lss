
Lab4-Proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00002204  00002298  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002204  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800138  00800138  000022d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002300  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  00002340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000341d  00000000  00000000  000025f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012a3  00000000  00000000  00005a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017d7  00000000  00000000  00006cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d90  00000000  00000000  00008488  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a4c  00000000  00000000  00009218  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002ac7  00000000  00000000  00009c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000c72b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__vector_1>
       8:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__vector_2>
       c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__vector_3>
      10:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__vector_4>
      14:	0c 94 77 07 	jmp	0xeee	; 0xeee <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 e2 0d 	jmp	0x1bc4	; 0x1bc4 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 90 0d 	jmp	0x1b20	; 0x1b20 <__vector_9>
      28:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__vector_10>
      2c:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__vector_11>
      30:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__vector_12>
      34:	0c 94 33 09 	jmp	0x1266	; 0x1266 <__vector_13>
      38:	0c 94 a2 09 	jmp	0x1344	; 0x1344 <__vector_14>
      3c:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__vector_15>
      40:	0c 94 80 0a 	jmp	0x1500	; 0x1500 <__vector_16>
      44:	0c 94 ef 0a 	jmp	0x15de	; 0x15de <__vector_17>
      48:	0c 94 5e 0b 	jmp	0x16bc	; 0x16bc <__vector_18>
      4c:	0c 94 cd 0b 	jmp	0x179a	; 0x179a <__vector_19>
      50:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__vector_20>
      54:	0c 94 ab 0c 	jmp	0x1956	; 0x1956 <__vector_21>
      58:	0c 94 1a 0d 	jmp	0x1a34	; 0x1a34 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e0       	ldi	r30, 0x04	; 4
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 33       	cpi	r26, 0x38	; 56
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e3       	ldi	r26, 0x38	; 56
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 08 03 	call	0x610	; 0x610 <main>
      92:	0c 94 00 11 	jmp	0x2200	; 0x2200 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <Switch>:
#include "InteruptHandler.h"

int Switch(InterruptHandler *self, int arg) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
	if (self->risingEdge){
      a6:	fc 01       	movw	r30, r24
      a8:	26 81       	ldd	r18, Z+6	; 0x06
      aa:	22 23       	and	r18, r18
      ac:	a1 f0       	breq	.+40     	; 0xd6 <Switch+0x3c>
		self->risingEdge = false;
      ae:	16 82       	std	Z+6, r1	; 0x06
		ASYNC(self->joystick, joyStickHorizontalControll, 0);		
      b0:	04 81       	ldd	r16, Z+4	; 0x04
      b2:	15 81       	ldd	r17, Z+5	; 0x05
      b4:	c1 2c       	mov	r12, r1
      b6:	d1 2c       	mov	r13, r1
      b8:	0f 2e       	mov	r0, r31
      ba:	f4 ef       	ldi	r31, 0xF4	; 244
      bc:	ef 2e       	mov	r14, r31
      be:	f0 e0       	ldi	r31, 0x00	; 0
      c0:	ff 2e       	mov	r15, r31
      c2:	f0 2d       	mov	r31, r0
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	a9 01       	movw	r20, r18
      ca:	60 e0       	ldi	r22, 0x00	; 0
      cc:	70 e0       	ldi	r23, 0x00	; 0
      ce:	cb 01       	movw	r24, r22
      d0:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
      d4:	03 c0       	rjmp	.+6      	; 0xdc <Switch+0x42>
	}else{
		self->risingEdge = true;
      d6:	21 e0       	ldi	r18, 0x01	; 1
      d8:	fc 01       	movw	r30, r24
      da:	26 83       	std	Z+6, r18	; 0x06
	}
	//ASYNC(self->joystick, joyStickHorizontalControll, 0);
	//AFTER(MSEC(14), self->joystick, joyStickHorizontalControll, 0);
}
      dc:	1f 91       	pop	r17
      de:	0f 91       	pop	r16
      e0:	ff 90       	pop	r15
      e2:	ef 90       	pop	r14
      e4:	df 90       	pop	r13
      e6:	cf 90       	pop	r12
      e8:	08 95       	ret

000000ea <Change>:

int Change(InterruptHandler *self, int arg) {
      ea:	cf 92       	push	r12
      ec:	df 92       	push	r13
      ee:	ef 92       	push	r14
      f0:	ff 92       	push	r15
      f2:	0f 93       	push	r16
      f4:	1f 93       	push	r17
	ASYNC(self->joystick, joyStickVerticalControll, 0);
      f6:	fc 01       	movw	r30, r24
      f8:	04 81       	ldd	r16, Z+4	; 0x04
      fa:	15 81       	ldd	r17, Z+5	; 0x05
      fc:	c1 2c       	mov	r12, r1
      fe:	d1 2c       	mov	r13, r1
     100:	0f 2e       	mov	r0, r31
     102:	f8 e1       	ldi	r31, 0x18	; 24
     104:	ef 2e       	mov	r14, r31
     106:	f1 e0       	ldi	r31, 0x01	; 1
     108:	ff 2e       	mov	r15, r31
     10a:	f0 2d       	mov	r31, r0
     10c:	20 e0       	ldi	r18, 0x00	; 0
     10e:	30 e0       	ldi	r19, 0x00	; 0
     110:	a9 01       	movw	r20, r18
     112:	60 e0       	ldi	r22, 0x00	; 0
     114:	70 e0       	ldi	r23, 0x00	; 0
     116:	cb 01       	movw	r24, r22
     118:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
     11c:	1f 91       	pop	r17
     11e:	0f 91       	pop	r16
     120:	ff 90       	pop	r15
     122:	ef 90       	pop	r14
     124:	df 90       	pop	r13
     126:	cf 90       	pop	r12
     128:	08 95       	ret

0000012a <holdJoyStick>:
#include "Joystick.h"

int holdJoyStick(Joystick *self, int unUsed) {
     12a:	cf 92       	push	r12
     12c:	df 92       	push	r13
     12e:	ef 92       	push	r14
     130:	ff 92       	push	r15
     132:	0f 93       	push	r16
     134:	1f 93       	push	r17
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	ec 01       	movw	r28, r24
	self->held = true;
     13c:	81 e0       	ldi	r24, 0x01	; 1
     13e:	8f 83       	std	Y+7, r24	; 0x07
	if (!(PINB & (1 << PB7))) { // DOWN
     140:	1f 99       	sbic	0x03, 7	; 3
     142:	22 c0       	rjmp	.+68     	; 0x188 <holdJoyStick+0x5e>
		ASYNC(self->gui, freqDown, 0); // SYNC till ASYNC
     144:	0c 81       	ldd	r16, Y+4	; 0x04
     146:	1d 81       	ldd	r17, Y+5	; 0x05
     148:	c1 2c       	mov	r12, r1
     14a:	d1 2c       	mov	r13, r1
     14c:	0f 2e       	mov	r0, r31
     14e:	fa ea       	ldi	r31, 0xAA	; 170
     150:	ef 2e       	mov	r14, r31
     152:	f1 e0       	ldi	r31, 0x01	; 1
     154:	ff 2e       	mov	r15, r31
     156:	f0 2d       	mov	r31, r0
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	a9 01       	movw	r20, r18
     15e:	60 e0       	ldi	r22, 0x00	; 0
     160:	70 e0       	ldi	r23, 0x00	; 0
     162:	cb 01       	movw	r24, r22
     164:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
		AFTER(MSEC(50), self, holdJoyStick, 0);
     168:	0f 2e       	mov	r0, r31
     16a:	f5 e9       	ldi	r31, 0x95	; 149
     16c:	ef 2e       	mov	r14, r31
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	ff 2e       	mov	r15, r31
     172:	f0 2d       	mov	r31, r0
     174:	8e 01       	movw	r16, r28
     176:	20 e0       	ldi	r18, 0x00	; 0
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	a9 01       	movw	r20, r18
     17c:	6a e1       	ldi	r22, 0x1A	; 26
     17e:	76 e0       	ldi	r23, 0x06	; 6
     180:	80 e0       	ldi	r24, 0x00	; 0
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	if (!(PINB & (1 << PB6))) { // UP
     188:	1e 99       	sbic	0x03, 6	; 3
     18a:	22 c0       	rjmp	.+68     	; 0x1d0 <holdJoyStick+0xa6>
		ASYNC(self->gui, freqUp, 0); // SYNC till ASYNC
     18c:	0c 81       	ldd	r16, Y+4	; 0x04
     18e:	1d 81       	ldd	r17, Y+5	; 0x05
     190:	c1 2c       	mov	r12, r1
     192:	d1 2c       	mov	r13, r1
     194:	0f 2e       	mov	r0, r31
     196:	f1 e7       	ldi	r31, 0x71	; 113
     198:	ef 2e       	mov	r14, r31
     19a:	f1 e0       	ldi	r31, 0x01	; 1
     19c:	ff 2e       	mov	r15, r31
     19e:	f0 2d       	mov	r31, r0
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	a9 01       	movw	r20, r18
     1a6:	60 e0       	ldi	r22, 0x00	; 0
     1a8:	70 e0       	ldi	r23, 0x00	; 0
     1aa:	cb 01       	movw	r24, r22
     1ac:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
		AFTER(MSEC(50), self, holdJoyStick, 0);
     1b0:	0f 2e       	mov	r0, r31
     1b2:	f5 e9       	ldi	r31, 0x95	; 149
     1b4:	ef 2e       	mov	r14, r31
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	ff 2e       	mov	r15, r31
     1ba:	f0 2d       	mov	r31, r0
     1bc:	8e 01       	movw	r16, r28
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	a9 01       	movw	r20, r18
     1c4:	6a e1       	ldi	r22, 0x1A	; 26
     1c6:	76 e0       	ldi	r23, 0x06	; 6
     1c8:	80 e0       	ldi	r24, 0x00	; 0
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	self->held = false;
     1d0:	1f 82       	std	Y+7, r1	; 0x07
	return 0;
}
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	1f 91       	pop	r17
     1dc:	0f 91       	pop	r16
     1de:	ff 90       	pop	r15
     1e0:	ef 90       	pop	r14
     1e2:	df 90       	pop	r13
     1e4:	cf 90       	pop	r12
     1e6:	08 95       	ret

000001e8 <joyStickHorizontalControll>:

int joyStickHorizontalControll(Joystick *self, int unUsed){
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
	if((!(PINE & (1 << PE3)))){
     1f4:	63 99       	sbic	0x0c, 3	; 12
     1f6:	13 c0       	rjmp	.+38     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
     1f8:	fc 01       	movw	r30, r24
		ASYNC(self->gui, switchState,0);
     1fa:	04 81       	ldd	r16, Z+4	; 0x04
     1fc:	15 81       	ldd	r17, Z+5	; 0x05
     1fe:	c1 2c       	mov	r12, r1
     200:	d1 2c       	mov	r13, r1
     202:	0f 2e       	mov	r0, r31
     204:	f3 ee       	ldi	r31, 0xE3	; 227
     206:	ef 2e       	mov	r14, r31
     208:	f1 e0       	ldi	r31, 0x01	; 1
     20a:	ff 2e       	mov	r15, r31
     20c:	f0 2d       	mov	r31, r0
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	a9 01       	movw	r20, r18
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	cb 01       	movw	r24, r22
     21a:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	return 0;
}
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	1f 91       	pop	r17
     224:	0f 91       	pop	r16
     226:	ff 90       	pop	r15
     228:	ef 90       	pop	r14
     22a:	df 90       	pop	r13
     22c:	cf 90       	pop	r12
     22e:	08 95       	ret

00000230 <joyStickVerticalControll>:

int joyStickVerticalControll(Joystick *self, int unUsed){
     230:	cf 92       	push	r12
     232:	df 92       	push	r13
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
	if(!self->held){
     240:	fc 01       	movw	r30, r24
     242:	27 81       	ldd	r18, Z+7	; 0x07
     244:	21 11       	cpse	r18, r1
     246:	42 c0       	rjmp	.+132    	; 0x2cc <joyStickVerticalControll+0x9c>
     248:	ec 01       	movw	r28, r24
	if (!(PINB & (1 << PB7))) { //DOWN
     24a:	1f 99       	sbic	0x03, 7	; 3
     24c:	11 c0       	rjmp	.+34     	; 0x270 <joyStickVerticalControll+0x40>
		ASYNC(self, holdJoyStick, 0);
     24e:	c1 2c       	mov	r12, r1
     250:	d1 2c       	mov	r13, r1
     252:	0f 2e       	mov	r0, r31
     254:	f5 e9       	ldi	r31, 0x95	; 149
     256:	ef 2e       	mov	r14, r31
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	ff 2e       	mov	r15, r31
     25c:	f0 2d       	mov	r31, r0
     25e:	8c 01       	movw	r16, r24
     260:	20 e0       	ldi	r18, 0x00	; 0
     262:	30 e0       	ldi	r19, 0x00	; 0
     264:	a9 01       	movw	r20, r18
     266:	60 e0       	ldi	r22, 0x00	; 0
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	cb 01       	movw	r24, r22
     26c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
		//ASYNC(self->gui, freqDown, 0);
		
	}
	if (!(PINB & (1 << PB6))) { //UP
     270:	1e 99       	sbic	0x03, 6	; 3
     272:	11 c0       	rjmp	.+34     	; 0x296 <joyStickVerticalControll+0x66>
		ASYNC(self, holdJoyStick, 0);
     274:	c1 2c       	mov	r12, r1
     276:	d1 2c       	mov	r13, r1
     278:	0f 2e       	mov	r0, r31
     27a:	f5 e9       	ldi	r31, 0x95	; 149
     27c:	ef 2e       	mov	r14, r31
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ff 2e       	mov	r15, r31
     282:	f0 2d       	mov	r31, r0
     284:	8e 01       	movw	r16, r28
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	a9 01       	movw	r20, r18
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	70 e0       	ldi	r23, 0x00	; 0
     290:	cb 01       	movw	r24, r22
     292:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
		//ASYNC(self->gui, freqUp, 0);
	}
	if (!(PINB & (1 << PB4))) { //PRESS
     296:	1c 99       	sbic	0x03, 4	; 3
     298:	19 c0       	rjmp	.+50     	; 0x2cc <joyStickVerticalControll+0x9c>
		if (self->risingEdge){
     29a:	8e 81       	ldd	r24, Y+6	; 0x06
     29c:	88 23       	and	r24, r24
     29e:	a1 f0       	breq	.+40     	; 0x2c8 <joyStickVerticalControll+0x98>
			self->risingEdge = false;
     2a0:	1e 82       	std	Y+6, r1	; 0x06
			ASYNC(self->gui, press, 0);	
     2a2:	0c 81       	ldd	r16, Y+4	; 0x04
     2a4:	1d 81       	ldd	r17, Y+5	; 0x05
     2a6:	c1 2c       	mov	r12, r1
     2a8:	d1 2c       	mov	r13, r1
     2aa:	0f 2e       	mov	r0, r31
     2ac:	f0 ef       	ldi	r31, 0xF0	; 240
     2ae:	ef 2e       	mov	r14, r31
     2b0:	f1 e0       	ldi	r31, 0x01	; 1
     2b2:	ff 2e       	mov	r15, r31
     2b4:	f0 2d       	mov	r31, r0
     2b6:	20 e0       	ldi	r18, 0x00	; 0
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	a9 01       	movw	r20, r18
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	cb 01       	movw	r24, r22
     2c2:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <joyStickVerticalControll+0x9c>
		}else{
			self->risingEdge = true;
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	8e 83       	std	Y+6, r24	; 0x06
		}
	}
	}
	return 0;
}
     2cc:	80 e0       	ldi	r24, 0x00	; 0
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	1f 91       	pop	r17
     2d6:	0f 91       	pop	r16
     2d8:	ff 90       	pop	r15
     2da:	ef 90       	pop	r14
     2dc:	df 90       	pop	r13
     2de:	cf 90       	pop	r12
     2e0:	08 95       	ret

000002e2 <freqUp>:
#include "GUI.h"

int freqUp(GUI *self, int unUsed){
     2e2:	cf 92       	push	r12
     2e4:	df 92       	push	r13
     2e6:	ef 92       	push	r14
     2e8:	ff 92       	push	r15
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
	if(self->isLeft){
     2ee:	fc 01       	movw	r30, r24
     2f0:	24 81       	ldd	r18, Z+4	; 0x04
     2f2:	22 23       	and	r18, r18
     2f4:	99 f0       	breq	.+38     	; 0x31c <freqUp+0x3a>
		ASYNC(self->left, increase, 0);	
     2f6:	05 81       	ldd	r16, Z+5	; 0x05
     2f8:	16 81       	ldd	r17, Z+6	; 0x06
     2fa:	c1 2c       	mov	r12, r1
     2fc:	d1 2c       	mov	r13, r1
     2fe:	0f 2e       	mov	r0, r31
     300:	fb e8       	ldi	r31, 0x8B	; 139
     302:	ef 2e       	mov	r14, r31
     304:	f3 e0       	ldi	r31, 0x03	; 3
     306:	ff 2e       	mov	r15, r31
     308:	f0 2d       	mov	r31, r0
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	a9 01       	movw	r20, r18
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	cb 01       	movw	r24, r22
     316:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
     31a:	13 c0       	rjmp	.+38     	; 0x342 <freqUp+0x60>
	}else{
		ASYNC(self->right, increase, 0);
     31c:	fc 01       	movw	r30, r24
     31e:	07 81       	ldd	r16, Z+7	; 0x07
     320:	10 85       	ldd	r17, Z+8	; 0x08
     322:	c1 2c       	mov	r12, r1
     324:	d1 2c       	mov	r13, r1
     326:	0f 2e       	mov	r0, r31
     328:	fb e8       	ldi	r31, 0x8B	; 139
     32a:	ef 2e       	mov	r14, r31
     32c:	f3 e0       	ldi	r31, 0x03	; 3
     32e:	ff 2e       	mov	r15, r31
     330:	f0 2d       	mov	r31, r0
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	a9 01       	movw	r20, r18
     338:	60 e0       	ldi	r22, 0x00	; 0
     33a:	70 e0       	ldi	r23, 0x00	; 0
     33c:	cb 01       	movw	r24, r22
     33e:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	
	return 0;
}
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	1f 91       	pop	r17
     348:	0f 91       	pop	r16
     34a:	ff 90       	pop	r15
     34c:	ef 90       	pop	r14
     34e:	df 90       	pop	r13
     350:	cf 90       	pop	r12
     352:	08 95       	ret

00000354 <freqDown>:

int freqDown(GUI *self, int unUsed){
     354:	cf 92       	push	r12
     356:	df 92       	push	r13
     358:	ef 92       	push	r14
     35a:	ff 92       	push	r15
     35c:	0f 93       	push	r16
     35e:	1f 93       	push	r17
	if(self->isLeft){
     360:	fc 01       	movw	r30, r24
     362:	24 81       	ldd	r18, Z+4	; 0x04
     364:	22 23       	and	r18, r18
     366:	99 f0       	breq	.+38     	; 0x38e <freqDown+0x3a>
		ASYNC(self->left, decrease, 0);
     368:	05 81       	ldd	r16, Z+5	; 0x05
     36a:	16 81       	ldd	r17, Z+6	; 0x06
     36c:	c1 2c       	mov	r12, r1
     36e:	d1 2c       	mov	r13, r1
     370:	0f 2e       	mov	r0, r31
     372:	f2 ec       	ldi	r31, 0xC2	; 194
     374:	ef 2e       	mov	r14, r31
     376:	f3 e0       	ldi	r31, 0x03	; 3
     378:	ff 2e       	mov	r15, r31
     37a:	f0 2d       	mov	r31, r0
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	a9 01       	movw	r20, r18
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	cb 01       	movw	r24, r22
     388:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
     38c:	13 c0       	rjmp	.+38     	; 0x3b4 <freqDown+0x60>
	}else{
		ASYNC(self->right, decrease, 0);
     38e:	fc 01       	movw	r30, r24
     390:	07 81       	ldd	r16, Z+7	; 0x07
     392:	10 85       	ldd	r17, Z+8	; 0x08
     394:	c1 2c       	mov	r12, r1
     396:	d1 2c       	mov	r13, r1
     398:	0f 2e       	mov	r0, r31
     39a:	f2 ec       	ldi	r31, 0xC2	; 194
     39c:	ef 2e       	mov	r14, r31
     39e:	f3 e0       	ldi	r31, 0x03	; 3
     3a0:	ff 2e       	mov	r15, r31
     3a2:	f0 2d       	mov	r31, r0
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	a9 01       	movw	r20, r18
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	cb 01       	movw	r24, r22
     3b0:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	return 0;
}
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	ff 90       	pop	r15
     3be:	ef 90       	pop	r14
     3c0:	df 90       	pop	r13
     3c2:	cf 90       	pop	r12
     3c4:	08 95       	ret

000003c6 <switchState>:

int switchState(GUI *self, int unUsed){
     3c6:	fc 01       	movw	r30, r24
	self->isLeft = !self->isLeft;
     3c8:	24 81       	ldd	r18, Z+4	; 0x04
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	29 27       	eor	r18, r25
     3ce:	24 83       	std	Z+4, r18	; 0x04
	LCDDR13 ^= 1; //Indicator
     3d0:	e9 ef       	ldi	r30, 0xF9	; 249
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	80 81       	ld	r24, Z
     3d6:	98 27       	eor	r25, r24
     3d8:	90 83       	st	Z, r25
	return 0;
}
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	08 95       	ret

000003e0 <press>:

int press(GUI *self, int unUsed){
     3e0:	cf 92       	push	r12
     3e2:	df 92       	push	r13
     3e4:	ef 92       	push	r14
     3e6:	ff 92       	push	r15
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
	if(self->isLeft){
     3ec:	fc 01       	movw	r30, r24
     3ee:	24 81       	ldd	r18, Z+4	; 0x04
     3f0:	22 23       	and	r18, r18
     3f2:	99 f0       	breq	.+38     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
		ASYNC(self->left, reset, 0);  
     3f4:	05 81       	ldd	r16, Z+5	; 0x05
     3f6:	16 81       	ldd	r17, Z+6	; 0x06
     3f8:	c1 2c       	mov	r12, r1
     3fa:	d1 2c       	mov	r13, r1
     3fc:	0f 2e       	mov	r0, r31
     3fe:	f7 ef       	ldi	r31, 0xF7	; 247
     400:	ef 2e       	mov	r14, r31
     402:	f3 e0       	ldi	r31, 0x03	; 3
     404:	ff 2e       	mov	r15, r31
     406:	f0 2d       	mov	r31, r0
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	a9 01       	movw	r20, r18
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	cb 01       	movw	r24, r22
     414:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
     418:	13 c0       	rjmp	.+38     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
	} else {
		ASYNC(self->right, reset, 0); 
     41a:	fc 01       	movw	r30, r24
     41c:	07 81       	ldd	r16, Z+7	; 0x07
     41e:	10 85       	ldd	r17, Z+8	; 0x08
     420:	c1 2c       	mov	r12, r1
     422:	d1 2c       	mov	r13, r1
     424:	0f 2e       	mov	r0, r31
     426:	f7 ef       	ldi	r31, 0xF7	; 247
     428:	ef 2e       	mov	r14, r31
     42a:	f3 e0       	ldi	r31, 0x03	; 3
     42c:	ff 2e       	mov	r15, r31
     42e:	f0 2d       	mov	r31, r0
     430:	20 e0       	ldi	r18, 0x00	; 0
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	a9 01       	movw	r20, r18
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	cb 01       	movw	r24, r22
     43c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	return 0;
}
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	ff 90       	pop	r15
     44a:	ef 90       	pop	r14
     44c:	df 90       	pop	r13
     44e:	cf 90       	pop	r12
     450:	08 95       	ret

00000452 <startPulse>:

void startPulse(GUI *self, int unUsed){
     452:	08 95       	ret

00000454 <LCD_Init>:
#include "INIT.h"

void LCD_Init(void){
	//Use 32 kHz crystal oscillator
	//1/3 Bias and 1/4 duty, SEG0:SEG24 is used as port pins
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX0)| (1<<LCDMUX1)|(1<<LCDPM0) |(1<<LCDPM1) |(1<<LCDPM2);
     454:	87 eb       	ldi	r24, 0xB7	; 183
     456:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/* Using 16 as prescaler selection and 8 as LCD Clock Divide */
	/* gives a frame rate of 32 Hz */
	LCDFRR = (1<<LCDCD0) | (1<<LCDCD1) | (1<<LCDCD2);
     45a:	87 e0       	ldi	r24, 0x07	; 7
     45c:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	/* Set segment drive time to 300 μs and output voltage to 3.35 V*/
	LCDCCR = (1<<LCDDC0) | (1<<LCDCC1) | (1<<LCDCC2) | (1<<LCDCC3);
     460:	8e e2       	ldi	r24, 0x2E	; 46
     462:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	/* Enable LCD, low power waveform and no interrupt enabled */
	LCDCRA = (1<<LCDEN);
     466:	80 e8       	ldi	r24, 0x80	; 128
     468:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

	//Indicator bits 
	LCDDR13 ^= 1;
     46c:	e9 ef       	ldi	r30, 0xF9	; 249
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	90 81       	ld	r25, Z
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	89 27       	eor	r24, r25
     476:	80 83       	st	Z, r24
     478:	08 95       	ret

0000047a <CLK_Init>:
}

void CLK_Init(){
	// Timer
	DDRE |= (1 << PE4) | (1<< PE6) | (1<<PE5);
     47a:	8d b1       	in	r24, 0x0d	; 13
     47c:	80 67       	ori	r24, 0x70	; 112
     47e:	8d b9       	out	0x0d, r24	; 13
	PORTE |= (1<<PE5);
     480:	8e b1       	in	r24, 0x0e	; 14
     482:	80 62       	ori	r24, 0x20	; 32
     484:	8e b9       	out	0x0e, r24	; 14
     486:	08 95       	ret

00000488 <BUTTON_Init>:
}

void BUTTON_Init(){
	PORTB |= (1 << 7) | (1 << 6) | (1 << 4);
     488:	85 b1       	in	r24, 0x05	; 5
     48a:	80 6d       	ori	r24, 0xD0	; 208
     48c:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1 << 3) | (1 << 2);
     48e:	8e b1       	in	r24, 0x0e	; 14
     490:	8c 60       	ori	r24, 0x0C	; 12
     492:	8e b9       	out	0x0e, r24	; 14

    //Interrupt enables
	EIMSK  |= (1 << PCIE1) | (1 << PCIE0);
     494:	8d b3       	in	r24, 0x1d	; 29
     496:	80 6c       	ori	r24, 0xC0	; 192
     498:	8d bb       	out	0x1d, r24	; 29
	PCMSK1 |= (1 << PCINT12) | (1 << PCINT14) | (1 << PCINT15);
     49a:	ec e6       	ldi	r30, 0x6C	; 108
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	80 6d       	ori	r24, 0xD0	; 208
     4a2:	80 83       	st	Z, r24
	
	PCMSK0 |= (1 << PCINT2) | (1 << PCINT3);
     4a4:	eb e6       	ldi	r30, 0x6B	; 107
     4a6:	f0 e0       	ldi	r31, 0x00	; 0
     4a8:	80 81       	ld	r24, Z
     4aa:	8c 60       	ori	r24, 0x0C	; 12
     4ac:	80 83       	st	Z, r24
     4ae:	08 95       	ret

000004b0 <INIT>:
}

void INIT(){
	LCD_Init();
     4b0:	0e 94 2a 02 	call	0x454	; 0x454 <LCD_Init>
	CLK_Init();
     4b4:	0e 94 3d 02 	call	0x47a	; 0x47a <CLK_Init>
	BUTTON_Init();
     4b8:	0e 94 44 02 	call	0x488	; 0x488 <BUTTON_Init>
     4bc:	08 95       	ret

000004be <writeChar>:
	LCDDR6 = data2;
}

void writeChar(char ch, int pos){
	/* Returns if given input is not possible to print */
	if(pos < 0 || pos > 5 || ch < 48 || ch > 57){
     4be:	66 30       	cpi	r22, 0x06	; 6
     4c0:	71 05       	cpc	r23, r1
     4c2:	08 f0       	brcs	.+2      	; 0x4c6 <writeChar+0x8>
     4c4:	6e c0       	rjmp	.+220    	; 0x5a2 <__stack+0xa3>
     4c6:	80 33       	cpi	r24, 0x30	; 48
     4c8:	08 f4       	brcc	.+2      	; 0x4cc <writeChar+0xe>
     4ca:	6b c0       	rjmp	.+214    	; 0x5a2 <__stack+0xa3>
     4cc:	8a 33       	cpi	r24, 0x3A	; 58
     4ce:	08 f0       	brcs	.+2      	; 0x4d2 <writeChar+0x14>
     4d0:	68 c0       	rjmp	.+208    	; 0x5a2 <__stack+0xa3>
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
     4d2:	fb 01       	movw	r30, r22
     4d4:	e8 5f       	subi	r30, 0xF8	; 248
     4d6:	fe 4f       	sbci	r31, 0xFE	; 254
     4d8:	e0 81       	ld	r30, Z
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	e4 51       	subi	r30, 0x14	; 20
     4de:	ff 4f       	sbci	r31, 0xFF	; 255
	
	int number = (int)ch - 48;
     4e0:	a8 2f       	mov	r26, r24
     4e2:	b0 e0       	ldi	r27, 0x00	; 0
     4e4:	d0 97       	sbiw	r26, 0x30	; 48
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
     4e6:	61 70       	andi	r22, 0x01	; 1
     4e8:	70 78       	andi	r23, 0x80	; 128
     4ea:	77 23       	and	r23, r23
     4ec:	34 f4       	brge	.+12     	; 0x4fa <writeChar+0x3c>
     4ee:	61 50       	subi	r22, 0x01	; 1
     4f0:	71 09       	sbc	r23, r1
     4f2:	6e 6f       	ori	r22, 0xFE	; 254
     4f4:	7f 6f       	ori	r23, 0xFF	; 255
     4f6:	6f 5f       	subi	r22, 0xFF	; 255
     4f8:	7f 4f       	sbci	r23, 0xFF	; 255
     4fa:	61 30       	cpi	r22, 0x01	; 1
     4fc:	71 05       	cpc	r23, r1
     4fe:	71 f4       	brne	.+28     	; 0x51c <__stack+0x1d>
		shift = 4;
		lcd_base[0]  = lcd_base[0]  & 0x0F;
     500:	80 81       	ld	r24, Z
     502:	8f 70       	andi	r24, 0x0F	; 15
     504:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0x0F;
     506:	85 81       	ldd	r24, Z+5	; 0x05
     508:	8f 70       	andi	r24, 0x0F	; 15
     50a:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0x0F;
     50c:	82 85       	ldd	r24, Z+10	; 0x0a
     50e:	8f 70       	andi	r24, 0x0F	; 15
     510:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0x0F;
     512:	87 85       	ldd	r24, Z+15	; 0x0f
     514:	8f 70       	andi	r24, 0x0F	; 15
     516:	87 87       	std	Z+15, r24	; 0x0f
	
	int number = (int)ch - 48;
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
		shift = 4;
     518:	24 e0       	ldi	r18, 0x04	; 4
     51a:	0d c0       	rjmp	.+26     	; 0x536 <__stack+0x37>
		lcd_base[0]  = lcd_base[0]  & 0x0F;
		lcd_base[5]  = lcd_base[5]  & 0x0F;
		lcd_base[10] = lcd_base[10] & 0x0F;
		lcd_base[15] = lcd_base[15] & 0x0F;
		}else{
		lcd_base[0]  = lcd_base[0]  & 0xF0;
     51c:	80 81       	ld	r24, Z
     51e:	80 7f       	andi	r24, 0xF0	; 240
     520:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0xF0;
     522:	85 81       	ldd	r24, Z+5	; 0x05
     524:	80 7f       	andi	r24, 0xF0	; 240
     526:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0xF0;
     528:	82 85       	ldd	r24, Z+10	; 0x0a
     52a:	80 7f       	andi	r24, 0xF0	; 240
     52c:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0xF0;
     52e:	87 85       	ldd	r24, Z+15	; 0x0f
     530:	80 7f       	andi	r24, 0xF0	; 240
     532:	87 87       	std	Z+15, r24	; 0x0f
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
	
	int number = (int)ch - 48;
	int shift = 0;
     534:	20 e0       	ldi	r18, 0x00	; 0
		lcd_base[5]  = lcd_base[5]  & 0xF0;
		lcd_base[10] = lcd_base[10] & 0xF0;
		lcd_base[15] = lcd_base[15] & 0xF0;
	}
	/*Writes to the display*/
	lcd_base[0]  = charCodes[number][0]<<shift | lcd_base[0] ;
     536:	aa 0f       	add	r26, r26
     538:	bb 1f       	adc	r27, r27
     53a:	aa 0f       	add	r26, r26
     53c:	bb 1f       	adc	r27, r27
     53e:	a0 5f       	subi	r26, 0xF0	; 240
     540:	be 4f       	sbci	r27, 0xFE	; 254
     542:	8c 91       	ld	r24, X
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	02 2e       	mov	r0, r18
     548:	02 c0       	rjmp	.+4      	; 0x54e <__stack+0x4f>
     54a:	88 0f       	add	r24, r24
     54c:	99 1f       	adc	r25, r25
     54e:	0a 94       	dec	r0
     550:	e2 f7       	brpl	.-8      	; 0x54a <__stack+0x4b>
     552:	90 81       	ld	r25, Z
     554:	89 2b       	or	r24, r25
     556:	80 83       	st	Z, r24
	lcd_base[5]  = charCodes[number][1]<<shift | lcd_base[5] ;
     558:	11 96       	adiw	r26, 0x01	; 1
     55a:	8c 91       	ld	r24, X
     55c:	11 97       	sbiw	r26, 0x01	; 1
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	02 2e       	mov	r0, r18
     562:	02 c0       	rjmp	.+4      	; 0x568 <__stack+0x69>
     564:	88 0f       	add	r24, r24
     566:	99 1f       	adc	r25, r25
     568:	0a 94       	dec	r0
     56a:	e2 f7       	brpl	.-8      	; 0x564 <__stack+0x65>
     56c:	95 81       	ldd	r25, Z+5	; 0x05
     56e:	89 2b       	or	r24, r25
     570:	85 83       	std	Z+5, r24	; 0x05
	lcd_base[10] = charCodes[number][2]<<shift | lcd_base[10];
     572:	12 96       	adiw	r26, 0x02	; 2
     574:	8c 91       	ld	r24, X
     576:	12 97       	sbiw	r26, 0x02	; 2
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	02 2e       	mov	r0, r18
     57c:	02 c0       	rjmp	.+4      	; 0x582 <__stack+0x83>
     57e:	88 0f       	add	r24, r24
     580:	99 1f       	adc	r25, r25
     582:	0a 94       	dec	r0
     584:	e2 f7       	brpl	.-8      	; 0x57e <__stack+0x7f>
     586:	92 85       	ldd	r25, Z+10	; 0x0a
     588:	89 2b       	or	r24, r25
     58a:	82 87       	std	Z+10, r24	; 0x0a
	lcd_base[15] = charCodes[number][3]<<shift | lcd_base[15];
     58c:	13 96       	adiw	r26, 0x03	; 3
     58e:	8c 91       	ld	r24, X
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	02 c0       	rjmp	.+4      	; 0x598 <__stack+0x99>
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	2a 95       	dec	r18
     59a:	e2 f7       	brpl	.-8      	; 0x594 <__stack+0x95>
     59c:	97 85       	ldd	r25, Z+15	; 0x0f
     59e:	89 2b       	or	r24, r25
     5a0:	87 87       	std	Z+15, r24	; 0x0f
     5a2:	08 95       	ret

000005a4 <printAt>:
}
	
int printAt(LCD_Driver *self, const int map) {
     5a4:	ef 92       	push	r14
     5a6:	ff 92       	push	r15
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
	union PrintPun p = {.map = map};
	int pp;
	pp = p.args.pos;
     5b0:	c6 2f       	mov	r28, r22
     5b2:	cc 1f       	adc	r28, r28
     5b4:	cc 27       	eor	r28, r28
     5b6:	cc 1f       	adc	r28, r28
     5b8:	73 70       	andi	r23, 0x03	; 3
     5ba:	77 0f       	add	r23, r23
     5bc:	7c 2b       	or	r23, r28
     5be:	c7 2f       	mov	r28, r23
     5c0:	d0 e0       	ldi	r29, 0x00	; 0
	int num = p.args.num;
     5c2:	6f 77       	andi	r22, 0x7F	; 127
     5c4:	06 2f       	mov	r16, r22
     5c6:	10 e0       	ldi	r17, 0x00	; 0
	writeChar( (num % 100) / 10 + '0', pp);
     5c8:	c8 01       	movw	r24, r16
     5ca:	64 e6       	ldi	r22, 0x64	; 100
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	0e 94 97 10 	call	0x212e	; 0x212e <__divmodhi4>
     5d2:	0f 2e       	mov	r0, r31
     5d4:	fa e0       	ldi	r31, 0x0A	; 10
     5d6:	ef 2e       	mov	r14, r31
     5d8:	f1 2c       	mov	r15, r1
     5da:	f0 2d       	mov	r31, r0
     5dc:	b7 01       	movw	r22, r14
     5de:	0e 94 97 10 	call	0x212e	; 0x212e <__divmodhi4>
     5e2:	86 2f       	mov	r24, r22
     5e4:	be 01       	movw	r22, r28
     5e6:	80 5d       	subi	r24, 0xD0	; 208
     5e8:	0e 94 5f 02 	call	0x4be	; 0x4be <writeChar>
	pp++;
     5ec:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     5ee:	c8 01       	movw	r24, r16
     5f0:	b7 01       	movw	r22, r14
     5f2:	0e 94 97 10 	call	0x212e	; 0x212e <__divmodhi4>
     5f6:	be 01       	movw	r22, r28
     5f8:	80 5d       	subi	r24, 0xD0	; 208
     5fa:	0e 94 5f 02 	call	0x4be	; 0x4be <writeChar>
	
	return 0;
}
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	1f 91       	pop	r17
     608:	0f 91       	pop	r16
     60a:	ff 90       	pop	r15
     60c:	ef 90       	pop	r14
     60e:	08 95       	ret

00000610 <main>:
#include "InteruptHandler.h"



int main(void)
{    
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	c0 54       	subi	r28, 0x40	; 64
     61e:	d1 09       	sbc	r29, r1
     620:	0f b6       	in	r0, 0x3f	; 63
     622:	f8 94       	cli
     624:	de bf       	out	0x3e, r29	; 62
     626:	0f be       	out	0x3f, r0	; 63
     628:	cd bf       	out	0x3d, r28	; 61
	INIT();
     62a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <INIT>
	PulseController pulseController = initPulseController();
     62e:	1a 82       	std	Y+2, r1	; 0x02
     630:	19 82       	std	Y+1, r1	; 0x01
     632:	1c 82       	std	Y+4, r1	; 0x04
     634:	1b 82       	std	Y+3, r1	; 0x03
	LCD_Driver display = initLCD_Driver();
     636:	1e 82       	std	Y+6, r1	; 0x06
     638:	1d 82       	std	Y+5, r1	; 0x05
     63a:	18 86       	std	Y+8, r1	; 0x08
     63c:	1f 82       	std	Y+7, r1	; 0x07
	PulseGenerator pulseLeft = initPulseGenerator(0, 1, 1, &pulseController, &display);
     63e:	1a 86       	std	Y+10, r1	; 0x0a
     640:	19 86       	std	Y+9, r1	; 0x09
     642:	1c 86       	std	Y+12, r1	; 0x0c
     644:	1b 86       	std	Y+11, r1	; 0x0b
     646:	1e 86       	std	Y+14, r1	; 0x0e
     648:	1d 86       	std	Y+13, r1	; 0x0d
     64a:	18 8a       	std	Y+16, r1	; 0x10
     64c:	1f 86       	std	Y+15, r1	; 0x0f
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	9a 8b       	std	Y+18, r25	; 0x12
     654:	89 8b       	std	Y+17, r24	; 0x11
     656:	9c 8b       	std	Y+20, r25	; 0x14
     658:	8b 8b       	std	Y+19, r24	; 0x13
     65a:	9e 01       	movw	r18, r28
     65c:	2f 5f       	subi	r18, 0xFF	; 255
     65e:	3f 4f       	sbci	r19, 0xFF	; 255
     660:	3e 8b       	std	Y+22, r19	; 0x16
     662:	2d 8b       	std	Y+21, r18	; 0x15
     664:	ce 01       	movw	r24, r28
     666:	05 96       	adiw	r24, 0x05	; 5
     668:	98 8f       	std	Y+24, r25	; 0x18
     66a:	8f 8b       	std	Y+23, r24	; 0x17
	PulseGenerator pulseRight = initPulseGenerator(0, 4, 3, &pulseController, &display);
     66c:	1a 8e       	std	Y+26, r1	; 0x1a
     66e:	19 8e       	std	Y+25, r1	; 0x19
     670:	1c 8e       	std	Y+28, r1	; 0x1c
     672:	1b 8e       	std	Y+27, r1	; 0x1b
     674:	1e 8e       	std	Y+30, r1	; 0x1e
     676:	1d 8e       	std	Y+29, r1	; 0x1d
     678:	18 a2       	std	Y+32, r1	; 0x20
     67a:	1f 8e       	std	Y+31, r1	; 0x1f
     67c:	44 e0       	ldi	r20, 0x04	; 4
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	5a a3       	std	Y+34, r21	; 0x22
     682:	49 a3       	std	Y+33, r20	; 0x21
     684:	43 e0       	ldi	r20, 0x03	; 3
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	5c a3       	std	Y+36, r21	; 0x24
     68a:	4b a3       	std	Y+35, r20	; 0x23
     68c:	3e a3       	std	Y+38, r19	; 0x26
     68e:	2d a3       	std	Y+37, r18	; 0x25
     690:	98 a7       	std	Y+40, r25	; 0x28
     692:	8f a3       	std	Y+39, r24	; 0x27
	GUI gui = initGUI(&pulseLeft, &pulseRight);
     694:	1a a6       	std	Y+42, r1	; 0x2a
     696:	19 a6       	std	Y+41, r1	; 0x29
     698:	1c a6       	std	Y+44, r1	; 0x2c
     69a:	1b a6       	std	Y+43, r1	; 0x2b
     69c:	1d a6       	std	Y+45, r1	; 0x2d
     69e:	04 96       	adiw	r24, 0x04	; 4
     6a0:	9f a7       	std	Y+47, r25	; 0x2f
     6a2:	8e a7       	std	Y+46, r24	; 0x2e
     6a4:	40 96       	adiw	r24, 0x10	; 16
     6a6:	99 ab       	std	Y+49, r25	; 0x31
     6a8:	88 ab       	std	Y+48, r24	; 0x30
	Joystick joy = initJoystick(&gui);
     6aa:	fe 01       	movw	r30, r28
     6ac:	f2 96       	adiw	r30, 0x32	; 50
     6ae:	88 e0       	ldi	r24, 0x08	; 8
     6b0:	df 01       	movw	r26, r30
     6b2:	1d 92       	st	X+, r1
     6b4:	8a 95       	dec	r24
     6b6:	e9 f7       	brne	.-6      	; 0x6b2 <main+0xa2>
     6b8:	8e 01       	movw	r16, r28
     6ba:	07 5d       	subi	r16, 0xD7	; 215
     6bc:	1f 4f       	sbci	r17, 0xFF	; 255
     6be:	1f ab       	std	Y+55, r17	; 0x37
     6c0:	0e ab       	std	Y+54, r16	; 0x36
	InterruptHandler inter = initInterruptHandler(&joy);
     6c2:	1b ae       	std	Y+59, r1	; 0x3b
     6c4:	1a ae       	std	Y+58, r1	; 0x3a
     6c6:	1d ae       	std	Y+61, r1	; 0x3d
     6c8:	1c ae       	std	Y+60, r1	; 0x3c
     6ca:	ff af       	std	Y+63, r31	; 0x3f
     6cc:	ee af       	std	Y+62, r30	; 0x3e
     6ce:	21 96       	adiw	r28, 0x01	; 1
     6d0:	1f ae       	std	Y+63, r1	; 0x3f
     6d2:	21 97       	sbiw	r28, 0x01	; 1
	INSTALL(&inter, Switch, IRQ_PCINT0);
     6d4:	41 e0       	ldi	r20, 0x01	; 1
     6d6:	6d e4       	ldi	r22, 0x4D	; 77
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	ce 01       	movw	r24, r28
     6dc:	ca 96       	adiw	r24, 0x3a	; 58
     6de:	0e 94 65 10 	call	0x20ca	; 0x20ca <install>
	INSTALL(&inter, Change, IRQ_PCINT1);
     6e2:	42 e0       	ldi	r20, 0x02	; 2
     6e4:	65 e7       	ldi	r22, 0x75	; 117
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	ce 01       	movw	r24, r28
     6ea:	ca 96       	adiw	r24, 0x3a	; 58
     6ec:	0e 94 65 10 	call	0x20ca	; 0x20ca <install>
	return TINYTIMBER(&gui, startPulse, 0);
     6f0:	40 e0       	ldi	r20, 0x00	; 0
     6f2:	50 e0       	ldi	r21, 0x00	; 0
     6f4:	69 e2       	ldi	r22, 0x29	; 41
     6f6:	72 e0       	ldi	r23, 0x02	; 2
     6f8:	c8 01       	movw	r24, r16
     6fa:	0e 94 80 10 	call	0x2100	; 0x2100 <tinytimber>
     6fe:	c0 5c       	subi	r28, 0xC0	; 192
     700:	df 4f       	sbci	r29, 0xFF	; 255
     702:	0f b6       	in	r0, 0x3f	; 63
     704:	f8 94       	cli
     706:	de bf       	out	0x3e, r29	; 62
     708:	0f be       	out	0x3f, r0	; 63
     70a:	cd bf       	out	0x3d, r28	; 61
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	1f 91       	pop	r17
     712:	0f 91       	pop	r16
     714:	08 95       	ret

00000716 <increase>:
#include "PulseGenerator.h"

int increase(PulseGenerator *self, int unused){
     716:	cf 92       	push	r12
     718:	df 92       	push	r13
     71a:	ef 92       	push	r14
     71c:	ff 92       	push	r15
     71e:	0f 93       	push	r16
     720:	1f 93       	push	r17
	if (!(self->currentFreq >= 99)){
     722:	fc 01       	movw	r30, r24
     724:	c4 80       	ldd	r12, Z+4	; 0x04
     726:	d5 80       	ldd	r13, Z+5	; 0x05
     728:	f3 e6       	ldi	r31, 0x63	; 99
     72a:	cf 16       	cp	r12, r31
     72c:	d1 04       	cpc	r13, r1
     72e:	0c f5       	brge	.+66     	; 0x772 <increase+0x5c>
     730:	fc 01       	movw	r30, r24
		self->currentFreq += 1;
     732:	96 01       	movw	r18, r12
     734:	2f 5f       	subi	r18, 0xFF	; 255
     736:	3f 4f       	sbci	r19, 0xFF	; 255
     738:	35 83       	std	Z+5, r19	; 0x05
     73a:	24 83       	std	Z+4, r18	; 0x04
		ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     73c:	d0 84       	ldd	r13, Z+8	; 0x08
     73e:	cd 2c       	mov	r12, r13
     740:	c7 94       	ror	r12
     742:	cc 24       	eor	r12, r12
     744:	c7 94       	ror	r12
     746:	2f 77       	andi	r18, 0x7F	; 127
     748:	c2 2a       	or	r12, r18
     74a:	8d 2d       	mov	r24, r13
     74c:	86 95       	lsr	r24
     74e:	83 70       	andi	r24, 0x03	; 3
     750:	d8 2e       	mov	r13, r24
     752:	06 85       	ldd	r16, Z+14	; 0x0e
     754:	17 85       	ldd	r17, Z+15	; 0x0f
     756:	0f 2e       	mov	r0, r31
     758:	f2 ed       	ldi	r31, 0xD2	; 210
     75a:	ef 2e       	mov	r14, r31
     75c:	f2 e0       	ldi	r31, 0x02	; 2
     75e:	ff 2e       	mov	r15, r31
     760:	f0 2d       	mov	r31, r0
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	a9 01       	movw	r20, r18
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	70 e0       	ldi	r23, 0x00	; 0
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	}
	return 0;
}
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	1f 91       	pop	r17
     778:	0f 91       	pop	r16
     77a:	ff 90       	pop	r15
     77c:	ef 90       	pop	r14
     77e:	df 90       	pop	r13
     780:	cf 90       	pop	r12
     782:	08 95       	ret

00000784 <decrease>:

int decrease(PulseGenerator *self, int unused){
     784:	cf 92       	push	r12
     786:	df 92       	push	r13
     788:	ef 92       	push	r14
     78a:	ff 92       	push	r15
     78c:	0f 93       	push	r16
     78e:	1f 93       	push	r17
     790:	fc 01       	movw	r30, r24
	if (self->currentFreq > 0) self->currentFreq -= 1;
     792:	84 81       	ldd	r24, Z+4	; 0x04
     794:	95 81       	ldd	r25, Z+5	; 0x05
     796:	18 16       	cp	r1, r24
     798:	19 06       	cpc	r1, r25
     79a:	1c f4       	brge	.+6      	; 0x7a2 <decrease+0x1e>
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	95 83       	std	Z+5, r25	; 0x05
     7a0:	84 83       	std	Z+4, r24	; 0x04
	
	ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     7a2:	94 81       	ldd	r25, Z+4	; 0x04
     7a4:	d0 84       	ldd	r13, Z+8	; 0x08
     7a6:	8d 2d       	mov	r24, r13
     7a8:	87 95       	ror	r24
     7aa:	88 27       	eor	r24, r24
     7ac:	87 95       	ror	r24
     7ae:	9f 77       	andi	r25, 0x7F	; 127
     7b0:	c9 2e       	mov	r12, r25
     7b2:	c8 2a       	or	r12, r24
     7b4:	8d 2d       	mov	r24, r13
     7b6:	86 95       	lsr	r24
     7b8:	83 70       	andi	r24, 0x03	; 3
     7ba:	d8 2e       	mov	r13, r24
     7bc:	06 85       	ldd	r16, Z+14	; 0x0e
     7be:	17 85       	ldd	r17, Z+15	; 0x0f
     7c0:	0f 2e       	mov	r0, r31
     7c2:	f2 ed       	ldi	r31, 0xD2	; 210
     7c4:	ef 2e       	mov	r14, r31
     7c6:	f2 e0       	ldi	r31, 0x02	; 2
     7c8:	ff 2e       	mov	r15, r31
     7ca:	f0 2d       	mov	r31, r0
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	a9 01       	movw	r20, r18
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	cb 01       	movw	r24, r22
     7d8:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	
	return 0;
}
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	1f 91       	pop	r17
     7e2:	0f 91       	pop	r16
     7e4:	ff 90       	pop	r15
     7e6:	ef 90       	pop	r14
     7e8:	df 90       	pop	r13
     7ea:	cf 90       	pop	r12
     7ec:	08 95       	ret

000007ee <reset>:

int reset(PulseGenerator *self, int unused){
     7ee:	cf 92       	push	r12
     7f0:	df 92       	push	r13
     7f2:	ef 92       	push	r14
     7f4:	ff 92       	push	r15
     7f6:	0f 93       	push	r16
     7f8:	1f 93       	push	r17
     7fa:	fc 01       	movw	r30, r24
	if (self->currentFreq == 0){
     7fc:	84 81       	ldd	r24, Z+4	; 0x04
     7fe:	95 81       	ldd	r25, Z+5	; 0x05
     800:	00 97       	sbiw	r24, 0x00	; 0
     802:	29 f4       	brne	.+10     	; 0x80e <reset+0x20>
		self->currentFreq = self->lastFreq;
     804:	86 81       	ldd	r24, Z+6	; 0x06
     806:	97 81       	ldd	r25, Z+7	; 0x07
     808:	95 83       	std	Z+5, r25	; 0x05
     80a:	84 83       	std	Z+4, r24	; 0x04
     80c:	04 c0       	rjmp	.+8      	; 0x816 <reset+0x28>
	}
	else{
		self->lastFreq = self->currentFreq;
     80e:	97 83       	std	Z+7, r25	; 0x07
     810:	86 83       	std	Z+6, r24	; 0x06
		self->currentFreq = 0;
     812:	15 82       	std	Z+5, r1	; 0x05
     814:	14 82       	std	Z+4, r1	; 0x04
	}
	ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     816:	94 81       	ldd	r25, Z+4	; 0x04
     818:	d0 84       	ldd	r13, Z+8	; 0x08
     81a:	8d 2d       	mov	r24, r13
     81c:	87 95       	ror	r24
     81e:	88 27       	eor	r24, r24
     820:	87 95       	ror	r24
     822:	9f 77       	andi	r25, 0x7F	; 127
     824:	c9 2e       	mov	r12, r25
     826:	c8 2a       	or	r12, r24
     828:	8d 2d       	mov	r24, r13
     82a:	86 95       	lsr	r24
     82c:	83 70       	andi	r24, 0x03	; 3
     82e:	d8 2e       	mov	r13, r24
     830:	06 85       	ldd	r16, Z+14	; 0x0e
     832:	17 85       	ldd	r17, Z+15	; 0x0f
     834:	0f 2e       	mov	r0, r31
     836:	f2 ed       	ldi	r31, 0xD2	; 210
     838:	ef 2e       	mov	r14, r31
     83a:	f2 e0       	ldi	r31, 0x02	; 2
     83c:	ff 2e       	mov	r15, r31
     83e:	f0 2d       	mov	r31, r0
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	a9 01       	movw	r20, r18
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	70 e0       	ldi	r23, 0x00	; 0
     84a:	cb 01       	movw	r24, r22
     84c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
	
	return 0;
}
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	ef 90       	pop	r14
     85c:	df 90       	pop	r13
     85e:	cf 90       	pop	r12
     860:	08 95       	ret

00000862 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	00 d0       	rcall	.+0      	; 0x868 <initialize+0x6>
     868:	00 d0       	rcall	.+0      	; 0x86a <initialize+0x8>
     86a:	cd b7       	in	r28, 0x3d	; 61
     86c:	de b7       	in	r29, 0x3e	; 62
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	18 c0       	rjmp	.+48     	; 0x8a4 <initialize+0x42>
     874:	ac 01       	movw	r20, r24
     876:	4f 5f       	subi	r20, 0xFF	; 255
     878:	5f 4f       	sbci	r21, 0xFF	; 255
     87a:	9a 01       	movw	r18, r20
     87c:	22 95       	swap	r18
     87e:	32 95       	swap	r19
     880:	30 7f       	andi	r19, 0xF0	; 240
     882:	32 27       	eor	r19, r18
     884:	20 7f       	andi	r18, 0xF0	; 240
     886:	32 27       	eor	r19, r18
     888:	25 5e       	subi	r18, 0xE5	; 229
     88a:	3d 4f       	sbci	r19, 0xFD	; 253
     88c:	82 95       	swap	r24
     88e:	92 95       	swap	r25
     890:	90 7f       	andi	r25, 0xF0	; 240
     892:	98 27       	eor	r25, r24
     894:	80 7f       	andi	r24, 0xF0	; 240
     896:	98 27       	eor	r25, r24
     898:	fc 01       	movw	r30, r24
     89a:	e5 5e       	subi	r30, 0xE5	; 229
     89c:	fd 4f       	sbci	r31, 0xFD	; 253
     89e:	31 83       	std	Z+1, r19	; 0x01
     8a0:	20 83       	st	Z, r18
     8a2:	ca 01       	movw	r24, r20
     8a4:	8e 30       	cpi	r24, 0x0E	; 14
     8a6:	91 05       	cpc	r25, r1
     8a8:	2c f3       	brlt	.-54     	; 0x874 <initialize+0x12>
     8aa:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     8ae:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	15 c0       	rjmp	.+42     	; 0x8e2 <initialize+0x80>
     8b8:	ac 01       	movw	r20, r24
     8ba:	4f 5f       	subi	r20, 0xFF	; 255
     8bc:	5f 4f       	sbci	r21, 0xFF	; 255
     8be:	6d e1       	ldi	r22, 0x1D	; 29
     8c0:	64 9f       	mul	r22, r20
     8c2:	90 01       	movw	r18, r0
     8c4:	65 9f       	mul	r22, r21
     8c6:	30 0d       	add	r19, r0
     8c8:	11 24       	eor	r1, r1
     8ca:	2a 59       	subi	r18, 0x9A	; 154
     8cc:	3e 4f       	sbci	r19, 0xFE	; 254
     8ce:	68 9f       	mul	r22, r24
     8d0:	f0 01       	movw	r30, r0
     8d2:	69 9f       	mul	r22, r25
     8d4:	f0 0d       	add	r31, r0
     8d6:	11 24       	eor	r1, r1
     8d8:	ea 59       	subi	r30, 0x9A	; 154
     8da:	fe 4f       	sbci	r31, 0xFE	; 254
     8dc:	31 83       	std	Z+1, r19	; 0x01
     8de:	20 83       	st	Z, r18
     8e0:	ca 01       	movw	r24, r20
     8e2:	83 30       	cpi	r24, 0x03	; 3
     8e4:	91 05       	cpc	r25, r1
     8e6:	44 f3       	brlt	.-48     	; 0x8b8 <initialize+0x56>
     8e8:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <threads+0x58>
     8ec:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <threads+0x57>
     8f0:	1a 82       	std	Y+2, r1	; 0x02
     8f2:	19 82       	std	Y+1, r1	; 0x01
     8f4:	32 c0       	rjmp	.+100    	; 0x95a <initialize+0xf8>
     8f6:	2d e1       	ldi	r18, 0x1D	; 29
     8f8:	49 81       	ldd	r20, Y+1	; 0x01
     8fa:	5a 81       	ldd	r21, Y+2	; 0x02
     8fc:	24 9f       	mul	r18, r20
     8fe:	c0 01       	movw	r24, r0
     900:	25 9f       	mul	r18, r21
     902:	90 0d       	add	r25, r0
     904:	11 24       	eor	r1, r1
     906:	fc 01       	movw	r30, r24
     908:	e4 59       	subi	r30, 0x94	; 148
     90a:	fe 4f       	sbci	r31, 0xFE	; 254
     90c:	fc 83       	std	Y+4, r31	; 0x04
     90e:	eb 83       	std	Y+3, r30	; 0x03
     910:	cf 01       	movw	r24, r30
     912:	0e 94 bf 10 	call	0x217e	; 0x217e <setjmp>
     916:	20 e6       	ldi	r18, 0x60	; 96
     918:	49 81       	ldd	r20, Y+1	; 0x01
     91a:	5a 81       	ldd	r21, Y+2	; 0x02
     91c:	24 9f       	mul	r18, r20
     91e:	c0 01       	movw	r24, r0
     920:	25 9f       	mul	r18, r21
     922:	90 0d       	add	r25, r0
     924:	11 24       	eor	r1, r1
     926:	89 59       	subi	r24, 0x99	; 153
     928:	9c 4f       	sbci	r25, 0xFC	; 252
     92a:	eb 81       	ldd	r30, Y+3	; 0x03
     92c:	fc 81       	ldd	r31, Y+4	; 0x04
     92e:	91 8b       	std	Z+17, r25	; 0x11
     930:	80 8b       	std	Z+16, r24	; 0x10
     932:	93 8b       	std	Z+19, r25	; 0x13
     934:	82 8b       	std	Z+18, r24	; 0x12
     936:	8d e0       	ldi	r24, 0x0D	; 13
     938:	90 e1       	ldi	r25, 0x10	; 16
     93a:	96 8b       	std	Z+22, r25	; 0x16
     93c:	85 8b       	std	Z+21, r24	; 0x15
     93e:	8d e1       	ldi	r24, 0x1D	; 29
     940:	84 9f       	mul	r24, r20
     942:	f0 01       	movw	r30, r0
     944:	85 9f       	mul	r24, r21
     946:	f0 0d       	add	r31, r0
     948:	11 24       	eor	r1, r1
     94a:	ea 59       	subi	r30, 0x9A	; 154
     94c:	fe 4f       	sbci	r31, 0xFE	; 254
     94e:	15 82       	std	Z+5, r1	; 0x05
     950:	14 82       	std	Z+4, r1	; 0x04
     952:	4f 5f       	subi	r20, 0xFF	; 255
     954:	5f 4f       	sbci	r21, 0xFF	; 255
     956:	5a 83       	std	Y+2, r21	; 0x02
     958:	49 83       	std	Y+1, r20	; 0x01
     95a:	29 81       	ldd	r18, Y+1	; 0x01
     95c:	3a 81       	ldd	r19, Y+2	; 0x02
     95e:	24 30       	cpi	r18, 0x04	; 4
     960:	31 05       	cpc	r19, r1
     962:	4c f2       	brlt	.-110    	; 0x8f6 <initialize+0x94>
     964:	ee ef       	ldi	r30, 0xFE	; 254
     966:	f1 e0       	ldi	r31, 0x01	; 1
     968:	11 82       	std	Z+1, r1	; 0x01
     96a:	10 82       	st	Z, r1
     96c:	15 82       	std	Z+5, r1	; 0x05
     96e:	14 82       	std	Z+4, r1	; 0x04
     970:	13 82       	std	Z+3, r1	; 0x03
     972:	12 82       	std	Z+2, r1	; 0x02
     974:	e1 e6       	ldi	r30, 0x61	; 97
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	80 e8       	ldi	r24, 0x80	; 128
     97a:	80 83       	st	Z, r24
     97c:	10 82       	st	Z, r1
     97e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     982:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     986:	84 e0       	ldi	r24, 0x04	; 4
     988:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     992:	0f 90       	pop	r0
     994:	0f 90       	pop	r0
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	08 95       	ret

000009a0 <dispatch>:
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	00 d0       	rcall	.+0      	; 0x9a6 <dispatch+0x6>
     9a6:	cd b7       	in	r28, 0x3d	; 61
     9a8:	de b7       	in	r29, 0x3e	; 62
     9aa:	9a 83       	std	Y+2, r25	; 0x02
     9ac:	89 83       	std	Y+1, r24	; 0x01
     9ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9b6:	06 96       	adiw	r24, 0x06	; 6
     9b8:	0e 94 bf 10 	call	0x217e	; 0x217e <setjmp>
     9bc:	89 2b       	or	r24, r25
     9be:	59 f4       	brne	.+22     	; 0x9d6 <dispatch+0x36>
     9c0:	89 81       	ldd	r24, Y+1	; 0x01
     9c2:	9a 81       	ldd	r25, Y+2	; 0x02
     9c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     9cc:	61 e0       	ldi	r22, 0x01	; 1
     9ce:	70 e0       	ldi	r23, 0x00	; 0
     9d0:	06 96       	adiw	r24, 0x06	; 6
     9d2:	0e 94 df 10 	call	0x21be	; 0x21be <longjmp>
     9d6:	0f 90       	pop	r0
     9d8:	0f 90       	pop	r0
     9da:	df 91       	pop	r29
     9dc:	cf 91       	pop	r28
     9de:	08 95       	ret

000009e0 <enqueueByDeadline>:
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	dc 01       	movw	r26, r24
     9ea:	cb 01       	movw	r24, r22
     9ec:	eb 01       	movw	r28, r22
     9ee:	e8 81       	ld	r30, Y
     9f0:	f9 81       	ldd	r31, Y+1	; 0x01
     9f2:	c0 e0       	ldi	r28, 0x00	; 0
     9f4:	d0 e0       	ldi	r29, 0x00	; 0
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <enqueueByDeadline+0x20>
     9f8:	ef 01       	movw	r28, r30
     9fa:	01 90       	ld	r0, Z+
     9fc:	f0 81       	ld	r31, Z
     9fe:	e0 2d       	mov	r30, r0
     a00:	30 97       	sbiw	r30, 0x00	; 0
     a02:	79 f0       	breq	.+30     	; 0xa22 <enqueueByDeadline+0x42>
     a04:	06 81       	ldd	r16, Z+6	; 0x06
     a06:	17 81       	ldd	r17, Z+7	; 0x07
     a08:	20 85       	ldd	r18, Z+8	; 0x08
     a0a:	31 85       	ldd	r19, Z+9	; 0x09
     a0c:	16 96       	adiw	r26, 0x06	; 6
     a0e:	4d 91       	ld	r20, X+
     a10:	5d 91       	ld	r21, X+
     a12:	6d 91       	ld	r22, X+
     a14:	7c 91       	ld	r23, X
     a16:	19 97       	sbiw	r26, 0x09	; 9
     a18:	40 17       	cp	r20, r16
     a1a:	51 07       	cpc	r21, r17
     a1c:	62 07       	cpc	r22, r18
     a1e:	73 07       	cpc	r23, r19
     a20:	5c f7       	brge	.-42     	; 0x9f8 <enqueueByDeadline+0x18>
     a22:	11 96       	adiw	r26, 0x01	; 1
     a24:	fc 93       	st	X, r31
     a26:	ee 93       	st	-X, r30
     a28:	20 97       	sbiw	r28, 0x00	; 0
     a2a:	21 f4       	brne	.+8      	; 0xa34 <enqueueByDeadline+0x54>
     a2c:	fc 01       	movw	r30, r24
     a2e:	b1 83       	std	Z+1, r27	; 0x01
     a30:	a0 83       	st	Z, r26
     a32:	02 c0       	rjmp	.+4      	; 0xa38 <enqueueByDeadline+0x58>
     a34:	b9 83       	std	Y+1, r27	; 0x01
     a36:	a8 83       	st	Y, r26
     a38:	df 91       	pop	r29
     a3a:	cf 91       	pop	r28
     a3c:	1f 91       	pop	r17
     a3e:	0f 91       	pop	r16
     a40:	08 95       	ret

00000a42 <enqueueByBaseline>:
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	dc 01       	movw	r26, r24
     a4c:	cb 01       	movw	r24, r22
     a4e:	eb 01       	movw	r28, r22
     a50:	e8 81       	ld	r30, Y
     a52:	f9 81       	ldd	r31, Y+1	; 0x01
     a54:	c0 e0       	ldi	r28, 0x00	; 0
     a56:	d0 e0       	ldi	r29, 0x00	; 0
     a58:	04 c0       	rjmp	.+8      	; 0xa62 <enqueueByBaseline+0x20>
     a5a:	ef 01       	movw	r28, r30
     a5c:	01 90       	ld	r0, Z+
     a5e:	f0 81       	ld	r31, Z
     a60:	e0 2d       	mov	r30, r0
     a62:	30 97       	sbiw	r30, 0x00	; 0
     a64:	79 f0       	breq	.+30     	; 0xa84 <enqueueByBaseline+0x42>
     a66:	02 81       	ldd	r16, Z+2	; 0x02
     a68:	13 81       	ldd	r17, Z+3	; 0x03
     a6a:	24 81       	ldd	r18, Z+4	; 0x04
     a6c:	35 81       	ldd	r19, Z+5	; 0x05
     a6e:	12 96       	adiw	r26, 0x02	; 2
     a70:	4d 91       	ld	r20, X+
     a72:	5d 91       	ld	r21, X+
     a74:	6d 91       	ld	r22, X+
     a76:	7c 91       	ld	r23, X
     a78:	15 97       	sbiw	r26, 0x05	; 5
     a7a:	40 17       	cp	r20, r16
     a7c:	51 07       	cpc	r21, r17
     a7e:	62 07       	cpc	r22, r18
     a80:	73 07       	cpc	r23, r19
     a82:	5c f7       	brge	.-42     	; 0xa5a <enqueueByBaseline+0x18>
     a84:	11 96       	adiw	r26, 0x01	; 1
     a86:	fc 93       	st	X, r31
     a88:	ee 93       	st	-X, r30
     a8a:	20 97       	sbiw	r28, 0x00	; 0
     a8c:	21 f4       	brne	.+8      	; 0xa96 <enqueueByBaseline+0x54>
     a8e:	fc 01       	movw	r30, r24
     a90:	b1 83       	std	Z+1, r27	; 0x01
     a92:	a0 83       	st	Z, r26
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <enqueueByBaseline+0x58>
     a96:	b9 83       	std	Y+1, r27	; 0x01
     a98:	a8 83       	st	Y, r26
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	1f 91       	pop	r17
     aa0:	0f 91       	pop	r16
     aa2:	08 95       	ret

00000aa4 <dequeue>:
     aa4:	dc 01       	movw	r26, r24
     aa6:	ed 91       	ld	r30, X+
     aa8:	fc 91       	ld	r31, X
     aaa:	11 97       	sbiw	r26, 0x01	; 1
     aac:	30 97       	sbiw	r30, 0x00	; 0
     aae:	59 f4       	brne	.+22     	; 0xac6 <dequeue+0x22>
     ab0:	8f ef       	ldi	r24, 0xFF	; 255
     ab2:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     ab6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     aba:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	83 bf       	out	0x33, r24	; 51
     ac2:	88 95       	sleep
     ac4:	fc cf       	rjmp	.-8      	; 0xabe <dequeue+0x1a>
     ac6:	20 81       	ld	r18, Z
     ac8:	31 81       	ldd	r19, Z+1	; 0x01
     aca:	2d 93       	st	X+, r18
     acc:	3c 93       	st	X, r19
     ace:	cf 01       	movw	r24, r30
     ad0:	08 95       	ret

00000ad2 <insert>:
     ad2:	fb 01       	movw	r30, r22
     ad4:	20 81       	ld	r18, Z
     ad6:	31 81       	ldd	r19, Z+1	; 0x01
     ad8:	fc 01       	movw	r30, r24
     ada:	31 83       	std	Z+1, r19	; 0x01
     adc:	20 83       	st	Z, r18
     ade:	fb 01       	movw	r30, r22
     ae0:	91 83       	std	Z+1, r25	; 0x01
     ae2:	80 83       	st	Z, r24
     ae4:	08 95       	ret

00000ae6 <push>:
     ae6:	fb 01       	movw	r30, r22
     ae8:	20 81       	ld	r18, Z
     aea:	31 81       	ldd	r19, Z+1	; 0x01
     aec:	fc 01       	movw	r30, r24
     aee:	31 83       	std	Z+1, r19	; 0x01
     af0:	20 83       	st	Z, r18
     af2:	fb 01       	movw	r30, r22
     af4:	91 83       	std	Z+1, r25	; 0x01
     af6:	80 83       	st	Z, r24
     af8:	08 95       	ret

00000afa <pop>:
     afa:	dc 01       	movw	r26, r24
     afc:	ed 91       	ld	r30, X+
     afe:	fc 91       	ld	r31, X
     b00:	11 97       	sbiw	r26, 0x01	; 1
     b02:	20 81       	ld	r18, Z
     b04:	31 81       	ldd	r19, Z+1	; 0x01
     b06:	2d 93       	st	X+, r18
     b08:	3c 93       	st	X, r19
     b0a:	cf 01       	movw	r24, r30
     b0c:	08 95       	ret

00000b0e <schedule>:
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     b16:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     b1a:	c2 81       	ldd	r28, Z+2	; 0x02
     b1c:	d3 81       	ldd	r29, Z+3	; 0x03
     b1e:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
     b22:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
     b26:	30 97       	sbiw	r30, 0x00	; 0
     b28:	19 f1       	breq	.+70     	; 0xb70 <schedule+0x62>
     b2a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     b2e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     b32:	89 2b       	or	r24, r25
     b34:	e9 f0       	breq	.+58     	; 0xb70 <schedule+0x62>
     b36:	20 97       	sbiw	r28, 0x00	; 0
     b38:	69 f0       	breq	.+26     	; 0xb54 <schedule+0x46>
     b3a:	86 81       	ldd	r24, Z+6	; 0x06
     b3c:	97 81       	ldd	r25, Z+7	; 0x07
     b3e:	a0 85       	ldd	r26, Z+8	; 0x08
     b40:	b1 85       	ldd	r27, Z+9	; 0x09
     b42:	4e 81       	ldd	r20, Y+6	; 0x06
     b44:	5f 81       	ldd	r21, Y+7	; 0x07
     b46:	68 85       	ldd	r22, Y+8	; 0x08
     b48:	79 85       	ldd	r23, Y+9	; 0x09
     b4a:	84 1b       	sub	r24, r20
     b4c:	95 0b       	sbc	r25, r21
     b4e:	a6 0b       	sbc	r26, r22
     b50:	b7 0b       	sbc	r27, r23
     b52:	72 f4       	brpl	.+28     	; 0xb70 <schedule+0x62>
     b54:	84 e0       	ldi	r24, 0x04	; 4
     b56:	91 e0       	ldi	r25, 0x01	; 1
     b58:	0e 94 7d 05 	call	0xafa	; 0xafa <pop>
     b5c:	62 e0       	ldi	r22, 0x02	; 2
     b5e:	71 e0       	ldi	r23, 0x01	; 1
     b60:	0e 94 73 05 	call	0xae6	; 0xae6 <push>
     b64:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     b68:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     b6c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <dispatch>
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	08 95       	ret

00000b76 <__vector_1>:
     b76:	1f 92       	push	r1
     b78:	0f 92       	push	r0
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	0f 92       	push	r0
     b7e:	11 24       	eor	r1, r1
     b80:	0f 93       	push	r16
     b82:	1f 93       	push	r17
     b84:	2f 93       	push	r18
     b86:	3f 93       	push	r19
     b88:	4f 93       	push	r20
     b8a:	5f 93       	push	r21
     b8c:	6f 93       	push	r22
     b8e:	7f 93       	push	r23
     b90:	8f 93       	push	r24
     b92:	9f 93       	push	r25
     b94:	af 93       	push	r26
     b96:	bf 93       	push	r27
     b98:	ef 93       	push	r30
     b9a:	ff 93       	push	r31
     b9c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     ba0:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     ba4:	ac 01       	movw	r20, r24
     ba6:	09 2e       	mov	r0, r25
     ba8:	00 0c       	add	r0, r0
     baa:	66 0b       	sbc	r22, r22
     bac:	77 0b       	sbc	r23, r23
     bae:	9a 01       	movw	r18, r20
     bb0:	11 27       	eor	r17, r17
     bb2:	00 27       	eor	r16, r16
     bb4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	40 2b       	or	r20, r16
     bc2:	51 2b       	or	r21, r17
     bc4:	62 2b       	or	r22, r18
     bc6:	73 2b       	or	r23, r19
     bc8:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     bcc:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     bd0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     bd4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     bd8:	b0 9b       	sbis	0x16, 0	; 22
     bda:	1a c0       	rjmp	.+52     	; 0xc10 <__vector_1+0x9a>
     bdc:	01 96       	adiw	r24, 0x01	; 1
     bde:	09 2e       	mov	r0, r25
     be0:	00 0c       	add	r0, r0
     be2:	aa 0b       	sbc	r26, r26
     be4:	bb 0b       	sbc	r27, r27
     be6:	bc 01       	movw	r22, r24
     be8:	55 27       	eor	r21, r21
     bea:	44 27       	eor	r20, r20
     bec:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bf0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf4:	a0 e0       	ldi	r26, 0x00	; 0
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	84 2b       	or	r24, r20
     bfa:	95 2b       	or	r25, r21
     bfc:	a6 2b       	or	r26, r22
     bfe:	b7 2b       	or	r27, r23
     c00:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     c04:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     c08:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     c0c:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     c10:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     c14:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     c18:	30 97       	sbiw	r30, 0x00	; 0
     c1a:	39 f0       	breq	.+14     	; 0xc2a <__vector_1+0xb4>
     c1c:	60 e0       	ldi	r22, 0x00	; 0
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     c24:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     c28:	09 95       	icall
     c2a:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
     c2e:	ff 91       	pop	r31
     c30:	ef 91       	pop	r30
     c32:	bf 91       	pop	r27
     c34:	af 91       	pop	r26
     c36:	9f 91       	pop	r25
     c38:	8f 91       	pop	r24
     c3a:	7f 91       	pop	r23
     c3c:	6f 91       	pop	r22
     c3e:	5f 91       	pop	r21
     c40:	4f 91       	pop	r20
     c42:	3f 91       	pop	r19
     c44:	2f 91       	pop	r18
     c46:	1f 91       	pop	r17
     c48:	0f 91       	pop	r16
     c4a:	0f 90       	pop	r0
     c4c:	0f be       	out	0x3f, r0	; 63
     c4e:	0f 90       	pop	r0
     c50:	1f 90       	pop	r1
     c52:	18 95       	reti

00000c54 <__vector_2>:
     c54:	1f 92       	push	r1
     c56:	0f 92       	push	r0
     c58:	0f b6       	in	r0, 0x3f	; 63
     c5a:	0f 92       	push	r0
     c5c:	11 24       	eor	r1, r1
     c5e:	0f 93       	push	r16
     c60:	1f 93       	push	r17
     c62:	2f 93       	push	r18
     c64:	3f 93       	push	r19
     c66:	4f 93       	push	r20
     c68:	5f 93       	push	r21
     c6a:	6f 93       	push	r22
     c6c:	7f 93       	push	r23
     c6e:	8f 93       	push	r24
     c70:	9f 93       	push	r25
     c72:	af 93       	push	r26
     c74:	bf 93       	push	r27
     c76:	ef 93       	push	r30
     c78:	ff 93       	push	r31
     c7a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     c7e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     c82:	ac 01       	movw	r20, r24
     c84:	09 2e       	mov	r0, r25
     c86:	00 0c       	add	r0, r0
     c88:	66 0b       	sbc	r22, r22
     c8a:	77 0b       	sbc	r23, r23
     c8c:	9a 01       	movw	r18, r20
     c8e:	11 27       	eor	r17, r17
     c90:	00 27       	eor	r16, r16
     c92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	40 2b       	or	r20, r16
     ca0:	51 2b       	or	r21, r17
     ca2:	62 2b       	or	r22, r18
     ca4:	73 2b       	or	r23, r19
     ca6:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     caa:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     cae:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     cb2:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     cb6:	b0 9b       	sbis	0x16, 0	; 22
     cb8:	1a c0       	rjmp	.+52     	; 0xcee <__vector_2+0x9a>
     cba:	01 96       	adiw	r24, 0x01	; 1
     cbc:	09 2e       	mov	r0, r25
     cbe:	00 0c       	add	r0, r0
     cc0:	aa 0b       	sbc	r26, r26
     cc2:	bb 0b       	sbc	r27, r27
     cc4:	bc 01       	movw	r22, r24
     cc6:	55 27       	eor	r21, r21
     cc8:	44 27       	eor	r20, r20
     cca:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cce:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd2:	a0 e0       	ldi	r26, 0x00	; 0
     cd4:	b0 e0       	ldi	r27, 0x00	; 0
     cd6:	84 2b       	or	r24, r20
     cd8:	95 2b       	or	r25, r21
     cda:	a6 2b       	or	r26, r22
     cdc:	b7 2b       	or	r27, r23
     cde:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     ce2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     ce6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     cea:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     cee:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     cf2:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     cf6:	30 97       	sbiw	r30, 0x00	; 0
     cf8:	39 f0       	breq	.+14     	; 0xd08 <__vector_2+0xb4>
     cfa:	61 e0       	ldi	r22, 0x01	; 1
     cfc:	70 e0       	ldi	r23, 0x00	; 0
     cfe:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     d02:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     d06:	09 95       	icall
     d08:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
     d0c:	ff 91       	pop	r31
     d0e:	ef 91       	pop	r30
     d10:	bf 91       	pop	r27
     d12:	af 91       	pop	r26
     d14:	9f 91       	pop	r25
     d16:	8f 91       	pop	r24
     d18:	7f 91       	pop	r23
     d1a:	6f 91       	pop	r22
     d1c:	5f 91       	pop	r21
     d1e:	4f 91       	pop	r20
     d20:	3f 91       	pop	r19
     d22:	2f 91       	pop	r18
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	0f 90       	pop	r0
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	0f 90       	pop	r0
     d2e:	1f 90       	pop	r1
     d30:	18 95       	reti

00000d32 <__vector_3>:
     d32:	1f 92       	push	r1
     d34:	0f 92       	push	r0
     d36:	0f b6       	in	r0, 0x3f	; 63
     d38:	0f 92       	push	r0
     d3a:	11 24       	eor	r1, r1
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	2f 93       	push	r18
     d42:	3f 93       	push	r19
     d44:	4f 93       	push	r20
     d46:	5f 93       	push	r21
     d48:	6f 93       	push	r22
     d4a:	7f 93       	push	r23
     d4c:	8f 93       	push	r24
     d4e:	9f 93       	push	r25
     d50:	af 93       	push	r26
     d52:	bf 93       	push	r27
     d54:	ef 93       	push	r30
     d56:	ff 93       	push	r31
     d58:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     d5c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     d60:	ac 01       	movw	r20, r24
     d62:	09 2e       	mov	r0, r25
     d64:	00 0c       	add	r0, r0
     d66:	66 0b       	sbc	r22, r22
     d68:	77 0b       	sbc	r23, r23
     d6a:	9a 01       	movw	r18, r20
     d6c:	11 27       	eor	r17, r17
     d6e:	00 27       	eor	r16, r16
     d70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	40 2b       	or	r20, r16
     d7e:	51 2b       	or	r21, r17
     d80:	62 2b       	or	r22, r18
     d82:	73 2b       	or	r23, r19
     d84:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     d88:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     d8c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     d90:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     d94:	b0 9b       	sbis	0x16, 0	; 22
     d96:	1a c0       	rjmp	.+52     	; 0xdcc <__vector_3+0x9a>
     d98:	01 96       	adiw	r24, 0x01	; 1
     d9a:	09 2e       	mov	r0, r25
     d9c:	00 0c       	add	r0, r0
     d9e:	aa 0b       	sbc	r26, r26
     da0:	bb 0b       	sbc	r27, r27
     da2:	bc 01       	movw	r22, r24
     da4:	55 27       	eor	r21, r21
     da6:	44 27       	eor	r20, r20
     da8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dac:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     db0:	a0 e0       	ldi	r26, 0x00	; 0
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	84 2b       	or	r24, r20
     db6:	95 2b       	or	r25, r21
     db8:	a6 2b       	or	r26, r22
     dba:	b7 2b       	or	r27, r23
     dbc:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     dc0:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     dc4:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     dc8:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     dcc:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     dd0:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     dd4:	30 97       	sbiw	r30, 0x00	; 0
     dd6:	39 f0       	breq	.+14     	; 0xde6 <__vector_3+0xb4>
     dd8:	62 e0       	ldi	r22, 0x02	; 2
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     de0:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     de4:	09 95       	icall
     de6:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
     dea:	ff 91       	pop	r31
     dec:	ef 91       	pop	r30
     dee:	bf 91       	pop	r27
     df0:	af 91       	pop	r26
     df2:	9f 91       	pop	r25
     df4:	8f 91       	pop	r24
     df6:	7f 91       	pop	r23
     df8:	6f 91       	pop	r22
     dfa:	5f 91       	pop	r21
     dfc:	4f 91       	pop	r20
     dfe:	3f 91       	pop	r19
     e00:	2f 91       	pop	r18
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	0f 90       	pop	r0
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	0f 90       	pop	r0
     e0c:	1f 90       	pop	r1
     e0e:	18 95       	reti

00000e10 <__vector_4>:
     e10:	1f 92       	push	r1
     e12:	0f 92       	push	r0
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	0f 92       	push	r0
     e18:	11 24       	eor	r1, r1
     e1a:	0f 93       	push	r16
     e1c:	1f 93       	push	r17
     e1e:	2f 93       	push	r18
     e20:	3f 93       	push	r19
     e22:	4f 93       	push	r20
     e24:	5f 93       	push	r21
     e26:	6f 93       	push	r22
     e28:	7f 93       	push	r23
     e2a:	8f 93       	push	r24
     e2c:	9f 93       	push	r25
     e2e:	af 93       	push	r26
     e30:	bf 93       	push	r27
     e32:	ef 93       	push	r30
     e34:	ff 93       	push	r31
     e36:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     e3a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     e3e:	ac 01       	movw	r20, r24
     e40:	09 2e       	mov	r0, r25
     e42:	00 0c       	add	r0, r0
     e44:	66 0b       	sbc	r22, r22
     e46:	77 0b       	sbc	r23, r23
     e48:	9a 01       	movw	r18, r20
     e4a:	11 27       	eor	r17, r17
     e4c:	00 27       	eor	r16, r16
     e4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	40 2b       	or	r20, r16
     e5c:	51 2b       	or	r21, r17
     e5e:	62 2b       	or	r22, r18
     e60:	73 2b       	or	r23, r19
     e62:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     e66:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     e6a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     e6e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     e72:	b0 9b       	sbis	0x16, 0	; 22
     e74:	1a c0       	rjmp	.+52     	; 0xeaa <__vector_4+0x9a>
     e76:	01 96       	adiw	r24, 0x01	; 1
     e78:	09 2e       	mov	r0, r25
     e7a:	00 0c       	add	r0, r0
     e7c:	aa 0b       	sbc	r26, r26
     e7e:	bb 0b       	sbc	r27, r27
     e80:	bc 01       	movw	r22, r24
     e82:	55 27       	eor	r21, r21
     e84:	44 27       	eor	r20, r20
     e86:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e8a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8e:	a0 e0       	ldi	r26, 0x00	; 0
     e90:	b0 e0       	ldi	r27, 0x00	; 0
     e92:	84 2b       	or	r24, r20
     e94:	95 2b       	or	r25, r21
     e96:	a6 2b       	or	r26, r22
     e98:	b7 2b       	or	r27, r23
     e9a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     e9e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     ea2:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     ea6:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     eaa:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     eae:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     eb2:	30 97       	sbiw	r30, 0x00	; 0
     eb4:	39 f0       	breq	.+14     	; 0xec4 <__vector_4+0xb4>
     eb6:	63 e0       	ldi	r22, 0x03	; 3
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     ebe:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     ec2:	09 95       	icall
     ec4:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
     ec8:	ff 91       	pop	r31
     eca:	ef 91       	pop	r30
     ecc:	bf 91       	pop	r27
     ece:	af 91       	pop	r26
     ed0:	9f 91       	pop	r25
     ed2:	8f 91       	pop	r24
     ed4:	7f 91       	pop	r23
     ed6:	6f 91       	pop	r22
     ed8:	5f 91       	pop	r21
     eda:	4f 91       	pop	r20
     edc:	3f 91       	pop	r19
     ede:	2f 91       	pop	r18
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	0f 90       	pop	r0
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	0f 90       	pop	r0
     eea:	1f 90       	pop	r1
     eec:	18 95       	reti

00000eee <__vector_5>:
     eee:	1f 92       	push	r1
     ef0:	0f 92       	push	r0
     ef2:	0f b6       	in	r0, 0x3f	; 63
     ef4:	0f 92       	push	r0
     ef6:	11 24       	eor	r1, r1
     ef8:	0f 93       	push	r16
     efa:	1f 93       	push	r17
     efc:	2f 93       	push	r18
     efe:	3f 93       	push	r19
     f00:	4f 93       	push	r20
     f02:	5f 93       	push	r21
     f04:	6f 93       	push	r22
     f06:	7f 93       	push	r23
     f08:	8f 93       	push	r24
     f0a:	9f 93       	push	r25
     f0c:	af 93       	push	r26
     f0e:	bf 93       	push	r27
     f10:	ef 93       	push	r30
     f12:	ff 93       	push	r31
     f14:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     f18:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     f1c:	ac 01       	movw	r20, r24
     f1e:	09 2e       	mov	r0, r25
     f20:	00 0c       	add	r0, r0
     f22:	66 0b       	sbc	r22, r22
     f24:	77 0b       	sbc	r23, r23
     f26:	9a 01       	movw	r18, r20
     f28:	11 27       	eor	r17, r17
     f2a:	00 27       	eor	r16, r16
     f2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	40 2b       	or	r20, r16
     f3a:	51 2b       	or	r21, r17
     f3c:	62 2b       	or	r22, r18
     f3e:	73 2b       	or	r23, r19
     f40:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     f44:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     f48:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     f4c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     f50:	b0 9b       	sbis	0x16, 0	; 22
     f52:	1a c0       	rjmp	.+52     	; 0xf88 <__vector_5+0x9a>
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	09 2e       	mov	r0, r25
     f58:	00 0c       	add	r0, r0
     f5a:	aa 0b       	sbc	r26, r26
     f5c:	bb 0b       	sbc	r27, r27
     f5e:	bc 01       	movw	r22, r24
     f60:	55 27       	eor	r21, r21
     f62:	44 27       	eor	r20, r20
     f64:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f68:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f6c:	a0 e0       	ldi	r26, 0x00	; 0
     f6e:	b0 e0       	ldi	r27, 0x00	; 0
     f70:	84 2b       	or	r24, r20
     f72:	95 2b       	or	r25, r21
     f74:	a6 2b       	or	r26, r22
     f76:	b7 2b       	or	r27, r23
     f78:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     f7c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     f80:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     f84:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     f88:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     f8c:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     f90:	30 97       	sbiw	r30, 0x00	; 0
     f92:	39 f0       	breq	.+14     	; 0xfa2 <__vector_5+0xb4>
     f94:	64 e0       	ldi	r22, 0x04	; 4
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     f9c:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     fa0:	09 95       	icall
     fa2:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
     fa6:	ff 91       	pop	r31
     fa8:	ef 91       	pop	r30
     faa:	bf 91       	pop	r27
     fac:	af 91       	pop	r26
     fae:	9f 91       	pop	r25
     fb0:	8f 91       	pop	r24
     fb2:	7f 91       	pop	r23
     fb4:	6f 91       	pop	r22
     fb6:	5f 91       	pop	r21
     fb8:	4f 91       	pop	r20
     fba:	3f 91       	pop	r19
     fbc:	2f 91       	pop	r18
     fbe:	1f 91       	pop	r17
     fc0:	0f 91       	pop	r16
     fc2:	0f 90       	pop	r0
     fc4:	0f be       	out	0x3f, r0	; 63
     fc6:	0f 90       	pop	r0
     fc8:	1f 90       	pop	r1
     fca:	18 95       	reti

00000fcc <__vector_10>:
     fcc:	1f 92       	push	r1
     fce:	0f 92       	push	r0
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	0f 92       	push	r0
     fd4:	11 24       	eor	r1, r1
     fd6:	0f 93       	push	r16
     fd8:	1f 93       	push	r17
     fda:	2f 93       	push	r18
     fdc:	3f 93       	push	r19
     fde:	4f 93       	push	r20
     fe0:	5f 93       	push	r21
     fe2:	6f 93       	push	r22
     fe4:	7f 93       	push	r23
     fe6:	8f 93       	push	r24
     fe8:	9f 93       	push	r25
     fea:	af 93       	push	r26
     fec:	bf 93       	push	r27
     fee:	ef 93       	push	r30
     ff0:	ff 93       	push	r31
     ff2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     ff6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     ffa:	ac 01       	movw	r20, r24
     ffc:	09 2e       	mov	r0, r25
     ffe:	00 0c       	add	r0, r0
    1000:	66 0b       	sbc	r22, r22
    1002:	77 0b       	sbc	r23, r23
    1004:	9a 01       	movw	r18, r20
    1006:	11 27       	eor	r17, r17
    1008:	00 27       	eor	r16, r16
    100a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    100e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1012:	60 e0       	ldi	r22, 0x00	; 0
    1014:	70 e0       	ldi	r23, 0x00	; 0
    1016:	40 2b       	or	r20, r16
    1018:	51 2b       	or	r21, r17
    101a:	62 2b       	or	r22, r18
    101c:	73 2b       	or	r23, r19
    101e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1022:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1026:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    102a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    102e:	b0 9b       	sbis	0x16, 0	; 22
    1030:	1a c0       	rjmp	.+52     	; 0x1066 <__vector_10+0x9a>
    1032:	01 96       	adiw	r24, 0x01	; 1
    1034:	09 2e       	mov	r0, r25
    1036:	00 0c       	add	r0, r0
    1038:	aa 0b       	sbc	r26, r26
    103a:	bb 0b       	sbc	r27, r27
    103c:	bc 01       	movw	r22, r24
    103e:	55 27       	eor	r21, r21
    1040:	44 27       	eor	r20, r20
    1042:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1046:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    104a:	a0 e0       	ldi	r26, 0x00	; 0
    104c:	b0 e0       	ldi	r27, 0x00	; 0
    104e:	84 2b       	or	r24, r20
    1050:	95 2b       	or	r25, r21
    1052:	a6 2b       	or	r26, r22
    1054:	b7 2b       	or	r27, r23
    1056:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    105a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    105e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1062:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1066:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
    106a:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
    106e:	30 97       	sbiw	r30, 0x00	; 0
    1070:	39 f0       	breq	.+14     	; 0x1080 <__vector_10+0xb4>
    1072:	65 e0       	ldi	r22, 0x05	; 5
    1074:	70 e0       	ldi	r23, 0x00	; 0
    1076:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
    107a:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
    107e:	09 95       	icall
    1080:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1084:	ff 91       	pop	r31
    1086:	ef 91       	pop	r30
    1088:	bf 91       	pop	r27
    108a:	af 91       	pop	r26
    108c:	9f 91       	pop	r25
    108e:	8f 91       	pop	r24
    1090:	7f 91       	pop	r23
    1092:	6f 91       	pop	r22
    1094:	5f 91       	pop	r21
    1096:	4f 91       	pop	r20
    1098:	3f 91       	pop	r19
    109a:	2f 91       	pop	r18
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	0f 90       	pop	r0
    10a2:	0f be       	out	0x3f, r0	; 63
    10a4:	0f 90       	pop	r0
    10a6:	1f 90       	pop	r1
    10a8:	18 95       	reti

000010aa <__vector_11>:
    10aa:	1f 92       	push	r1
    10ac:	0f 92       	push	r0
    10ae:	0f b6       	in	r0, 0x3f	; 63
    10b0:	0f 92       	push	r0
    10b2:	11 24       	eor	r1, r1
    10b4:	0f 93       	push	r16
    10b6:	1f 93       	push	r17
    10b8:	2f 93       	push	r18
    10ba:	3f 93       	push	r19
    10bc:	4f 93       	push	r20
    10be:	5f 93       	push	r21
    10c0:	6f 93       	push	r22
    10c2:	7f 93       	push	r23
    10c4:	8f 93       	push	r24
    10c6:	9f 93       	push	r25
    10c8:	af 93       	push	r26
    10ca:	bf 93       	push	r27
    10cc:	ef 93       	push	r30
    10ce:	ff 93       	push	r31
    10d0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    10d4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    10d8:	ac 01       	movw	r20, r24
    10da:	09 2e       	mov	r0, r25
    10dc:	00 0c       	add	r0, r0
    10de:	66 0b       	sbc	r22, r22
    10e0:	77 0b       	sbc	r23, r23
    10e2:	9a 01       	movw	r18, r20
    10e4:	11 27       	eor	r17, r17
    10e6:	00 27       	eor	r16, r16
    10e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f0:	60 e0       	ldi	r22, 0x00	; 0
    10f2:	70 e0       	ldi	r23, 0x00	; 0
    10f4:	40 2b       	or	r20, r16
    10f6:	51 2b       	or	r21, r17
    10f8:	62 2b       	or	r22, r18
    10fa:	73 2b       	or	r23, r19
    10fc:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1100:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1104:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1108:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    110c:	b0 9b       	sbis	0x16, 0	; 22
    110e:	1a c0       	rjmp	.+52     	; 0x1144 <__vector_11+0x9a>
    1110:	01 96       	adiw	r24, 0x01	; 1
    1112:	09 2e       	mov	r0, r25
    1114:	00 0c       	add	r0, r0
    1116:	aa 0b       	sbc	r26, r26
    1118:	bb 0b       	sbc	r27, r27
    111a:	bc 01       	movw	r22, r24
    111c:	55 27       	eor	r21, r21
    111e:	44 27       	eor	r20, r20
    1120:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1124:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1128:	a0 e0       	ldi	r26, 0x00	; 0
    112a:	b0 e0       	ldi	r27, 0x00	; 0
    112c:	84 2b       	or	r24, r20
    112e:	95 2b       	or	r25, r21
    1130:	a6 2b       	or	r26, r22
    1132:	b7 2b       	or	r27, r23
    1134:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1138:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    113c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1140:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1144:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
    1148:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
    114c:	30 97       	sbiw	r30, 0x00	; 0
    114e:	39 f0       	breq	.+14     	; 0x115e <__vector_11+0xb4>
    1150:	66 e0       	ldi	r22, 0x06	; 6
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
    1158:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
    115c:	09 95       	icall
    115e:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1162:	ff 91       	pop	r31
    1164:	ef 91       	pop	r30
    1166:	bf 91       	pop	r27
    1168:	af 91       	pop	r26
    116a:	9f 91       	pop	r25
    116c:	8f 91       	pop	r24
    116e:	7f 91       	pop	r23
    1170:	6f 91       	pop	r22
    1172:	5f 91       	pop	r21
    1174:	4f 91       	pop	r20
    1176:	3f 91       	pop	r19
    1178:	2f 91       	pop	r18
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	0f 90       	pop	r0
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	0f 90       	pop	r0
    1184:	1f 90       	pop	r1
    1186:	18 95       	reti

00001188 <__vector_12>:
    1188:	1f 92       	push	r1
    118a:	0f 92       	push	r0
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	0f 92       	push	r0
    1190:	11 24       	eor	r1, r1
    1192:	0f 93       	push	r16
    1194:	1f 93       	push	r17
    1196:	2f 93       	push	r18
    1198:	3f 93       	push	r19
    119a:	4f 93       	push	r20
    119c:	5f 93       	push	r21
    119e:	6f 93       	push	r22
    11a0:	7f 93       	push	r23
    11a2:	8f 93       	push	r24
    11a4:	9f 93       	push	r25
    11a6:	af 93       	push	r26
    11a8:	bf 93       	push	r27
    11aa:	ef 93       	push	r30
    11ac:	ff 93       	push	r31
    11ae:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    11b2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    11b6:	ac 01       	movw	r20, r24
    11b8:	09 2e       	mov	r0, r25
    11ba:	00 0c       	add	r0, r0
    11bc:	66 0b       	sbc	r22, r22
    11be:	77 0b       	sbc	r23, r23
    11c0:	9a 01       	movw	r18, r20
    11c2:	11 27       	eor	r17, r17
    11c4:	00 27       	eor	r16, r16
    11c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	40 2b       	or	r20, r16
    11d4:	51 2b       	or	r21, r17
    11d6:	62 2b       	or	r22, r18
    11d8:	73 2b       	or	r23, r19
    11da:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    11de:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    11e2:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    11e6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    11ea:	b0 9b       	sbis	0x16, 0	; 22
    11ec:	1a c0       	rjmp	.+52     	; 0x1222 <__vector_12+0x9a>
    11ee:	01 96       	adiw	r24, 0x01	; 1
    11f0:	09 2e       	mov	r0, r25
    11f2:	00 0c       	add	r0, r0
    11f4:	aa 0b       	sbc	r26, r26
    11f6:	bb 0b       	sbc	r27, r27
    11f8:	bc 01       	movw	r22, r24
    11fa:	55 27       	eor	r21, r21
    11fc:	44 27       	eor	r20, r20
    11fe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1202:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1206:	a0 e0       	ldi	r26, 0x00	; 0
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	84 2b       	or	r24, r20
    120c:	95 2b       	or	r25, r21
    120e:	a6 2b       	or	r26, r22
    1210:	b7 2b       	or	r27, r23
    1212:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1216:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    121a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    121e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1222:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
    1226:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
    122a:	30 97       	sbiw	r30, 0x00	; 0
    122c:	39 f0       	breq	.+14     	; 0x123c <__vector_12+0xb4>
    122e:	67 e0       	ldi	r22, 0x07	; 7
    1230:	70 e0       	ldi	r23, 0x00	; 0
    1232:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
    1236:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
    123a:	09 95       	icall
    123c:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1240:	ff 91       	pop	r31
    1242:	ef 91       	pop	r30
    1244:	bf 91       	pop	r27
    1246:	af 91       	pop	r26
    1248:	9f 91       	pop	r25
    124a:	8f 91       	pop	r24
    124c:	7f 91       	pop	r23
    124e:	6f 91       	pop	r22
    1250:	5f 91       	pop	r21
    1252:	4f 91       	pop	r20
    1254:	3f 91       	pop	r19
    1256:	2f 91       	pop	r18
    1258:	1f 91       	pop	r17
    125a:	0f 91       	pop	r16
    125c:	0f 90       	pop	r0
    125e:	0f be       	out	0x3f, r0	; 63
    1260:	0f 90       	pop	r0
    1262:	1f 90       	pop	r1
    1264:	18 95       	reti

00001266 <__vector_13>:
    1266:	1f 92       	push	r1
    1268:	0f 92       	push	r0
    126a:	0f b6       	in	r0, 0x3f	; 63
    126c:	0f 92       	push	r0
    126e:	11 24       	eor	r1, r1
    1270:	0f 93       	push	r16
    1272:	1f 93       	push	r17
    1274:	2f 93       	push	r18
    1276:	3f 93       	push	r19
    1278:	4f 93       	push	r20
    127a:	5f 93       	push	r21
    127c:	6f 93       	push	r22
    127e:	7f 93       	push	r23
    1280:	8f 93       	push	r24
    1282:	9f 93       	push	r25
    1284:	af 93       	push	r26
    1286:	bf 93       	push	r27
    1288:	ef 93       	push	r30
    128a:	ff 93       	push	r31
    128c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1290:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1294:	ac 01       	movw	r20, r24
    1296:	09 2e       	mov	r0, r25
    1298:	00 0c       	add	r0, r0
    129a:	66 0b       	sbc	r22, r22
    129c:	77 0b       	sbc	r23, r23
    129e:	9a 01       	movw	r18, r20
    12a0:	11 27       	eor	r17, r17
    12a2:	00 27       	eor	r16, r16
    12a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	40 2b       	or	r20, r16
    12b2:	51 2b       	or	r21, r17
    12b4:	62 2b       	or	r22, r18
    12b6:	73 2b       	or	r23, r19
    12b8:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    12bc:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    12c0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    12c4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    12c8:	b0 9b       	sbis	0x16, 0	; 22
    12ca:	1a c0       	rjmp	.+52     	; 0x1300 <__vector_13+0x9a>
    12cc:	01 96       	adiw	r24, 0x01	; 1
    12ce:	09 2e       	mov	r0, r25
    12d0:	00 0c       	add	r0, r0
    12d2:	aa 0b       	sbc	r26, r26
    12d4:	bb 0b       	sbc	r27, r27
    12d6:	bc 01       	movw	r22, r24
    12d8:	55 27       	eor	r21, r21
    12da:	44 27       	eor	r20, r20
    12dc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12e0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e4:	a0 e0       	ldi	r26, 0x00	; 0
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	84 2b       	or	r24, r20
    12ea:	95 2b       	or	r25, r21
    12ec:	a6 2b       	or	r26, r22
    12ee:	b7 2b       	or	r27, r23
    12f0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    12f4:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    12f8:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    12fc:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1300:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    1304:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    1308:	30 97       	sbiw	r30, 0x00	; 0
    130a:	39 f0       	breq	.+14     	; 0x131a <__vector_13+0xb4>
    130c:	68 e0       	ldi	r22, 0x08	; 8
    130e:	70 e0       	ldi	r23, 0x00	; 0
    1310:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    1314:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    1318:	09 95       	icall
    131a:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    131e:	ff 91       	pop	r31
    1320:	ef 91       	pop	r30
    1322:	bf 91       	pop	r27
    1324:	af 91       	pop	r26
    1326:	9f 91       	pop	r25
    1328:	8f 91       	pop	r24
    132a:	7f 91       	pop	r23
    132c:	6f 91       	pop	r22
    132e:	5f 91       	pop	r21
    1330:	4f 91       	pop	r20
    1332:	3f 91       	pop	r19
    1334:	2f 91       	pop	r18
    1336:	1f 91       	pop	r17
    1338:	0f 91       	pop	r16
    133a:	0f 90       	pop	r0
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	0f 90       	pop	r0
    1340:	1f 90       	pop	r1
    1342:	18 95       	reti

00001344 <__vector_14>:
    1344:	1f 92       	push	r1
    1346:	0f 92       	push	r0
    1348:	0f b6       	in	r0, 0x3f	; 63
    134a:	0f 92       	push	r0
    134c:	11 24       	eor	r1, r1
    134e:	0f 93       	push	r16
    1350:	1f 93       	push	r17
    1352:	2f 93       	push	r18
    1354:	3f 93       	push	r19
    1356:	4f 93       	push	r20
    1358:	5f 93       	push	r21
    135a:	6f 93       	push	r22
    135c:	7f 93       	push	r23
    135e:	8f 93       	push	r24
    1360:	9f 93       	push	r25
    1362:	af 93       	push	r26
    1364:	bf 93       	push	r27
    1366:	ef 93       	push	r30
    1368:	ff 93       	push	r31
    136a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    136e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1372:	ac 01       	movw	r20, r24
    1374:	09 2e       	mov	r0, r25
    1376:	00 0c       	add	r0, r0
    1378:	66 0b       	sbc	r22, r22
    137a:	77 0b       	sbc	r23, r23
    137c:	9a 01       	movw	r18, r20
    137e:	11 27       	eor	r17, r17
    1380:	00 27       	eor	r16, r16
    1382:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1386:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	70 e0       	ldi	r23, 0x00	; 0
    138e:	40 2b       	or	r20, r16
    1390:	51 2b       	or	r21, r17
    1392:	62 2b       	or	r22, r18
    1394:	73 2b       	or	r23, r19
    1396:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    139a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    139e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    13a2:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    13a6:	b0 9b       	sbis	0x16, 0	; 22
    13a8:	1a c0       	rjmp	.+52     	; 0x13de <__vector_14+0x9a>
    13aa:	01 96       	adiw	r24, 0x01	; 1
    13ac:	09 2e       	mov	r0, r25
    13ae:	00 0c       	add	r0, r0
    13b0:	aa 0b       	sbc	r26, r26
    13b2:	bb 0b       	sbc	r27, r27
    13b4:	bc 01       	movw	r22, r24
    13b6:	55 27       	eor	r21, r21
    13b8:	44 27       	eor	r20, r20
    13ba:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13be:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c2:	a0 e0       	ldi	r26, 0x00	; 0
    13c4:	b0 e0       	ldi	r27, 0x00	; 0
    13c6:	84 2b       	or	r24, r20
    13c8:	95 2b       	or	r25, r21
    13ca:	a6 2b       	or	r26, r22
    13cc:	b7 2b       	or	r27, r23
    13ce:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    13d2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    13d6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    13da:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    13de:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    13e2:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    13e6:	30 97       	sbiw	r30, 0x00	; 0
    13e8:	39 f0       	breq	.+14     	; 0x13f8 <__vector_14+0xb4>
    13ea:	69 e0       	ldi	r22, 0x09	; 9
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    13f2:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    13f6:	09 95       	icall
    13f8:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    13fc:	ff 91       	pop	r31
    13fe:	ef 91       	pop	r30
    1400:	bf 91       	pop	r27
    1402:	af 91       	pop	r26
    1404:	9f 91       	pop	r25
    1406:	8f 91       	pop	r24
    1408:	7f 91       	pop	r23
    140a:	6f 91       	pop	r22
    140c:	5f 91       	pop	r21
    140e:	4f 91       	pop	r20
    1410:	3f 91       	pop	r19
    1412:	2f 91       	pop	r18
    1414:	1f 91       	pop	r17
    1416:	0f 91       	pop	r16
    1418:	0f 90       	pop	r0
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	0f 90       	pop	r0
    141e:	1f 90       	pop	r1
    1420:	18 95       	reti

00001422 <__vector_15>:
    1422:	1f 92       	push	r1
    1424:	0f 92       	push	r0
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	0f 92       	push	r0
    142a:	11 24       	eor	r1, r1
    142c:	0f 93       	push	r16
    142e:	1f 93       	push	r17
    1430:	2f 93       	push	r18
    1432:	3f 93       	push	r19
    1434:	4f 93       	push	r20
    1436:	5f 93       	push	r21
    1438:	6f 93       	push	r22
    143a:	7f 93       	push	r23
    143c:	8f 93       	push	r24
    143e:	9f 93       	push	r25
    1440:	af 93       	push	r26
    1442:	bf 93       	push	r27
    1444:	ef 93       	push	r30
    1446:	ff 93       	push	r31
    1448:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    144c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1450:	ac 01       	movw	r20, r24
    1452:	09 2e       	mov	r0, r25
    1454:	00 0c       	add	r0, r0
    1456:	66 0b       	sbc	r22, r22
    1458:	77 0b       	sbc	r23, r23
    145a:	9a 01       	movw	r18, r20
    145c:	11 27       	eor	r17, r17
    145e:	00 27       	eor	r16, r16
    1460:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1464:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1468:	60 e0       	ldi	r22, 0x00	; 0
    146a:	70 e0       	ldi	r23, 0x00	; 0
    146c:	40 2b       	or	r20, r16
    146e:	51 2b       	or	r21, r17
    1470:	62 2b       	or	r22, r18
    1472:	73 2b       	or	r23, r19
    1474:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1478:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    147c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1480:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1484:	b0 9b       	sbis	0x16, 0	; 22
    1486:	1a c0       	rjmp	.+52     	; 0x14bc <__vector_15+0x9a>
    1488:	01 96       	adiw	r24, 0x01	; 1
    148a:	09 2e       	mov	r0, r25
    148c:	00 0c       	add	r0, r0
    148e:	aa 0b       	sbc	r26, r26
    1490:	bb 0b       	sbc	r27, r27
    1492:	bc 01       	movw	r22, r24
    1494:	55 27       	eor	r21, r21
    1496:	44 27       	eor	r20, r20
    1498:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    149c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14a0:	a0 e0       	ldi	r26, 0x00	; 0
    14a2:	b0 e0       	ldi	r27, 0x00	; 0
    14a4:	84 2b       	or	r24, r20
    14a6:	95 2b       	or	r25, r21
    14a8:	a6 2b       	or	r26, r22
    14aa:	b7 2b       	or	r27, r23
    14ac:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    14b0:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    14b4:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    14b8:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    14bc:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    14c0:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    14c4:	30 97       	sbiw	r30, 0x00	; 0
    14c6:	39 f0       	breq	.+14     	; 0x14d6 <__vector_15+0xb4>
    14c8:	6a e0       	ldi	r22, 0x0A	; 10
    14ca:	70 e0       	ldi	r23, 0x00	; 0
    14cc:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    14d0:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    14d4:	09 95       	icall
    14d6:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    14da:	ff 91       	pop	r31
    14dc:	ef 91       	pop	r30
    14de:	bf 91       	pop	r27
    14e0:	af 91       	pop	r26
    14e2:	9f 91       	pop	r25
    14e4:	8f 91       	pop	r24
    14e6:	7f 91       	pop	r23
    14e8:	6f 91       	pop	r22
    14ea:	5f 91       	pop	r21
    14ec:	4f 91       	pop	r20
    14ee:	3f 91       	pop	r19
    14f0:	2f 91       	pop	r18
    14f2:	1f 91       	pop	r17
    14f4:	0f 91       	pop	r16
    14f6:	0f 90       	pop	r0
    14f8:	0f be       	out	0x3f, r0	; 63
    14fa:	0f 90       	pop	r0
    14fc:	1f 90       	pop	r1
    14fe:	18 95       	reti

00001500 <__vector_16>:
    1500:	1f 92       	push	r1
    1502:	0f 92       	push	r0
    1504:	0f b6       	in	r0, 0x3f	; 63
    1506:	0f 92       	push	r0
    1508:	11 24       	eor	r1, r1
    150a:	0f 93       	push	r16
    150c:	1f 93       	push	r17
    150e:	2f 93       	push	r18
    1510:	3f 93       	push	r19
    1512:	4f 93       	push	r20
    1514:	5f 93       	push	r21
    1516:	6f 93       	push	r22
    1518:	7f 93       	push	r23
    151a:	8f 93       	push	r24
    151c:	9f 93       	push	r25
    151e:	af 93       	push	r26
    1520:	bf 93       	push	r27
    1522:	ef 93       	push	r30
    1524:	ff 93       	push	r31
    1526:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    152a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    152e:	ac 01       	movw	r20, r24
    1530:	09 2e       	mov	r0, r25
    1532:	00 0c       	add	r0, r0
    1534:	66 0b       	sbc	r22, r22
    1536:	77 0b       	sbc	r23, r23
    1538:	9a 01       	movw	r18, r20
    153a:	11 27       	eor	r17, r17
    153c:	00 27       	eor	r16, r16
    153e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1542:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1546:	60 e0       	ldi	r22, 0x00	; 0
    1548:	70 e0       	ldi	r23, 0x00	; 0
    154a:	40 2b       	or	r20, r16
    154c:	51 2b       	or	r21, r17
    154e:	62 2b       	or	r22, r18
    1550:	73 2b       	or	r23, r19
    1552:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1556:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    155a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    155e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1562:	b0 9b       	sbis	0x16, 0	; 22
    1564:	1a c0       	rjmp	.+52     	; 0x159a <__vector_16+0x9a>
    1566:	01 96       	adiw	r24, 0x01	; 1
    1568:	09 2e       	mov	r0, r25
    156a:	00 0c       	add	r0, r0
    156c:	aa 0b       	sbc	r26, r26
    156e:	bb 0b       	sbc	r27, r27
    1570:	bc 01       	movw	r22, r24
    1572:	55 27       	eor	r21, r21
    1574:	44 27       	eor	r20, r20
    1576:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    157a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157e:	a0 e0       	ldi	r26, 0x00	; 0
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	84 2b       	or	r24, r20
    1584:	95 2b       	or	r25, r21
    1586:	a6 2b       	or	r26, r22
    1588:	b7 2b       	or	r27, r23
    158a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    158e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1592:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1596:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    159a:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    159e:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    15a2:	30 97       	sbiw	r30, 0x00	; 0
    15a4:	39 f0       	breq	.+14     	; 0x15b4 <__vector_16+0xb4>
    15a6:	6b e0       	ldi	r22, 0x0B	; 11
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    15ae:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    15b2:	09 95       	icall
    15b4:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    15b8:	ff 91       	pop	r31
    15ba:	ef 91       	pop	r30
    15bc:	bf 91       	pop	r27
    15be:	af 91       	pop	r26
    15c0:	9f 91       	pop	r25
    15c2:	8f 91       	pop	r24
    15c4:	7f 91       	pop	r23
    15c6:	6f 91       	pop	r22
    15c8:	5f 91       	pop	r21
    15ca:	4f 91       	pop	r20
    15cc:	3f 91       	pop	r19
    15ce:	2f 91       	pop	r18
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	0f 90       	pop	r0
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	0f 90       	pop	r0
    15da:	1f 90       	pop	r1
    15dc:	18 95       	reti

000015de <__vector_17>:
    15de:	1f 92       	push	r1
    15e0:	0f 92       	push	r0
    15e2:	0f b6       	in	r0, 0x3f	; 63
    15e4:	0f 92       	push	r0
    15e6:	11 24       	eor	r1, r1
    15e8:	0f 93       	push	r16
    15ea:	1f 93       	push	r17
    15ec:	2f 93       	push	r18
    15ee:	3f 93       	push	r19
    15f0:	4f 93       	push	r20
    15f2:	5f 93       	push	r21
    15f4:	6f 93       	push	r22
    15f6:	7f 93       	push	r23
    15f8:	8f 93       	push	r24
    15fa:	9f 93       	push	r25
    15fc:	af 93       	push	r26
    15fe:	bf 93       	push	r27
    1600:	ef 93       	push	r30
    1602:	ff 93       	push	r31
    1604:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1608:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    160c:	ac 01       	movw	r20, r24
    160e:	09 2e       	mov	r0, r25
    1610:	00 0c       	add	r0, r0
    1612:	66 0b       	sbc	r22, r22
    1614:	77 0b       	sbc	r23, r23
    1616:	9a 01       	movw	r18, r20
    1618:	11 27       	eor	r17, r17
    161a:	00 27       	eor	r16, r16
    161c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1620:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	70 e0       	ldi	r23, 0x00	; 0
    1628:	40 2b       	or	r20, r16
    162a:	51 2b       	or	r21, r17
    162c:	62 2b       	or	r22, r18
    162e:	73 2b       	or	r23, r19
    1630:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1634:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1638:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    163c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1640:	b0 9b       	sbis	0x16, 0	; 22
    1642:	1a c0       	rjmp	.+52     	; 0x1678 <__vector_17+0x9a>
    1644:	01 96       	adiw	r24, 0x01	; 1
    1646:	09 2e       	mov	r0, r25
    1648:	00 0c       	add	r0, r0
    164a:	aa 0b       	sbc	r26, r26
    164c:	bb 0b       	sbc	r27, r27
    164e:	bc 01       	movw	r22, r24
    1650:	55 27       	eor	r21, r21
    1652:	44 27       	eor	r20, r20
    1654:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1658:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    165c:	a0 e0       	ldi	r26, 0x00	; 0
    165e:	b0 e0       	ldi	r27, 0x00	; 0
    1660:	84 2b       	or	r24, r20
    1662:	95 2b       	or	r25, r21
    1664:	a6 2b       	or	r26, r22
    1666:	b7 2b       	or	r27, r23
    1668:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    166c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1670:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1674:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1678:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    167c:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    1680:	30 97       	sbiw	r30, 0x00	; 0
    1682:	39 f0       	breq	.+14     	; 0x1692 <__vector_17+0xb4>
    1684:	6c e0       	ldi	r22, 0x0C	; 12
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    168c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    1690:	09 95       	icall
    1692:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1696:	ff 91       	pop	r31
    1698:	ef 91       	pop	r30
    169a:	bf 91       	pop	r27
    169c:	af 91       	pop	r26
    169e:	9f 91       	pop	r25
    16a0:	8f 91       	pop	r24
    16a2:	7f 91       	pop	r23
    16a4:	6f 91       	pop	r22
    16a6:	5f 91       	pop	r21
    16a8:	4f 91       	pop	r20
    16aa:	3f 91       	pop	r19
    16ac:	2f 91       	pop	r18
    16ae:	1f 91       	pop	r17
    16b0:	0f 91       	pop	r16
    16b2:	0f 90       	pop	r0
    16b4:	0f be       	out	0x3f, r0	; 63
    16b6:	0f 90       	pop	r0
    16b8:	1f 90       	pop	r1
    16ba:	18 95       	reti

000016bc <__vector_18>:
    16bc:	1f 92       	push	r1
    16be:	0f 92       	push	r0
    16c0:	0f b6       	in	r0, 0x3f	; 63
    16c2:	0f 92       	push	r0
    16c4:	11 24       	eor	r1, r1
    16c6:	0f 93       	push	r16
    16c8:	1f 93       	push	r17
    16ca:	2f 93       	push	r18
    16cc:	3f 93       	push	r19
    16ce:	4f 93       	push	r20
    16d0:	5f 93       	push	r21
    16d2:	6f 93       	push	r22
    16d4:	7f 93       	push	r23
    16d6:	8f 93       	push	r24
    16d8:	9f 93       	push	r25
    16da:	af 93       	push	r26
    16dc:	bf 93       	push	r27
    16de:	ef 93       	push	r30
    16e0:	ff 93       	push	r31
    16e2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    16e6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    16ea:	ac 01       	movw	r20, r24
    16ec:	09 2e       	mov	r0, r25
    16ee:	00 0c       	add	r0, r0
    16f0:	66 0b       	sbc	r22, r22
    16f2:	77 0b       	sbc	r23, r23
    16f4:	9a 01       	movw	r18, r20
    16f6:	11 27       	eor	r17, r17
    16f8:	00 27       	eor	r16, r16
    16fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1702:	60 e0       	ldi	r22, 0x00	; 0
    1704:	70 e0       	ldi	r23, 0x00	; 0
    1706:	40 2b       	or	r20, r16
    1708:	51 2b       	or	r21, r17
    170a:	62 2b       	or	r22, r18
    170c:	73 2b       	or	r23, r19
    170e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1712:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1716:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    171a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    171e:	b0 9b       	sbis	0x16, 0	; 22
    1720:	1a c0       	rjmp	.+52     	; 0x1756 <__vector_18+0x9a>
    1722:	01 96       	adiw	r24, 0x01	; 1
    1724:	09 2e       	mov	r0, r25
    1726:	00 0c       	add	r0, r0
    1728:	aa 0b       	sbc	r26, r26
    172a:	bb 0b       	sbc	r27, r27
    172c:	bc 01       	movw	r22, r24
    172e:	55 27       	eor	r21, r21
    1730:	44 27       	eor	r20, r20
    1732:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1736:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    173a:	a0 e0       	ldi	r26, 0x00	; 0
    173c:	b0 e0       	ldi	r27, 0x00	; 0
    173e:	84 2b       	or	r24, r20
    1740:	95 2b       	or	r25, r21
    1742:	a6 2b       	or	r26, r22
    1744:	b7 2b       	or	r27, r23
    1746:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    174a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    174e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1752:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1756:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    175a:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    175e:	30 97       	sbiw	r30, 0x00	; 0
    1760:	39 f0       	breq	.+14     	; 0x1770 <__vector_18+0xb4>
    1762:	6d e0       	ldi	r22, 0x0D	; 13
    1764:	70 e0       	ldi	r23, 0x00	; 0
    1766:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    176a:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    176e:	09 95       	icall
    1770:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1774:	ff 91       	pop	r31
    1776:	ef 91       	pop	r30
    1778:	bf 91       	pop	r27
    177a:	af 91       	pop	r26
    177c:	9f 91       	pop	r25
    177e:	8f 91       	pop	r24
    1780:	7f 91       	pop	r23
    1782:	6f 91       	pop	r22
    1784:	5f 91       	pop	r21
    1786:	4f 91       	pop	r20
    1788:	3f 91       	pop	r19
    178a:	2f 91       	pop	r18
    178c:	1f 91       	pop	r17
    178e:	0f 91       	pop	r16
    1790:	0f 90       	pop	r0
    1792:	0f be       	out	0x3f, r0	; 63
    1794:	0f 90       	pop	r0
    1796:	1f 90       	pop	r1
    1798:	18 95       	reti

0000179a <__vector_19>:
    179a:	1f 92       	push	r1
    179c:	0f 92       	push	r0
    179e:	0f b6       	in	r0, 0x3f	; 63
    17a0:	0f 92       	push	r0
    17a2:	11 24       	eor	r1, r1
    17a4:	0f 93       	push	r16
    17a6:	1f 93       	push	r17
    17a8:	2f 93       	push	r18
    17aa:	3f 93       	push	r19
    17ac:	4f 93       	push	r20
    17ae:	5f 93       	push	r21
    17b0:	6f 93       	push	r22
    17b2:	7f 93       	push	r23
    17b4:	8f 93       	push	r24
    17b6:	9f 93       	push	r25
    17b8:	af 93       	push	r26
    17ba:	bf 93       	push	r27
    17bc:	ef 93       	push	r30
    17be:	ff 93       	push	r31
    17c0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    17c4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    17c8:	ac 01       	movw	r20, r24
    17ca:	09 2e       	mov	r0, r25
    17cc:	00 0c       	add	r0, r0
    17ce:	66 0b       	sbc	r22, r22
    17d0:	77 0b       	sbc	r23, r23
    17d2:	9a 01       	movw	r18, r20
    17d4:	11 27       	eor	r17, r17
    17d6:	00 27       	eor	r16, r16
    17d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	70 e0       	ldi	r23, 0x00	; 0
    17e4:	40 2b       	or	r20, r16
    17e6:	51 2b       	or	r21, r17
    17e8:	62 2b       	or	r22, r18
    17ea:	73 2b       	or	r23, r19
    17ec:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    17f0:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    17f4:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    17f8:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    17fc:	b0 9b       	sbis	0x16, 0	; 22
    17fe:	1a c0       	rjmp	.+52     	; 0x1834 <__vector_19+0x9a>
    1800:	01 96       	adiw	r24, 0x01	; 1
    1802:	09 2e       	mov	r0, r25
    1804:	00 0c       	add	r0, r0
    1806:	aa 0b       	sbc	r26, r26
    1808:	bb 0b       	sbc	r27, r27
    180a:	bc 01       	movw	r22, r24
    180c:	55 27       	eor	r21, r21
    180e:	44 27       	eor	r20, r20
    1810:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1814:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1818:	a0 e0       	ldi	r26, 0x00	; 0
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	84 2b       	or	r24, r20
    181e:	95 2b       	or	r25, r21
    1820:	a6 2b       	or	r26, r22
    1822:	b7 2b       	or	r27, r23
    1824:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1828:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    182c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1830:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1834:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    1838:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    183c:	30 97       	sbiw	r30, 0x00	; 0
    183e:	39 f0       	breq	.+14     	; 0x184e <__vector_19+0xb4>
    1840:	6e e0       	ldi	r22, 0x0E	; 14
    1842:	70 e0       	ldi	r23, 0x00	; 0
    1844:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    1848:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    184c:	09 95       	icall
    184e:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1852:	ff 91       	pop	r31
    1854:	ef 91       	pop	r30
    1856:	bf 91       	pop	r27
    1858:	af 91       	pop	r26
    185a:	9f 91       	pop	r25
    185c:	8f 91       	pop	r24
    185e:	7f 91       	pop	r23
    1860:	6f 91       	pop	r22
    1862:	5f 91       	pop	r21
    1864:	4f 91       	pop	r20
    1866:	3f 91       	pop	r19
    1868:	2f 91       	pop	r18
    186a:	1f 91       	pop	r17
    186c:	0f 91       	pop	r16
    186e:	0f 90       	pop	r0
    1870:	0f be       	out	0x3f, r0	; 63
    1872:	0f 90       	pop	r0
    1874:	1f 90       	pop	r1
    1876:	18 95       	reti

00001878 <__vector_20>:
    1878:	1f 92       	push	r1
    187a:	0f 92       	push	r0
    187c:	0f b6       	in	r0, 0x3f	; 63
    187e:	0f 92       	push	r0
    1880:	11 24       	eor	r1, r1
    1882:	0f 93       	push	r16
    1884:	1f 93       	push	r17
    1886:	2f 93       	push	r18
    1888:	3f 93       	push	r19
    188a:	4f 93       	push	r20
    188c:	5f 93       	push	r21
    188e:	6f 93       	push	r22
    1890:	7f 93       	push	r23
    1892:	8f 93       	push	r24
    1894:	9f 93       	push	r25
    1896:	af 93       	push	r26
    1898:	bf 93       	push	r27
    189a:	ef 93       	push	r30
    189c:	ff 93       	push	r31
    189e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    18a2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    18a6:	ac 01       	movw	r20, r24
    18a8:	09 2e       	mov	r0, r25
    18aa:	00 0c       	add	r0, r0
    18ac:	66 0b       	sbc	r22, r22
    18ae:	77 0b       	sbc	r23, r23
    18b0:	9a 01       	movw	r18, r20
    18b2:	11 27       	eor	r17, r17
    18b4:	00 27       	eor	r16, r16
    18b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18be:	60 e0       	ldi	r22, 0x00	; 0
    18c0:	70 e0       	ldi	r23, 0x00	; 0
    18c2:	40 2b       	or	r20, r16
    18c4:	51 2b       	or	r21, r17
    18c6:	62 2b       	or	r22, r18
    18c8:	73 2b       	or	r23, r19
    18ca:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    18ce:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    18d2:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    18d6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    18da:	b0 9b       	sbis	0x16, 0	; 22
    18dc:	1a c0       	rjmp	.+52     	; 0x1912 <__vector_20+0x9a>
    18de:	01 96       	adiw	r24, 0x01	; 1
    18e0:	09 2e       	mov	r0, r25
    18e2:	00 0c       	add	r0, r0
    18e4:	aa 0b       	sbc	r26, r26
    18e6:	bb 0b       	sbc	r27, r27
    18e8:	bc 01       	movw	r22, r24
    18ea:	55 27       	eor	r21, r21
    18ec:	44 27       	eor	r20, r20
    18ee:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f6:	a0 e0       	ldi	r26, 0x00	; 0
    18f8:	b0 e0       	ldi	r27, 0x00	; 0
    18fa:	84 2b       	or	r24, r20
    18fc:	95 2b       	or	r25, r21
    18fe:	a6 2b       	or	r26, r22
    1900:	b7 2b       	or	r27, r23
    1902:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1906:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    190a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    190e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1912:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1916:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    191a:	30 97       	sbiw	r30, 0x00	; 0
    191c:	39 f0       	breq	.+14     	; 0x192c <__vector_20+0xb4>
    191e:	6f e0       	ldi	r22, 0x0F	; 15
    1920:	70 e0       	ldi	r23, 0x00	; 0
    1922:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1926:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    192a:	09 95       	icall
    192c:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1930:	ff 91       	pop	r31
    1932:	ef 91       	pop	r30
    1934:	bf 91       	pop	r27
    1936:	af 91       	pop	r26
    1938:	9f 91       	pop	r25
    193a:	8f 91       	pop	r24
    193c:	7f 91       	pop	r23
    193e:	6f 91       	pop	r22
    1940:	5f 91       	pop	r21
    1942:	4f 91       	pop	r20
    1944:	3f 91       	pop	r19
    1946:	2f 91       	pop	r18
    1948:	1f 91       	pop	r17
    194a:	0f 91       	pop	r16
    194c:	0f 90       	pop	r0
    194e:	0f be       	out	0x3f, r0	; 63
    1950:	0f 90       	pop	r0
    1952:	1f 90       	pop	r1
    1954:	18 95       	reti

00001956 <__vector_21>:
    1956:	1f 92       	push	r1
    1958:	0f 92       	push	r0
    195a:	0f b6       	in	r0, 0x3f	; 63
    195c:	0f 92       	push	r0
    195e:	11 24       	eor	r1, r1
    1960:	0f 93       	push	r16
    1962:	1f 93       	push	r17
    1964:	2f 93       	push	r18
    1966:	3f 93       	push	r19
    1968:	4f 93       	push	r20
    196a:	5f 93       	push	r21
    196c:	6f 93       	push	r22
    196e:	7f 93       	push	r23
    1970:	8f 93       	push	r24
    1972:	9f 93       	push	r25
    1974:	af 93       	push	r26
    1976:	bf 93       	push	r27
    1978:	ef 93       	push	r30
    197a:	ff 93       	push	r31
    197c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1980:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1984:	ac 01       	movw	r20, r24
    1986:	09 2e       	mov	r0, r25
    1988:	00 0c       	add	r0, r0
    198a:	66 0b       	sbc	r22, r22
    198c:	77 0b       	sbc	r23, r23
    198e:	9a 01       	movw	r18, r20
    1990:	11 27       	eor	r17, r17
    1992:	00 27       	eor	r16, r16
    1994:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1998:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    199c:	60 e0       	ldi	r22, 0x00	; 0
    199e:	70 e0       	ldi	r23, 0x00	; 0
    19a0:	40 2b       	or	r20, r16
    19a2:	51 2b       	or	r21, r17
    19a4:	62 2b       	or	r22, r18
    19a6:	73 2b       	or	r23, r19
    19a8:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    19ac:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    19b0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    19b4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    19b8:	b0 9b       	sbis	0x16, 0	; 22
    19ba:	1a c0       	rjmp	.+52     	; 0x19f0 <__vector_21+0x9a>
    19bc:	01 96       	adiw	r24, 0x01	; 1
    19be:	09 2e       	mov	r0, r25
    19c0:	00 0c       	add	r0, r0
    19c2:	aa 0b       	sbc	r26, r26
    19c4:	bb 0b       	sbc	r27, r27
    19c6:	bc 01       	movw	r22, r24
    19c8:	55 27       	eor	r21, r21
    19ca:	44 27       	eor	r20, r20
    19cc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19d0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19d4:	a0 e0       	ldi	r26, 0x00	; 0
    19d6:	b0 e0       	ldi	r27, 0x00	; 0
    19d8:	84 2b       	or	r24, r20
    19da:	95 2b       	or	r25, r21
    19dc:	a6 2b       	or	r26, r22
    19de:	b7 2b       	or	r27, r23
    19e0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    19e4:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    19e8:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    19ec:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    19f0:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    19f4:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    19f8:	30 97       	sbiw	r30, 0x00	; 0
    19fa:	39 f0       	breq	.+14     	; 0x1a0a <__vector_21+0xb4>
    19fc:	60 e1       	ldi	r22, 0x10	; 16
    19fe:	70 e0       	ldi	r23, 0x00	; 0
    1a00:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    1a04:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1a08:	09 95       	icall
    1a0a:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1a0e:	ff 91       	pop	r31
    1a10:	ef 91       	pop	r30
    1a12:	bf 91       	pop	r27
    1a14:	af 91       	pop	r26
    1a16:	9f 91       	pop	r25
    1a18:	8f 91       	pop	r24
    1a1a:	7f 91       	pop	r23
    1a1c:	6f 91       	pop	r22
    1a1e:	5f 91       	pop	r21
    1a20:	4f 91       	pop	r20
    1a22:	3f 91       	pop	r19
    1a24:	2f 91       	pop	r18
    1a26:	1f 91       	pop	r17
    1a28:	0f 91       	pop	r16
    1a2a:	0f 90       	pop	r0
    1a2c:	0f be       	out	0x3f, r0	; 63
    1a2e:	0f 90       	pop	r0
    1a30:	1f 90       	pop	r1
    1a32:	18 95       	reti

00001a34 <__vector_22>:
    1a34:	1f 92       	push	r1
    1a36:	0f 92       	push	r0
    1a38:	0f b6       	in	r0, 0x3f	; 63
    1a3a:	0f 92       	push	r0
    1a3c:	11 24       	eor	r1, r1
    1a3e:	0f 93       	push	r16
    1a40:	1f 93       	push	r17
    1a42:	2f 93       	push	r18
    1a44:	3f 93       	push	r19
    1a46:	4f 93       	push	r20
    1a48:	5f 93       	push	r21
    1a4a:	6f 93       	push	r22
    1a4c:	7f 93       	push	r23
    1a4e:	8f 93       	push	r24
    1a50:	9f 93       	push	r25
    1a52:	af 93       	push	r26
    1a54:	bf 93       	push	r27
    1a56:	ef 93       	push	r30
    1a58:	ff 93       	push	r31
    1a5a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1a5e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1a62:	ac 01       	movw	r20, r24
    1a64:	09 2e       	mov	r0, r25
    1a66:	00 0c       	add	r0, r0
    1a68:	66 0b       	sbc	r22, r22
    1a6a:	77 0b       	sbc	r23, r23
    1a6c:	9a 01       	movw	r18, r20
    1a6e:	11 27       	eor	r17, r17
    1a70:	00 27       	eor	r16, r16
    1a72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a7a:	60 e0       	ldi	r22, 0x00	; 0
    1a7c:	70 e0       	ldi	r23, 0x00	; 0
    1a7e:	40 2b       	or	r20, r16
    1a80:	51 2b       	or	r21, r17
    1a82:	62 2b       	or	r22, r18
    1a84:	73 2b       	or	r23, r19
    1a86:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1a8a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1a8e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1a92:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1a96:	b0 9b       	sbis	0x16, 0	; 22
    1a98:	1a c0       	rjmp	.+52     	; 0x1ace <__vector_22+0x9a>
    1a9a:	01 96       	adiw	r24, 0x01	; 1
    1a9c:	09 2e       	mov	r0, r25
    1a9e:	00 0c       	add	r0, r0
    1aa0:	aa 0b       	sbc	r26, r26
    1aa2:	bb 0b       	sbc	r27, r27
    1aa4:	bc 01       	movw	r22, r24
    1aa6:	55 27       	eor	r21, r21
    1aa8:	44 27       	eor	r20, r20
    1aaa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aae:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab2:	a0 e0       	ldi	r26, 0x00	; 0
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	84 2b       	or	r24, r20
    1ab8:	95 2b       	or	r25, r21
    1aba:	a6 2b       	or	r26, r22
    1abc:	b7 2b       	or	r27, r23
    1abe:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1ac2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1ac6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1aca:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1ace:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    1ad2:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1ad6:	30 97       	sbiw	r30, 0x00	; 0
    1ad8:	39 f0       	breq	.+14     	; 0x1ae8 <__vector_22+0xb4>
    1ada:	61 e1       	ldi	r22, 0x11	; 17
    1adc:	70 e0       	ldi	r23, 0x00	; 0
    1ade:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    1ae2:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    1ae6:	09 95       	icall
    1ae8:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1aec:	ff 91       	pop	r31
    1aee:	ef 91       	pop	r30
    1af0:	bf 91       	pop	r27
    1af2:	af 91       	pop	r26
    1af4:	9f 91       	pop	r25
    1af6:	8f 91       	pop	r24
    1af8:	7f 91       	pop	r23
    1afa:	6f 91       	pop	r22
    1afc:	5f 91       	pop	r21
    1afe:	4f 91       	pop	r20
    1b00:	3f 91       	pop	r19
    1b02:	2f 91       	pop	r18
    1b04:	1f 91       	pop	r17
    1b06:	0f 91       	pop	r16
    1b08:	0f 90       	pop	r0
    1b0a:	0f be       	out	0x3f, r0	; 63
    1b0c:	0f 90       	pop	r0
    1b0e:	1f 90       	pop	r1
    1b10:	18 95       	reti

00001b12 <idle>:
    1b12:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1b16:	78 94       	sei
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	83 bf       	out	0x33, r24	; 51
    1b1c:	88 95       	sleep
    1b1e:	fc cf       	rjmp	.-8      	; 0x1b18 <idle+0x6>

00001b20 <__vector_9>:
    1b20:	1f 92       	push	r1
    1b22:	0f 92       	push	r0
    1b24:	0f b6       	in	r0, 0x3f	; 63
    1b26:	0f 92       	push	r0
    1b28:	11 24       	eor	r1, r1
    1b2a:	2f 93       	push	r18
    1b2c:	3f 93       	push	r19
    1b2e:	4f 93       	push	r20
    1b30:	5f 93       	push	r21
    1b32:	6f 93       	push	r22
    1b34:	7f 93       	push	r23
    1b36:	8f 93       	push	r24
    1b38:	9f 93       	push	r25
    1b3a:	ef 93       	push	r30
    1b3c:	ff 93       	push	r31
    1b3e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1b42:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1b46:	01 96       	adiw	r24, 0x01	; 1
    1b48:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
    1b4c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
    1b50:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1b54:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1b58:	30 97       	sbiw	r30, 0x00	; 0
    1b5a:	01 f1       	breq	.+64     	; 0x1b9c <__vector_9+0x7c>
    1b5c:	42 81       	ldd	r20, Z+2	; 0x02
    1b5e:	53 81       	ldd	r21, Z+3	; 0x03
    1b60:	64 81       	ldd	r22, Z+4	; 0x04
    1b62:	75 81       	ldd	r23, Z+5	; 0x05
    1b64:	86 17       	cp	r24, r22
    1b66:	97 07       	cpc	r25, r23
    1b68:	c9 f4       	brne	.+50     	; 0x1b9c <__vector_9+0x7c>
    1b6a:	ca 01       	movw	r24, r20
    1b6c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b70:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b74:	42 1b       	sub	r20, r18
    1b76:	53 0b       	sbc	r21, r19
    1b78:	41 30       	cpi	r20, 0x01	; 1
    1b7a:	51 05       	cpc	r21, r1
    1b7c:	29 f4       	brne	.+10     	; 0x1b88 <__vector_9+0x68>
    1b7e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b82:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b86:	01 96       	adiw	r24, 0x01	; 1
    1b88:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b8c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b90:	ef e6       	ldi	r30, 0x6F	; 111
    1b92:	f0 e0       	ldi	r31, 0x00	; 0
    1b94:	80 81       	ld	r24, Z
    1b96:	82 60       	ori	r24, 0x02	; 2
    1b98:	80 83       	st	Z, r24
    1b9a:	05 c0       	rjmp	.+10     	; 0x1ba6 <__vector_9+0x86>
    1b9c:	ef e6       	ldi	r30, 0x6F	; 111
    1b9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ba0:	80 81       	ld	r24, Z
    1ba2:	8d 7f       	andi	r24, 0xFD	; 253
    1ba4:	80 83       	st	Z, r24
    1ba6:	ff 91       	pop	r31
    1ba8:	ef 91       	pop	r30
    1baa:	9f 91       	pop	r25
    1bac:	8f 91       	pop	r24
    1bae:	7f 91       	pop	r23
    1bb0:	6f 91       	pop	r22
    1bb2:	5f 91       	pop	r21
    1bb4:	4f 91       	pop	r20
    1bb6:	3f 91       	pop	r19
    1bb8:	2f 91       	pop	r18
    1bba:	0f 90       	pop	r0
    1bbc:	0f be       	out	0x3f, r0	; 63
    1bbe:	0f 90       	pop	r0
    1bc0:	1f 90       	pop	r1
    1bc2:	18 95       	reti

00001bc4 <__vector_7>:
    1bc4:	1f 92       	push	r1
    1bc6:	0f 92       	push	r0
    1bc8:	0f b6       	in	r0, 0x3f	; 63
    1bca:	0f 92       	push	r0
    1bcc:	11 24       	eor	r1, r1
    1bce:	cf 92       	push	r12
    1bd0:	df 92       	push	r13
    1bd2:	ef 92       	push	r14
    1bd4:	ff 92       	push	r15
    1bd6:	2f 93       	push	r18
    1bd8:	3f 93       	push	r19
    1bda:	4f 93       	push	r20
    1bdc:	5f 93       	push	r21
    1bde:	6f 93       	push	r22
    1be0:	7f 93       	push	r23
    1be2:	8f 93       	push	r24
    1be4:	9f 93       	push	r25
    1be6:	af 93       	push	r26
    1be8:	bf 93       	push	r27
    1bea:	ef 93       	push	r30
    1bec:	ff 93       	push	r31
    1bee:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1bf2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1bf6:	6c 01       	movw	r12, r24
    1bf8:	09 2e       	mov	r0, r25
    1bfa:	00 0c       	add	r0, r0
    1bfc:	ee 08       	sbc	r14, r14
    1bfe:	ff 08       	sbc	r15, r15
    1c00:	76 01       	movw	r14, r12
    1c02:	dd 24       	eor	r13, r13
    1c04:	cc 24       	eor	r12, r12
    1c06:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c0a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c0e:	60 e0       	ldi	r22, 0x00	; 0
    1c10:	70 e0       	ldi	r23, 0x00	; 0
    1c12:	c4 2a       	or	r12, r20
    1c14:	d5 2a       	or	r13, r21
    1c16:	e6 2a       	or	r14, r22
    1c18:	f7 2a       	or	r15, r23
    1c1a:	b0 9b       	sbis	0x16, 0	; 22
    1c1c:	1e c0       	rjmp	.+60     	; 0x1c5a <__vector_7+0x96>
    1c1e:	6c 01       	movw	r12, r24
    1c20:	2f ef       	ldi	r18, 0xFF	; 255
    1c22:	c2 1a       	sub	r12, r18
    1c24:	d2 0a       	sbc	r13, r18
    1c26:	0d 2c       	mov	r0, r13
    1c28:	00 0c       	add	r0, r0
    1c2a:	ee 08       	sbc	r14, r14
    1c2c:	ff 08       	sbc	r15, r15
    1c2e:	d6 01       	movw	r26, r12
    1c30:	99 27       	eor	r25, r25
    1c32:	88 27       	eor	r24, r24
    1c34:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c38:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c3c:	e1 2c       	mov	r14, r1
    1c3e:	f1 2c       	mov	r15, r1
    1c40:	c8 2a       	or	r12, r24
    1c42:	d9 2a       	or	r13, r25
    1c44:	ea 2a       	or	r14, r26
    1c46:	fb 2a       	or	r15, r27
    1c48:	08 c0       	rjmp	.+16     	; 0x1c5a <__vector_7+0x96>
    1c4a:	8e e3       	ldi	r24, 0x3E	; 62
    1c4c:	91 e0       	ldi	r25, 0x01	; 1
    1c4e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <dequeue>
    1c52:	60 e4       	ldi	r22, 0x40	; 64
    1c54:	71 e0       	ldi	r23, 0x01	; 1
    1c56:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <enqueueByDeadline>
    1c5a:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1c5e:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1c62:	30 97       	sbiw	r30, 0x00	; 0
    1c64:	69 f0       	breq	.+26     	; 0x1c80 <__vector_7+0xbc>
    1c66:	82 81       	ldd	r24, Z+2	; 0x02
    1c68:	93 81       	ldd	r25, Z+3	; 0x03
    1c6a:	a4 81       	ldd	r26, Z+4	; 0x04
    1c6c:	b5 81       	ldd	r27, Z+5	; 0x05
    1c6e:	8c 19       	sub	r24, r12
    1c70:	9d 09       	sbc	r25, r13
    1c72:	ae 09       	sbc	r26, r14
    1c74:	bf 09       	sbc	r27, r15
    1c76:	18 16       	cp	r1, r24
    1c78:	19 06       	cpc	r1, r25
    1c7a:	1a 06       	cpc	r1, r26
    1c7c:	1b 06       	cpc	r1, r27
    1c7e:	2c f7       	brge	.-54     	; 0x1c4a <__vector_7+0x86>
    1c80:	30 97       	sbiw	r30, 0x00	; 0
    1c82:	21 f1       	breq	.+72     	; 0x1ccc <__vector_7+0x108>
    1c84:	82 81       	ldd	r24, Z+2	; 0x02
    1c86:	93 81       	ldd	r25, Z+3	; 0x03
    1c88:	a4 81       	ldd	r26, Z+4	; 0x04
    1c8a:	b5 81       	ldd	r27, Z+5	; 0x05
    1c8c:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1c90:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1c94:	2a 17       	cp	r18, r26
    1c96:	3b 07       	cpc	r19, r27
    1c98:	c9 f4       	brne	.+50     	; 0x1ccc <__vector_7+0x108>
    1c9a:	9c 01       	movw	r18, r24
    1c9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ca0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ca4:	84 1b       	sub	r24, r20
    1ca6:	95 0b       	sbc	r25, r21
    1ca8:	01 97       	sbiw	r24, 0x01	; 1
    1caa:	31 f4       	brne	.+12     	; 0x1cb8 <__vector_7+0xf4>
    1cac:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cb0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cb4:	2f 5f       	subi	r18, 0xFF	; 255
    1cb6:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cbc:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1cc0:	ef e6       	ldi	r30, 0x6F	; 111
    1cc2:	f0 e0       	ldi	r31, 0x00	; 0
    1cc4:	80 81       	ld	r24, Z
    1cc6:	82 60       	ori	r24, 0x02	; 2
    1cc8:	80 83       	st	Z, r24
    1cca:	05 c0       	rjmp	.+10     	; 0x1cd6 <__vector_7+0x112>
    1ccc:	ef e6       	ldi	r30, 0x6F	; 111
    1cce:	f0 e0       	ldi	r31, 0x00	; 0
    1cd0:	80 81       	ld	r24, Z
    1cd2:	8d 7f       	andi	r24, 0xFD	; 253
    1cd4:	80 83       	st	Z, r24
    1cd6:	0e 94 87 05 	call	0xb0e	; 0xb0e <schedule>
    1cda:	ff 91       	pop	r31
    1cdc:	ef 91       	pop	r30
    1cde:	bf 91       	pop	r27
    1ce0:	af 91       	pop	r26
    1ce2:	9f 91       	pop	r25
    1ce4:	8f 91       	pop	r24
    1ce6:	7f 91       	pop	r23
    1ce8:	6f 91       	pop	r22
    1cea:	5f 91       	pop	r21
    1cec:	4f 91       	pop	r20
    1cee:	3f 91       	pop	r19
    1cf0:	2f 91       	pop	r18
    1cf2:	ff 90       	pop	r15
    1cf4:	ef 90       	pop	r14
    1cf6:	df 90       	pop	r13
    1cf8:	cf 90       	pop	r12
    1cfa:	0f 90       	pop	r0
    1cfc:	0f be       	out	0x3f, r0	; 63
    1cfe:	0f 90       	pop	r0
    1d00:	1f 90       	pop	r1
    1d02:	18 95       	reti

00001d04 <async>:
    1d04:	3f 92       	push	r3
    1d06:	4f 92       	push	r4
    1d08:	5f 92       	push	r5
    1d0a:	6f 92       	push	r6
    1d0c:	7f 92       	push	r7
    1d0e:	8f 92       	push	r8
    1d10:	9f 92       	push	r9
    1d12:	af 92       	push	r10
    1d14:	bf 92       	push	r11
    1d16:	cf 92       	push	r12
    1d18:	df 92       	push	r13
    1d1a:	ef 92       	push	r14
    1d1c:	ff 92       	push	r15
    1d1e:	0f 93       	push	r16
    1d20:	1f 93       	push	r17
    1d22:	cf 93       	push	r28
    1d24:	df 93       	push	r29
    1d26:	2b 01       	movw	r4, r22
    1d28:	3c 01       	movw	r6, r24
    1d2a:	49 01       	movw	r8, r18
    1d2c:	5a 01       	movw	r10, r20
    1d2e:	8f b7       	in	r24, 0x3f	; 63
    1d30:	80 78       	andi	r24, 0x80	; 128
    1d32:	38 2e       	mov	r3, r24
    1d34:	f8 94       	cli
    1d36:	86 e0       	ldi	r24, 0x06	; 6
    1d38:	91 e0       	ldi	r25, 0x01	; 1
    1d3a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <dequeue>
    1d3e:	ec 01       	movw	r28, r24
    1d40:	1b 87       	std	Y+11, r17	; 0x0b
    1d42:	0a 87       	std	Y+10, r16	; 0x0a
    1d44:	fd 86       	std	Y+13, r15	; 0x0d
    1d46:	ec 86       	std	Y+12, r14	; 0x0c
    1d48:	df 86       	std	Y+15, r13	; 0x0f
    1d4a:	ce 86       	std	Y+14, r12	; 0x0e
    1d4c:	33 20       	and	r3, r3
    1d4e:	61 f0       	breq	.+24     	; 0x1d68 <async+0x64>
    1d50:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d54:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d58:	02 80       	ldd	r0, Z+2	; 0x02
    1d5a:	f3 81       	ldd	r31, Z+3	; 0x03
    1d5c:	e0 2d       	mov	r30, r0
    1d5e:	82 81       	ldd	r24, Z+2	; 0x02
    1d60:	93 81       	ldd	r25, Z+3	; 0x03
    1d62:	a4 81       	ldd	r26, Z+4	; 0x04
    1d64:	b5 81       	ldd	r27, Z+5	; 0x05
    1d66:	08 c0       	rjmp	.+16     	; 0x1d78 <async+0x74>
    1d68:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <timestamp>
    1d6c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <timestamp+0x1>
    1d70:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <timestamp+0x2>
    1d74:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <timestamp+0x3>
    1d78:	48 0e       	add	r4, r24
    1d7a:	59 1e       	adc	r5, r25
    1d7c:	6a 1e       	adc	r6, r26
    1d7e:	7b 1e       	adc	r7, r27
    1d80:	4a 82       	std	Y+2, r4	; 0x02
    1d82:	5b 82       	std	Y+3, r5	; 0x03
    1d84:	6c 82       	std	Y+4, r6	; 0x04
    1d86:	7d 82       	std	Y+5, r7	; 0x05
    1d88:	18 14       	cp	r1, r8
    1d8a:	19 04       	cpc	r1, r9
    1d8c:	1a 04       	cpc	r1, r10
    1d8e:	1b 04       	cpc	r1, r11
    1d90:	44 f0       	brlt	.+16     	; 0x1da2 <async+0x9e>
    1d92:	0f 2e       	mov	r0, r31
    1d94:	88 24       	eor	r8, r8
    1d96:	8a 94       	dec	r8
    1d98:	98 2c       	mov	r9, r8
    1d9a:	a8 2c       	mov	r10, r8
    1d9c:	ff e7       	ldi	r31, 0x7F	; 127
    1d9e:	bf 2e       	mov	r11, r31
    1da0:	f0 2d       	mov	r31, r0
    1da2:	84 0c       	add	r8, r4
    1da4:	95 1c       	adc	r9, r5
    1da6:	a6 1c       	adc	r10, r6
    1da8:	b7 1c       	adc	r11, r7
    1daa:	8e 82       	std	Y+6, r8	; 0x06
    1dac:	9f 82       	std	Y+7, r9	; 0x07
    1dae:	a8 86       	std	Y+8, r10	; 0x08
    1db0:	b9 86       	std	Y+9, r11	; 0x09
    1db2:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1db6:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1dba:	c9 01       	movw	r24, r18
    1dbc:	03 2e       	mov	r0, r19
    1dbe:	00 0c       	add	r0, r0
    1dc0:	aa 0b       	sbc	r26, r26
    1dc2:	bb 0b       	sbc	r27, r27
    1dc4:	dc 01       	movw	r26, r24
    1dc6:	99 27       	eor	r25, r25
    1dc8:	88 27       	eor	r24, r24
    1dca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dd2:	60 e0       	ldi	r22, 0x00	; 0
    1dd4:	70 e0       	ldi	r23, 0x00	; 0
    1dd6:	84 2b       	or	r24, r20
    1dd8:	95 2b       	or	r25, r21
    1dda:	a6 2b       	or	r26, r22
    1ddc:	b7 2b       	or	r27, r23
    1dde:	b0 9b       	sbis	0x16, 0	; 22
    1de0:	13 c0       	rjmp	.+38     	; 0x1e08 <async+0x104>
    1de2:	c9 01       	movw	r24, r18
    1de4:	01 96       	adiw	r24, 0x01	; 1
    1de6:	09 2e       	mov	r0, r25
    1de8:	00 0c       	add	r0, r0
    1dea:	aa 0b       	sbc	r26, r26
    1dec:	bb 0b       	sbc	r27, r27
    1dee:	dc 01       	movw	r26, r24
    1df0:	99 27       	eor	r25, r25
    1df2:	88 27       	eor	r24, r24
    1df4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1df8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dfc:	60 e0       	ldi	r22, 0x00	; 0
    1dfe:	70 e0       	ldi	r23, 0x00	; 0
    1e00:	84 2b       	or	r24, r20
    1e02:	95 2b       	or	r25, r21
    1e04:	a6 2b       	or	r26, r22
    1e06:	b7 2b       	or	r27, r23
    1e08:	48 1a       	sub	r4, r24
    1e0a:	59 0a       	sbc	r5, r25
    1e0c:	6a 0a       	sbc	r6, r26
    1e0e:	7b 0a       	sbc	r7, r27
    1e10:	14 14       	cp	r1, r4
    1e12:	15 04       	cpc	r1, r5
    1e14:	16 04       	cpc	r1, r6
    1e16:	17 04       	cpc	r1, r7
    1e18:	ac f5       	brge	.+106    	; 0x1e84 <async+0x180>
    1e1a:	6e e3       	ldi	r22, 0x3E	; 62
    1e1c:	71 e0       	ldi	r23, 0x01	; 1
    1e1e:	ce 01       	movw	r24, r28
    1e20:	0e 94 21 05 	call	0xa42	; 0xa42 <enqueueByBaseline>
    1e24:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1e28:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1e2c:	30 97       	sbiw	r30, 0x00	; 0
    1e2e:	21 f1       	breq	.+72     	; 0x1e78 <async+0x174>
    1e30:	82 81       	ldd	r24, Z+2	; 0x02
    1e32:	93 81       	ldd	r25, Z+3	; 0x03
    1e34:	a4 81       	ldd	r26, Z+4	; 0x04
    1e36:	b5 81       	ldd	r27, Z+5	; 0x05
    1e38:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1e3c:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1e40:	2a 17       	cp	r18, r26
    1e42:	3b 07       	cpc	r19, r27
    1e44:	c9 f4       	brne	.+50     	; 0x1e78 <async+0x174>
    1e46:	9c 01       	movw	r18, r24
    1e48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e50:	84 1b       	sub	r24, r20
    1e52:	95 0b       	sbc	r25, r21
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	31 f4       	brne	.+12     	; 0x1e64 <async+0x160>
    1e58:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e5c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e60:	2f 5f       	subi	r18, 0xFF	; 255
    1e62:	3f 4f       	sbci	r19, 0xFF	; 255
    1e64:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e68:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e6c:	ef e6       	ldi	r30, 0x6F	; 111
    1e6e:	f0 e0       	ldi	r31, 0x00	; 0
    1e70:	80 81       	ld	r24, Z
    1e72:	82 60       	ori	r24, 0x02	; 2
    1e74:	80 83       	st	Z, r24
    1e76:	39 c0       	rjmp	.+114    	; 0x1eea <async+0x1e6>
    1e78:	ef e6       	ldi	r30, 0x6F	; 111
    1e7a:	f0 e0       	ldi	r31, 0x00	; 0
    1e7c:	80 81       	ld	r24, Z
    1e7e:	8d 7f       	andi	r24, 0xFD	; 253
    1e80:	80 83       	st	Z, r24
    1e82:	33 c0       	rjmp	.+102    	; 0x1eea <async+0x1e6>
    1e84:	60 e4       	ldi	r22, 0x40	; 64
    1e86:	71 e0       	ldi	r23, 0x01	; 1
    1e88:	ce 01       	movw	r24, r28
    1e8a:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <enqueueByDeadline>
    1e8e:	33 20       	and	r3, r3
    1e90:	61 f1       	breq	.+88     	; 0x1eea <async+0x1e6>
    1e92:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e96:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e9a:	89 2b       	or	r24, r25
    1e9c:	31 f1       	breq	.+76     	; 0x1eea <async+0x1e6>
    1e9e:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    1ea2:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    1ea6:	86 81       	ldd	r24, Z+6	; 0x06
    1ea8:	97 81       	ldd	r25, Z+7	; 0x07
    1eaa:	a0 85       	ldd	r26, Z+8	; 0x08
    1eac:	b1 85       	ldd	r27, Z+9	; 0x09
    1eae:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1eb2:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1eb6:	02 80       	ldd	r0, Z+2	; 0x02
    1eb8:	f3 81       	ldd	r31, Z+3	; 0x03
    1eba:	e0 2d       	mov	r30, r0
    1ebc:	46 81       	ldd	r20, Z+6	; 0x06
    1ebe:	57 81       	ldd	r21, Z+7	; 0x07
    1ec0:	60 85       	ldd	r22, Z+8	; 0x08
    1ec2:	71 85       	ldd	r23, Z+9	; 0x09
    1ec4:	84 1b       	sub	r24, r20
    1ec6:	95 0b       	sbc	r25, r21
    1ec8:	a6 0b       	sbc	r26, r22
    1eca:	b7 0b       	sbc	r27, r23
    1ecc:	72 f4       	brpl	.+28     	; 0x1eea <async+0x1e6>
    1ece:	84 e0       	ldi	r24, 0x04	; 4
    1ed0:	91 e0       	ldi	r25, 0x01	; 1
    1ed2:	0e 94 7d 05 	call	0xafa	; 0xafa <pop>
    1ed6:	62 e0       	ldi	r22, 0x02	; 2
    1ed8:	71 e0       	ldi	r23, 0x01	; 1
    1eda:	0e 94 73 05 	call	0xae6	; 0xae6 <push>
    1ede:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1ee2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1ee6:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <dispatch>
    1eea:	33 20       	and	r3, r3
    1eec:	09 f0       	breq	.+2      	; 0x1ef0 <async+0x1ec>
    1eee:	78 94       	sei
    1ef0:	ce 01       	movw	r24, r28
    1ef2:	df 91       	pop	r29
    1ef4:	cf 91       	pop	r28
    1ef6:	1f 91       	pop	r17
    1ef8:	0f 91       	pop	r16
    1efa:	ff 90       	pop	r15
    1efc:	ef 90       	pop	r14
    1efe:	df 90       	pop	r13
    1f00:	cf 90       	pop	r12
    1f02:	bf 90       	pop	r11
    1f04:	af 90       	pop	r10
    1f06:	9f 90       	pop	r9
    1f08:	8f 90       	pop	r8
    1f0a:	7f 90       	pop	r7
    1f0c:	6f 90       	pop	r6
    1f0e:	5f 90       	pop	r5
    1f10:	4f 90       	pop	r4
    1f12:	3f 90       	pop	r3
    1f14:	08 95       	ret

00001f16 <sync>:
    1f16:	cf 92       	push	r12
    1f18:	df 92       	push	r13
    1f1a:	ef 92       	push	r14
    1f1c:	ff 92       	push	r15
    1f1e:	0f 93       	push	r16
    1f20:	1f 93       	push	r17
    1f22:	cf 93       	push	r28
    1f24:	df 93       	push	r29
    1f26:	ec 01       	movw	r28, r24
    1f28:	7b 01       	movw	r14, r22
    1f2a:	6a 01       	movw	r12, r20
    1f2c:	1f b7       	in	r17, 0x3f	; 63
    1f2e:	10 78       	andi	r17, 0x80	; 128
    1f30:	f8 94       	cli
    1f32:	a8 81       	ld	r26, Y
    1f34:	b9 81       	ldd	r27, Y+1	; 0x01
    1f36:	10 97       	sbiw	r26, 0x00	; 0
    1f38:	19 f4       	brne	.+6      	; 0x1f40 <sync+0x2a>
    1f3a:	35 c0       	rjmp	.+106    	; 0x1fa6 <sync+0x90>
    1f3c:	a0 81       	ld	r26, Z
    1f3e:	b1 81       	ldd	r27, Z+1	; 0x01
    1f40:	14 96       	adiw	r26, 0x04	; 4
    1f42:	ed 91       	ld	r30, X+
    1f44:	fc 91       	ld	r31, X
    1f46:	15 97       	sbiw	r26, 0x05	; 5
    1f48:	30 97       	sbiw	r30, 0x00	; 0
    1f4a:	c1 f7       	brne	.-16     	; 0x1f3c <sync+0x26>
    1f4c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f50:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f54:	a2 17       	cp	r26, r18
    1f56:	b3 07       	cpc	r27, r19
    1f58:	11 f0       	breq	.+4      	; 0x1f5e <sync+0x48>
    1f5a:	11 11       	cpse	r17, r1
    1f5c:	07 c0       	rjmp	.+14     	; 0x1f6c <sync+0x56>
    1f5e:	11 23       	and	r17, r17
    1f60:	09 f4       	brne	.+2      	; 0x1f64 <sync+0x4e>
    1f62:	4a c0       	rjmp	.+148    	; 0x1ff8 <sync+0xe2>
    1f64:	78 94       	sei
    1f66:	8f ef       	ldi	r24, 0xFF	; 255
    1f68:	9f ef       	ldi	r25, 0xFF	; 255
    1f6a:	4e c0       	rjmp	.+156    	; 0x2008 <sync+0xf2>
    1f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f6e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f70:	00 97       	sbiw	r24, 0x00	; 0
    1f72:	19 f0       	breq	.+6      	; 0x1f7a <sync+0x64>
    1f74:	fc 01       	movw	r30, r24
    1f76:	15 82       	std	Z+5, r1	; 0x05
    1f78:	14 82       	std	Z+4, r1	; 0x04
    1f7a:	3b 83       	std	Y+3, r19	; 0x03
    1f7c:	2a 83       	std	Y+2, r18	; 0x02
    1f7e:	f9 01       	movw	r30, r18
    1f80:	d5 83       	std	Z+5, r29	; 0x05
    1f82:	c4 83       	std	Z+4, r28	; 0x04
    1f84:	cd 01       	movw	r24, r26
    1f86:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <dispatch>
    1f8a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f8e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f92:	82 81       	ldd	r24, Z+2	; 0x02
    1f94:	93 81       	ldd	r25, Z+3	; 0x03
    1f96:	89 2b       	or	r24, r25
    1f98:	31 f4       	brne	.+12     	; 0x1fa6 <sync+0x90>
    1f9a:	11 23       	and	r17, r17
    1f9c:	81 f1       	breq	.+96     	; 0x1ffe <sync+0xe8>
    1f9e:	78 94       	sei
    1fa0:	80 e0       	ldi	r24, 0x00	; 0
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	31 c0       	rjmp	.+98     	; 0x2008 <sync+0xf2>
    1fa6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1faa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fae:	99 83       	std	Y+1, r25	; 0x01
    1fb0:	88 83       	st	Y, r24
    1fb2:	11 23       	and	r17, r17
    1fb4:	29 f0       	breq	.+10     	; 0x1fc0 <sync+0xaa>
    1fb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fba:	01 97       	sbiw	r24, 0x01	; 1
    1fbc:	09 f0       	breq	.+2      	; 0x1fc0 <sync+0xaa>
    1fbe:	78 94       	sei
    1fc0:	b6 01       	movw	r22, r12
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	f7 01       	movw	r30, r14
    1fc6:	09 95       	icall
    1fc8:	f8 2e       	mov	r15, r24
    1fca:	09 2f       	mov	r16, r25
    1fcc:	8f b7       	in	r24, 0x3f	; 63
    1fce:	f8 94       	cli
    1fd0:	19 82       	std	Y+1, r1	; 0x01
    1fd2:	18 82       	st	Y, r1
    1fd4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fd6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fd8:	82 30       	cpi	r24, 0x02	; 2
    1fda:	91 05       	cpc	r25, r1
    1fdc:	38 f0       	brcs	.+14     	; 0x1fec <sync+0xd6>
    1fde:	1b 82       	std	Y+3, r1	; 0x03
    1fe0:	1a 82       	std	Y+2, r1	; 0x02
    1fe2:	fc 01       	movw	r30, r24
    1fe4:	15 82       	std	Z+5, r1	; 0x05
    1fe6:	14 82       	std	Z+4, r1	; 0x04
    1fe8:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <dispatch>
    1fec:	11 23       	and	r17, r17
    1fee:	51 f0       	breq	.+20     	; 0x2004 <sync+0xee>
    1ff0:	78 94       	sei
    1ff2:	8f 2d       	mov	r24, r15
    1ff4:	90 2f       	mov	r25, r16
    1ff6:	08 c0       	rjmp	.+16     	; 0x2008 <sync+0xf2>
    1ff8:	8f ef       	ldi	r24, 0xFF	; 255
    1ffa:	9f ef       	ldi	r25, 0xFF	; 255
    1ffc:	05 c0       	rjmp	.+10     	; 0x2008 <sync+0xf2>
    1ffe:	80 e0       	ldi	r24, 0x00	; 0
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	02 c0       	rjmp	.+4      	; 0x2008 <sync+0xf2>
    2004:	8f 2d       	mov	r24, r15
    2006:	90 2f       	mov	r25, r16
    2008:	df 91       	pop	r29
    200a:	cf 91       	pop	r28
    200c:	1f 91       	pop	r17
    200e:	0f 91       	pop	r16
    2010:	ff 90       	pop	r15
    2012:	ef 90       	pop	r14
    2014:	df 90       	pop	r13
    2016:	cf 90       	pop	r12
    2018:	08 95       	ret

0000201a <run>:
    201a:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    201e:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2022:	80 e4       	ldi	r24, 0x40	; 64
    2024:	91 e0       	ldi	r25, 0x01	; 1
    2026:	0e 94 52 05 	call	0xaa4	; 0xaa4 <dequeue>
    202a:	ec 01       	movw	r28, r24
    202c:	f8 01       	movw	r30, r16
    202e:	93 83       	std	Z+3, r25	; 0x03
    2030:	82 83       	std	Z+2, r24	; 0x02
    2032:	78 94       	sei
    2034:	6c 85       	ldd	r22, Y+12	; 0x0c
    2036:	7d 85       	ldd	r23, Y+13	; 0x0d
    2038:	4e 85       	ldd	r20, Y+14	; 0x0e
    203a:	5f 85       	ldd	r21, Y+15	; 0x0f
    203c:	8a 85       	ldd	r24, Y+10	; 0x0a
    203e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2040:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <sync>
    2044:	8f b7       	in	r24, 0x3f	; 63
    2046:	f8 94       	cli
    2048:	66 e0       	ldi	r22, 0x06	; 6
    204a:	71 e0       	ldi	r23, 0x01	; 1
    204c:	ce 01       	movw	r24, r28
    204e:	0e 94 69 05 	call	0xad2	; 0xad2 <insert>
    2052:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    2056:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    205a:	01 90       	ld	r0, Z+
    205c:	f0 81       	ld	r31, Z
    205e:	e0 2d       	mov	r30, r0
    2060:	c2 81       	ldd	r28, Z+2	; 0x02
    2062:	d3 81       	ldd	r29, Z+3	; 0x03
    2064:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    2068:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    206c:	30 97       	sbiw	r30, 0x00	; 0
    206e:	a1 f0       	breq	.+40     	; 0x2098 <run+0x7e>
    2070:	20 97       	sbiw	r28, 0x00	; 0
    2072:	99 f2       	breq	.-90     	; 0x201a <run>
    2074:	86 81       	ldd	r24, Z+6	; 0x06
    2076:	97 81       	ldd	r25, Z+7	; 0x07
    2078:	a0 85       	ldd	r26, Z+8	; 0x08
    207a:	b1 85       	ldd	r27, Z+9	; 0x09
    207c:	4e 81       	ldd	r20, Y+6	; 0x06
    207e:	5f 81       	ldd	r21, Y+7	; 0x07
    2080:	68 85       	ldd	r22, Y+8	; 0x08
    2082:	79 85       	ldd	r23, Y+9	; 0x09
    2084:	84 1b       	sub	r24, r20
    2086:	95 0b       	sbc	r25, r21
    2088:	a6 0b       	sbc	r26, r22
    208a:	b7 0b       	sbc	r27, r23
    208c:	18 16       	cp	r1, r24
    208e:	19 06       	cpc	r1, r25
    2090:	1a 06       	cpc	r1, r26
    2092:	1b 06       	cpc	r1, r27
    2094:	0c f0       	brlt	.+2      	; 0x2098 <run+0x7e>
    2096:	c1 cf       	rjmp	.-126    	; 0x201a <run>
    2098:	82 e0       	ldi	r24, 0x02	; 2
    209a:	91 e0       	ldi	r25, 0x01	; 1
    209c:	0e 94 7d 05 	call	0xafa	; 0xafa <pop>
    20a0:	64 e0       	ldi	r22, 0x04	; 4
    20a2:	71 e0       	ldi	r23, 0x01	; 1
    20a4:	0e 94 73 05 	call	0xae6	; 0xae6 <push>
    20a8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    20ac:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    20b0:	02 c0       	rjmp	.+4      	; 0x20b6 <run+0x9c>
    20b2:	a0 81       	ld	r26, Z
    20b4:	b1 81       	ldd	r27, Z+1	; 0x01
    20b6:	14 96       	adiw	r26, 0x04	; 4
    20b8:	ed 91       	ld	r30, X+
    20ba:	fc 91       	ld	r31, X
    20bc:	15 97       	sbiw	r26, 0x05	; 5
    20be:	30 97       	sbiw	r30, 0x00	; 0
    20c0:	c1 f7       	brne	.-16     	; 0x20b2 <run+0x98>
    20c2:	cd 01       	movw	r24, r26
    20c4:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <dispatch>
    20c8:	a8 cf       	rjmp	.-176    	; 0x201a <run>

000020ca <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    20ca:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    20cc:	42 31       	cpi	r20, 0x12	; 18
    20ce:	b8 f4       	brcc	.+46     	; 0x20fe <install+0x34>
        char status;
        DISABLE(status);
    20d0:	9f b7       	in	r25, 0x3f	; 63
    20d2:	90 78       	andi	r25, 0x80	; 128
    20d4:	f8 94       	cli
        otable[i] = obj;
    20d6:	50 e0       	ldi	r21, 0x00	; 0
    20d8:	44 0f       	add	r20, r20
    20da:	55 1f       	adc	r21, r21
    20dc:	da 01       	movw	r26, r20
    20de:	ae 5b       	subi	r26, 0xBE	; 190
    20e0:	be 4f       	sbci	r27, 0xFE	; 254
    20e2:	ed 93       	st	X+, r30
    20e4:	fc 93       	st	X, r31
        mtable[i] = m;
    20e6:	da 01       	movw	r26, r20
    20e8:	a6 52       	subi	r26, 0x26	; 38
    20ea:	be 4f       	sbci	r27, 0xFE	; 254
    20ec:	6d 93       	st	X+, r22
    20ee:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20f0:	21 e0       	ldi	r18, 0x01	; 1
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	33 83       	std	Z+3, r19	; 0x03
    20f6:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    20f8:	99 23       	and	r25, r25
    20fa:	09 f0       	breq	.+2      	; 0x20fe <install+0x34>
    20fc:	78 94       	sei
    20fe:	08 95       	ret

00002100 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2100:	8c 01       	movw	r16, r24
    2102:	7b 01       	movw	r14, r22
    2104:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2106:	8f b7       	in	r24, 0x3f	; 63
    2108:	f8 94       	cli
    initialize();
    210a:	0e 94 31 04 	call	0x862	; 0x862 <initialize>
    ENABLE(1);
    210e:	78 94       	sei
    if (m != NULL)
    2110:	e1 14       	cp	r14, r1
    2112:	f1 04       	cpc	r15, r1
    2114:	41 f0       	breq	.+16     	; 0x2126 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	30 e0       	ldi	r19, 0x00	; 0
    211a:	a9 01       	movw	r20, r18
    211c:	60 e0       	ldi	r22, 0x00	; 0
    211e:	70 e0       	ldi	r23, 0x00	; 0
    2120:	cb 01       	movw	r24, r22
    2122:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <async>
    DISABLE(status);
    2126:	8f b7       	in	r24, 0x3f	; 63
    2128:	f8 94       	cli
    idle();
    212a:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <idle>

0000212e <__divmodhi4>:
    212e:	97 fb       	bst	r25, 7
    2130:	07 2e       	mov	r0, r23
    2132:	16 f4       	brtc	.+4      	; 0x2138 <__divmodhi4+0xa>
    2134:	00 94       	com	r0
    2136:	07 d0       	rcall	.+14     	; 0x2146 <__divmodhi4_neg1>
    2138:	77 fd       	sbrc	r23, 7
    213a:	09 d0       	rcall	.+18     	; 0x214e <__divmodhi4_neg2>
    213c:	0e 94 ab 10 	call	0x2156	; 0x2156 <__udivmodhi4>
    2140:	07 fc       	sbrc	r0, 7
    2142:	05 d0       	rcall	.+10     	; 0x214e <__divmodhi4_neg2>
    2144:	3e f4       	brtc	.+14     	; 0x2154 <__divmodhi4_exit>

00002146 <__divmodhi4_neg1>:
    2146:	90 95       	com	r25
    2148:	81 95       	neg	r24
    214a:	9f 4f       	sbci	r25, 0xFF	; 255
    214c:	08 95       	ret

0000214e <__divmodhi4_neg2>:
    214e:	70 95       	com	r23
    2150:	61 95       	neg	r22
    2152:	7f 4f       	sbci	r23, 0xFF	; 255

00002154 <__divmodhi4_exit>:
    2154:	08 95       	ret

00002156 <__udivmodhi4>:
    2156:	aa 1b       	sub	r26, r26
    2158:	bb 1b       	sub	r27, r27
    215a:	51 e1       	ldi	r21, 0x11	; 17
    215c:	07 c0       	rjmp	.+14     	; 0x216c <__udivmodhi4_ep>

0000215e <__udivmodhi4_loop>:
    215e:	aa 1f       	adc	r26, r26
    2160:	bb 1f       	adc	r27, r27
    2162:	a6 17       	cp	r26, r22
    2164:	b7 07       	cpc	r27, r23
    2166:	10 f0       	brcs	.+4      	; 0x216c <__udivmodhi4_ep>
    2168:	a6 1b       	sub	r26, r22
    216a:	b7 0b       	sbc	r27, r23

0000216c <__udivmodhi4_ep>:
    216c:	88 1f       	adc	r24, r24
    216e:	99 1f       	adc	r25, r25
    2170:	5a 95       	dec	r21
    2172:	a9 f7       	brne	.-22     	; 0x215e <__udivmodhi4_loop>
    2174:	80 95       	com	r24
    2176:	90 95       	com	r25
    2178:	bc 01       	movw	r22, r24
    217a:	cd 01       	movw	r24, r26
    217c:	08 95       	ret

0000217e <setjmp>:
    217e:	dc 01       	movw	r26, r24
    2180:	2d 92       	st	X+, r2
    2182:	3d 92       	st	X+, r3
    2184:	4d 92       	st	X+, r4
    2186:	5d 92       	st	X+, r5
    2188:	6d 92       	st	X+, r6
    218a:	7d 92       	st	X+, r7
    218c:	8d 92       	st	X+, r8
    218e:	9d 92       	st	X+, r9
    2190:	ad 92       	st	X+, r10
    2192:	bd 92       	st	X+, r11
    2194:	cd 92       	st	X+, r12
    2196:	dd 92       	st	X+, r13
    2198:	ed 92       	st	X+, r14
    219a:	fd 92       	st	X+, r15
    219c:	0d 93       	st	X+, r16
    219e:	1d 93       	st	X+, r17
    21a0:	cd 93       	st	X+, r28
    21a2:	dd 93       	st	X+, r29
    21a4:	ff 91       	pop	r31
    21a6:	ef 91       	pop	r30
    21a8:	8d b7       	in	r24, 0x3d	; 61
    21aa:	8d 93       	st	X+, r24
    21ac:	8e b7       	in	r24, 0x3e	; 62
    21ae:	8d 93       	st	X+, r24
    21b0:	8f b7       	in	r24, 0x3f	; 63
    21b2:	8d 93       	st	X+, r24
    21b4:	ed 93       	st	X+, r30
    21b6:	fd 93       	st	X+, r31
    21b8:	88 27       	eor	r24, r24
    21ba:	99 27       	eor	r25, r25
    21bc:	09 94       	ijmp

000021be <longjmp>:
    21be:	dc 01       	movw	r26, r24
    21c0:	cb 01       	movw	r24, r22
    21c2:	81 30       	cpi	r24, 0x01	; 1
    21c4:	91 05       	cpc	r25, r1
    21c6:	81 1d       	adc	r24, r1
    21c8:	2d 90       	ld	r2, X+
    21ca:	3d 90       	ld	r3, X+
    21cc:	4d 90       	ld	r4, X+
    21ce:	5d 90       	ld	r5, X+
    21d0:	6d 90       	ld	r6, X+
    21d2:	7d 90       	ld	r7, X+
    21d4:	8d 90       	ld	r8, X+
    21d6:	9d 90       	ld	r9, X+
    21d8:	ad 90       	ld	r10, X+
    21da:	bd 90       	ld	r11, X+
    21dc:	cd 90       	ld	r12, X+
    21de:	dd 90       	ld	r13, X+
    21e0:	ed 90       	ld	r14, X+
    21e2:	fd 90       	ld	r15, X+
    21e4:	0d 91       	ld	r16, X+
    21e6:	1d 91       	ld	r17, X+
    21e8:	cd 91       	ld	r28, X+
    21ea:	dd 91       	ld	r29, X+
    21ec:	ed 91       	ld	r30, X+
    21ee:	fd 91       	ld	r31, X+
    21f0:	0d 90       	ld	r0, X+
    21f2:	f8 94       	cli
    21f4:	fe bf       	out	0x3e, r31	; 62
    21f6:	0f be       	out	0x3f, r0	; 63
    21f8:	ed bf       	out	0x3d, r30	; 61
    21fa:	ed 91       	ld	r30, X+
    21fc:	fd 91       	ld	r31, X+
    21fe:	09 94       	ijmp

00002200 <_exit>:
    2200:	f8 94       	cli

00002202 <__stop_program>:
    2202:	ff cf       	rjmp	.-2      	; 0x2202 <__stop_program>
