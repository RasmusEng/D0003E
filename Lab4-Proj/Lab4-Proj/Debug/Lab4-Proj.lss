
Lab4-Proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000021d8  0000226c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800138  00800138  000022a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00002314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002efe  00000000  00000000  000025b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000116c  00000000  00000000  000054b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001721  00000000  00000000  0000661e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d58  00000000  00000000  00007d40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a10  00000000  00000000  00008a98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002a56  00000000  00000000  000094a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000befe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <__vector_1>
       8:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__vector_2>
       c:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_3>
      10:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__vector_4>
      14:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 b6 0d 	jmp	0x1b6c	; 0x1b6c <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 64 0d 	jmp	0x1ac8	; 0x1ac8 <__vector_9>
      28:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__vector_10>
      2c:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__vector_11>
      30:	0c 94 98 08 	jmp	0x1130	; 0x1130 <__vector_12>
      34:	0c 94 07 09 	jmp	0x120e	; 0x120e <__vector_13>
      38:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__vector_14>
      3c:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__vector_15>
      40:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__vector_16>
      44:	0c 94 c3 0a 	jmp	0x1586	; 0x1586 <__vector_17>
      48:	0c 94 32 0b 	jmp	0x1664	; 0x1664 <__vector_18>
      4c:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__vector_19>
      50:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__vector_20>
      54:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__vector_21>
      58:	0c 94 ee 0c 	jmp	0x19dc	; 0x19dc <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e8 ed       	ldi	r30, 0xD8	; 216
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 33       	cpi	r26, 0x38	; 56
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e3       	ldi	r26, 0x38	; 56
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 77 02 	call	0x4ee	; 0x4ee <main>
      92:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <freqUp>:
	if (!(PINB & (1 << PB6))) { // UP
		ASYNC(self, freqUp, 0); // Ändrat från SYNC till ASYNC
		AFTER(MSEC(2000), self, holdJoyStick, 0);
	}
	return 0;
}
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	fc 01       	movw	r30, r24
      a8:	24 81       	ldd	r18, Z+4	; 0x04
      aa:	22 23       	and	r18, r18
      ac:	99 f0       	breq	.+38     	; 0xd4 <freqUp+0x3a>
      ae:	05 81       	ldd	r16, Z+5	; 0x05
      b0:	16 81       	ldd	r17, Z+6	; 0x06
      b2:	c1 2c       	mov	r12, r1
      b4:	d1 2c       	mov	r13, r1
      b6:	0f 2e       	mov	r0, r31
      b8:	fe e2       	ldi	r31, 0x2E	; 46
      ba:	ef 2e       	mov	r14, r31
      bc:	f3 e0       	ldi	r31, 0x03	; 3
      be:	ff 2e       	mov	r15, r31
      c0:	f0 2d       	mov	r31, r0
      c2:	20 e0       	ldi	r18, 0x00	; 0
      c4:	30 e0       	ldi	r19, 0x00	; 0
      c6:	a9 01       	movw	r20, r18
      c8:	60 e0       	ldi	r22, 0x00	; 0
      ca:	70 e0       	ldi	r23, 0x00	; 0
      cc:	cb 01       	movw	r24, r22
      ce:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
      d2:	13 c0       	rjmp	.+38     	; 0xfa <freqUp+0x60>
      d4:	fc 01       	movw	r30, r24
      d6:	07 81       	ldd	r16, Z+7	; 0x07
      d8:	10 85       	ldd	r17, Z+8	; 0x08
      da:	c1 2c       	mov	r12, r1
      dc:	d1 2c       	mov	r13, r1
      de:	0f 2e       	mov	r0, r31
      e0:	fe e2       	ldi	r31, 0x2E	; 46
      e2:	ef 2e       	mov	r14, r31
      e4:	f3 e0       	ldi	r31, 0x03	; 3
      e6:	ff 2e       	mov	r15, r31
      e8:	f0 2d       	mov	r31, r0
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	a9 01       	movw	r20, r18
      f0:	60 e0       	ldi	r22, 0x00	; 0
      f2:	70 e0       	ldi	r23, 0x00	; 0
      f4:	cb 01       	movw	r24, r22
      f6:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
      fa:	80 e0       	ldi	r24, 0x00	; 0
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	1f 91       	pop	r17
     100:	0f 91       	pop	r16
     102:	ff 90       	pop	r15
     104:	ef 90       	pop	r14
     106:	df 90       	pop	r13
     108:	cf 90       	pop	r12
     10a:	08 95       	ret

0000010c <freqDown>:
     10c:	cf 92       	push	r12
     10e:	df 92       	push	r13
     110:	ef 92       	push	r14
     112:	ff 92       	push	r15
     114:	0f 93       	push	r16
     116:	1f 93       	push	r17
     118:	fc 01       	movw	r30, r24
     11a:	24 81       	ldd	r18, Z+4	; 0x04
     11c:	22 23       	and	r18, r18
     11e:	99 f0       	breq	.+38     	; 0x146 <freqDown+0x3a>
     120:	05 81       	ldd	r16, Z+5	; 0x05
     122:	16 81       	ldd	r17, Z+6	; 0x06
     124:	c1 2c       	mov	r12, r1
     126:	d1 2c       	mov	r13, r1
     128:	0f 2e       	mov	r0, r31
     12a:	ff e6       	ldi	r31, 0x6F	; 111
     12c:	ef 2e       	mov	r14, r31
     12e:	f3 e0       	ldi	r31, 0x03	; 3
     130:	ff 2e       	mov	r15, r31
     132:	f0 2d       	mov	r31, r0
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	a9 01       	movw	r20, r18
     13a:	60 e0       	ldi	r22, 0x00	; 0
     13c:	70 e0       	ldi	r23, 0x00	; 0
     13e:	cb 01       	movw	r24, r22
     140:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     144:	13 c0       	rjmp	.+38     	; 0x16c <freqDown+0x60>
     146:	fc 01       	movw	r30, r24
     148:	07 81       	ldd	r16, Z+7	; 0x07
     14a:	10 85       	ldd	r17, Z+8	; 0x08
     14c:	c1 2c       	mov	r12, r1
     14e:	d1 2c       	mov	r13, r1
     150:	0f 2e       	mov	r0, r31
     152:	ff e6       	ldi	r31, 0x6F	; 111
     154:	ef 2e       	mov	r14, r31
     156:	f3 e0       	ldi	r31, 0x03	; 3
     158:	ff 2e       	mov	r15, r31
     15a:	f0 2d       	mov	r31, r0
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	a9 01       	movw	r20, r18
     162:	60 e0       	ldi	r22, 0x00	; 0
     164:	70 e0       	ldi	r23, 0x00	; 0
     166:	cb 01       	movw	r24, r22
     168:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     16c:	80 e0       	ldi	r24, 0x00	; 0
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	1f 91       	pop	r17
     172:	0f 91       	pop	r16
     174:	ff 90       	pop	r15
     176:	ef 90       	pop	r14
     178:	df 90       	pop	r13
     17a:	cf 90       	pop	r12
     17c:	08 95       	ret

0000017e <switchState>:
     17e:	cf 92       	push	r12
     180:	df 92       	push	r13
     182:	ef 92       	push	r14
     184:	ff 92       	push	r15
     186:	0f 93       	push	r16
     188:	1f 93       	push	r17
     18a:	fc 01       	movw	r30, r24
     18c:	34 81       	ldd	r19, Z+4	; 0x04
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	23 27       	eor	r18, r19
     192:	24 83       	std	Z+4, r18	; 0x04
     194:	c1 2c       	mov	r12, r1
     196:	d1 2c       	mov	r13, r1
     198:	0f 2e       	mov	r0, r31
     19a:	fe e6       	ldi	r31, 0x6E	; 110
     19c:	ef 2e       	mov	r14, r31
     19e:	f2 e0       	ldi	r31, 0x02	; 2
     1a0:	ff 2e       	mov	r15, r31
     1a2:	f0 2d       	mov	r31, r0
     1a4:	8c 01       	movw	r16, r24
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	a9 01       	movw	r20, r18
     1ac:	60 e0       	ldi	r22, 0x00	; 0
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	cb 01       	movw	r24, r22
     1b2:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	1f 91       	pop	r17
     1bc:	0f 91       	pop	r16
     1be:	ff 90       	pop	r15
     1c0:	ef 90       	pop	r14
     1c2:	df 90       	pop	r13
     1c4:	cf 90       	pop	r12
     1c6:	08 95       	ret

000001c8 <press>:
     1c8:	cf 92       	push	r12
     1ca:	df 92       	push	r13
     1cc:	ef 92       	push	r14
     1ce:	ff 92       	push	r15
     1d0:	0f 93       	push	r16
     1d2:	1f 93       	push	r17
     1d4:	cf 93       	push	r28
     1d6:	df 93       	push	r29
     1d8:	ec 01       	movw	r28, r24
     1da:	8c 81       	ldd	r24, Y+4	; 0x04
     1dc:	88 23       	and	r24, r24
     1de:	99 f0       	breq	.+38     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
     1e0:	0d 81       	ldd	r16, Y+5	; 0x05
     1e2:	1e 81       	ldd	r17, Y+6	; 0x06
     1e4:	c1 2c       	mov	r12, r1
     1e6:	d1 2c       	mov	r13, r1
     1e8:	0f 2e       	mov	r0, r31
     1ea:	f0 eb       	ldi	r31, 0xB0	; 176
     1ec:	ef 2e       	mov	r14, r31
     1ee:	f3 e0       	ldi	r31, 0x03	; 3
     1f0:	ff 2e       	mov	r15, r31
     1f2:	f0 2d       	mov	r31, r0
     1f4:	20 e0       	ldi	r18, 0x00	; 0
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	a9 01       	movw	r20, r18
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	cb 01       	movw	r24, r22
     200:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     204:	12 c0       	rjmp	.+36     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
     206:	0f 81       	ldd	r16, Y+7	; 0x07
     208:	18 85       	ldd	r17, Y+8	; 0x08
     20a:	c1 2c       	mov	r12, r1
     20c:	d1 2c       	mov	r13, r1
     20e:	0f 2e       	mov	r0, r31
     210:	f0 eb       	ldi	r31, 0xB0	; 176
     212:	ef 2e       	mov	r14, r31
     214:	f3 e0       	ldi	r31, 0x03	; 3
     216:	ff 2e       	mov	r15, r31
     218:	f0 2d       	mov	r31, r0
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	a9 01       	movw	r20, r18
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	cb 01       	movw	r24, r22
     226:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     22a:	c1 2c       	mov	r12, r1
     22c:	d1 2c       	mov	r13, r1
     22e:	0f 2e       	mov	r0, r31
     230:	f4 ee       	ldi	r31, 0xE4	; 228
     232:	ef 2e       	mov	r14, r31
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	ff 2e       	mov	r15, r31
     238:	f0 2d       	mov	r31, r0
     23a:	8e 01       	movw	r16, r28
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	a9 01       	movw	r20, r18
     242:	6a e6       	ldi	r22, 0x6A	; 106
     244:	78 e1       	ldi	r23, 0x18	; 24
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	1f 91       	pop	r17
     258:	0f 91       	pop	r16
     25a:	ff 90       	pop	r15
     25c:	ef 90       	pop	r14
     25e:	df 90       	pop	r13
     260:	cf 90       	pop	r12
     262:	08 95       	ret

00000264 <joyStickHorizontalControll>:

int joyStickHorizontalControll(GUI *self, int unUsed){
	if((!(PINE & (1 << PE1)) || !(PINE & (1 << PE6)))){
     264:	61 9b       	sbis	0x0c, 1	; 12
     266:	02 c0       	rjmp	.+4      	; 0x26c <joyStickHorizontalControll+0x8>
     268:	66 99       	sbic	0x0c, 6	; 12
     26a:	06 c0       	rjmp	.+12     	; 0x278 <joyStickHorizontalControll+0x14>
		//AFTER(MSEC(200), self, switchState, 0);
		SYNC(self,switchState, 0);
     26c:	40 e0       	ldi	r20, 0x00	; 0
     26e:	50 e0       	ldi	r21, 0x00	; 0
     270:	6f eb       	ldi	r22, 0xBF	; 191
     272:	70 e0       	ldi	r23, 0x00	; 0
     274:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <sync>
	}
	return 0;
}
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	08 95       	ret

0000027e <joyStickVerticalControll>:

int joyStickVerticalControll(GUI *self, int unUsed){
     27e:	cf 92       	push	r12
     280:	df 92       	push	r13
     282:	ef 92       	push	r14
     284:	ff 92       	push	r15
     286:	0f 93       	push	r16
     288:	1f 93       	push	r17
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	ec 01       	movw	r28, r24
    if (!(PINB & (1 << PB7))) { //DOWN
     290:	1f 99       	sbic	0x03, 7	; 3
     292:	11 c0       	rjmp	.+34     	; 0x2b6 <joyStickVerticalControll+0x38>
		ASYNC(self, freqDown, 0);
     294:	c1 2c       	mov	r12, r1
     296:	d1 2c       	mov	r13, r1
     298:	0f 2e       	mov	r0, r31
     29a:	f6 e8       	ldi	r31, 0x86	; 134
     29c:	ef 2e       	mov	r14, r31
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	ff 2e       	mov	r15, r31
     2a2:	f0 2d       	mov	r31, r0
     2a4:	8c 01       	movw	r16, r24
     2a6:	20 e0       	ldi	r18, 0x00	; 0
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	a9 01       	movw	r20, r18
     2ac:	60 e0       	ldi	r22, 0x00	; 0
     2ae:	70 e0       	ldi	r23, 0x00	; 0
     2b0:	cb 01       	movw	r24, r22
     2b2:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
		//AFTER(MSEC(200), self, holdJoyStick, 0);
    }
    if (!(PINB & (1 << PB6))) { //UP
     2b6:	1e 99       	sbic	0x03, 6	; 3
     2b8:	11 c0       	rjmp	.+34     	; 0x2dc <joyStickVerticalControll+0x5e>
		ASYNC(self, freqUp, 0);
     2ba:	c1 2c       	mov	r12, r1
     2bc:	d1 2c       	mov	r13, r1
     2be:	0f 2e       	mov	r0, r31
     2c0:	fd e4       	ldi	r31, 0x4D	; 77
     2c2:	ef 2e       	mov	r14, r31
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	ff 2e       	mov	r15, r31
     2c8:	f0 2d       	mov	r31, r0
     2ca:	8e 01       	movw	r16, r28
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	a9 01       	movw	r20, r18
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	70 e0       	ldi	r23, 0x00	; 0
     2d6:	cb 01       	movw	r24, r22
     2d8:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
		//AFTER(MSEC(200), self, holdJoyStick, 0);
		
    }
    if (!(PINB & (1 << PB4))) { //PRESS
     2dc:	1c 99       	sbic	0x03, 4	; 3
     2de:	11 c0       	rjmp	.+34     	; 0x302 <joyStickVerticalControll+0x84>
        ASYNC(self, press, 0);
     2e0:	c1 2c       	mov	r12, r1
     2e2:	d1 2c       	mov	r13, r1
     2e4:	0f 2e       	mov	r0, r31
     2e6:	f4 ee       	ldi	r31, 0xE4	; 228
     2e8:	ef 2e       	mov	r14, r31
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	ff 2e       	mov	r15, r31
     2ee:	f0 2d       	mov	r31, r0
     2f0:	8e 01       	movw	r16, r28
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	a9 01       	movw	r20, r18
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	cb 01       	movw	r24, r22
     2fe:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
		//AFTER(MSEC(200), self, press, 0);
    }
	// Todo fixa rätt return
	return 0;
}
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	df 91       	pop	r29
     308:	cf 91       	pop	r28
     30a:	1f 91       	pop	r17
     30c:	0f 91       	pop	r16
     30e:	ff 90       	pop	r15
     310:	ef 90       	pop	r14
     312:	df 90       	pop	r13
     314:	cf 90       	pop	r12
     316:	08 95       	ret

00000318 <CPUCLK_Init>:
#include "LCD_Driver.h"
#include <avr/io.h>
#include <stdbool.h>

void CPUCLK_Init(void){
	CLKPR = 0x80;
     318:	e1 e6       	ldi	r30, 0x61	; 97
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	80 e8       	ldi	r24, 0x80	; 128
     31e:	80 83       	st	Z, r24
	CLKPR = 0x00;
     320:	10 82       	st	Z, r1
     322:	08 95       	ret

00000324 <LCD_Init>:
}

void LCD_Init(void){
	//Use 32 kHz crystal oscillator
	//1/3 Bias and 1/4 duty, SEG0:SEG24 is used as port pins
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX0)| (1<<LCDMUX1)|(1<<LCDPM0) |(1<<LCDPM1) |(1<<LCDPM2);
     324:	87 eb       	ldi	r24, 0xB7	; 183
     326:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/* Using 16 as prescaler selection and 8 as LCD Clock Divide */
	/* gives a frame rate of 32 Hz */
	LCDFRR = (1<<LCDCD0) | (1<<LCDCD1) | (1<<LCDCD2);
     32a:	87 e0       	ldi	r24, 0x07	; 7
     32c:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	/* Set segment drive time to 300 Î¼s and output voltage to 3.35 V*/
	LCDCCR = (1<<LCDDC0) | (1<<LCDCC1) | (1<<LCDCC2) | (1<<LCDCC3);
     330:	8e e2       	ldi	r24, 0x2E	; 46
     332:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	/* Enable LCD, low power waveform and no interrupt enabled */
	LCDCRA = (1<<LCDEN);
     336:	80 e8       	ldi	r24, 0x80	; 128
     338:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

	//Indicator bits 
	LCDDR13 ^= 1;
     33c:	e9 ef       	ldi	r30, 0xF9	; 249
     33e:	f0 e0       	ldi	r31, 0x00	; 0
     340:	90 81       	ld	r25, Z
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	89 27       	eor	r24, r25
     346:	80 83       	st	Z, r24
     348:	08 95       	ret

0000034a <CLK_Init>:
}

void CLK_Init(){
	// Timer
	DDRB = (1<<DDB7);
     34a:	80 e8       	ldi	r24, 0x80	; 128
     34c:	84 b9       	out	0x04, r24	; 4
     34e:	08 95       	ret

00000350 <BUTTON_Init>:
}

void BUTTON_Init(){
	PORTB |= (1 << 7) | (1 << 6) | (1 << 4);
     350:	85 b1       	in	r24, 0x05	; 5
     352:	80 6d       	ori	r24, 0xD0	; 208
     354:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1 << 3) | (1 << 2);
     356:	8e b1       	in	r24, 0x0e	; 14
     358:	8c 60       	ori	r24, 0x0C	; 12
     35a:	8e b9       	out	0x0e, r24	; 14

    //Interrupt enables
	EIMSK  |= (1 << PCIE1) | (1 << PCIE0);
     35c:	8d b3       	in	r24, 0x1d	; 29
     35e:	80 6c       	ori	r24, 0xC0	; 192
     360:	8d bb       	out	0x1d, r24	; 29
	PCMSK1 |= (1 << PCINT11) | (1 << PCINT12) | (1 << PCINT13) | (1 << PCINT14) | (1 << PCINT15);
     362:	ec e6       	ldi	r30, 0x6C	; 108
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	88 6f       	ori	r24, 0xF8	; 248
     36a:	80 83       	st	Z, r24
	
	PCMSK0 |= (1 << PCINT2) | (1 << PCINT3);
     36c:	eb e6       	ldi	r30, 0x6B	; 107
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	80 81       	ld	r24, Z
     372:	8c 60       	ori	r24, 0x0C	; 12
     374:	80 83       	st	Z, r24
     376:	08 95       	ret

00000378 <INIT>:
}

void INIT(){
	CPUCLK_Init();
     378:	0e 94 8c 01 	call	0x318	; 0x318 <CPUCLK_Init>
	LCD_Init();
     37c:	0e 94 92 01 	call	0x324	; 0x324 <LCD_Init>
	CLK_Init();
     380:	0e 94 a5 01 	call	0x34a	; 0x34a <CLK_Init>
	BUTTON_Init();
     384:	0e 94 a8 01 	call	0x350	; 0x350 <BUTTON_Init>
     388:	08 95       	ret

0000038a <writeChar>:
	LCDDR6 = data2;
}

void writeChar(char ch, int pos){
	/* Returns if given input is not possible to print */
	if(pos < 0 || pos > 5 || ch < 48 || ch > 57){
     38a:	66 30       	cpi	r22, 0x06	; 6
     38c:	71 05       	cpc	r23, r1
     38e:	08 f0       	brcs	.+2      	; 0x392 <writeChar+0x8>
     390:	6e c0       	rjmp	.+220    	; 0x46e <__DATA_REGION_LENGTH__+0x6e>
     392:	80 33       	cpi	r24, 0x30	; 48
     394:	08 f4       	brcc	.+2      	; 0x398 <writeChar+0xe>
     396:	6b c0       	rjmp	.+214    	; 0x46e <__DATA_REGION_LENGTH__+0x6e>
     398:	8a 33       	cpi	r24, 0x3A	; 58
     39a:	08 f0       	brcs	.+2      	; 0x39e <writeChar+0x14>
     39c:	68 c0       	rjmp	.+208    	; 0x46e <__DATA_REGION_LENGTH__+0x6e>
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
     39e:	fb 01       	movw	r30, r22
     3a0:	e8 5f       	subi	r30, 0xF8	; 248
     3a2:	fe 4f       	sbci	r31, 0xFE	; 254
     3a4:	e0 81       	ld	r30, Z
     3a6:	f0 e0       	ldi	r31, 0x00	; 0
     3a8:	e4 51       	subi	r30, 0x14	; 20
     3aa:	ff 4f       	sbci	r31, 0xFF	; 255
	
	int number = (int)ch - 48;
     3ac:	a8 2f       	mov	r26, r24
     3ae:	b0 e0       	ldi	r27, 0x00	; 0
     3b0:	d0 97       	sbiw	r26, 0x30	; 48
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
     3b2:	61 70       	andi	r22, 0x01	; 1
     3b4:	70 78       	andi	r23, 0x80	; 128
     3b6:	77 23       	and	r23, r23
     3b8:	34 f4       	brge	.+12     	; 0x3c6 <writeChar+0x3c>
     3ba:	61 50       	subi	r22, 0x01	; 1
     3bc:	71 09       	sbc	r23, r1
     3be:	6e 6f       	ori	r22, 0xFE	; 254
     3c0:	7f 6f       	ori	r23, 0xFF	; 255
     3c2:	6f 5f       	subi	r22, 0xFF	; 255
     3c4:	7f 4f       	sbci	r23, 0xFF	; 255
     3c6:	61 30       	cpi	r22, 0x01	; 1
     3c8:	71 05       	cpc	r23, r1
     3ca:	71 f4       	brne	.+28     	; 0x3e8 <writeChar+0x5e>
		shift = 4;
		lcd_base[0]  = lcd_base[0]  & 0x0F;
     3cc:	80 81       	ld	r24, Z
     3ce:	8f 70       	andi	r24, 0x0F	; 15
     3d0:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0x0F;
     3d2:	85 81       	ldd	r24, Z+5	; 0x05
     3d4:	8f 70       	andi	r24, 0x0F	; 15
     3d6:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0x0F;
     3d8:	82 85       	ldd	r24, Z+10	; 0x0a
     3da:	8f 70       	andi	r24, 0x0F	; 15
     3dc:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0x0F;
     3de:	87 85       	ldd	r24, Z+15	; 0x0f
     3e0:	8f 70       	andi	r24, 0x0F	; 15
     3e2:	87 87       	std	Z+15, r24	; 0x0f
	
	int number = (int)ch - 48;
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
		shift = 4;
     3e4:	24 e0       	ldi	r18, 0x04	; 4
     3e6:	0d c0       	rjmp	.+26     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
		lcd_base[0]  = lcd_base[0]  & 0x0F;
		lcd_base[5]  = lcd_base[5]  & 0x0F;
		lcd_base[10] = lcd_base[10] & 0x0F;
		lcd_base[15] = lcd_base[15] & 0x0F;
		}else{
		lcd_base[0]  = lcd_base[0]  & 0xF0;
     3e8:	80 81       	ld	r24, Z
     3ea:	80 7f       	andi	r24, 0xF0	; 240
     3ec:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0xF0;
     3ee:	85 81       	ldd	r24, Z+5	; 0x05
     3f0:	80 7f       	andi	r24, 0xF0	; 240
     3f2:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0xF0;
     3f4:	82 85       	ldd	r24, Z+10	; 0x0a
     3f6:	80 7f       	andi	r24, 0xF0	; 240
     3f8:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0xF0;
     3fa:	87 85       	ldd	r24, Z+15	; 0x0f
     3fc:	80 7f       	andi	r24, 0xF0	; 240
     3fe:	87 87       	std	Z+15, r24	; 0x0f
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
	
	int number = (int)ch - 48;
	int shift = 0;
     400:	20 e0       	ldi	r18, 0x00	; 0
		lcd_base[5]  = lcd_base[5]  & 0xF0;
		lcd_base[10] = lcd_base[10] & 0xF0;
		lcd_base[15] = lcd_base[15] & 0xF0;
	}
	/*Writes to the display*/
	lcd_base[0]  = charCodes[number][0]<<shift | lcd_base[0] ;
     402:	aa 0f       	add	r26, r26
     404:	bb 1f       	adc	r27, r27
     406:	aa 0f       	add	r26, r26
     408:	bb 1f       	adc	r27, r27
     40a:	a0 5f       	subi	r26, 0xF0	; 240
     40c:	be 4f       	sbci	r27, 0xFE	; 254
     40e:	8c 91       	ld	r24, X
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	02 2e       	mov	r0, r18
     414:	02 c0       	rjmp	.+4      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
     416:	88 0f       	add	r24, r24
     418:	99 1f       	adc	r25, r25
     41a:	0a 94       	dec	r0
     41c:	e2 f7       	brpl	.-8      	; 0x416 <__DATA_REGION_LENGTH__+0x16>
     41e:	90 81       	ld	r25, Z
     420:	89 2b       	or	r24, r25
     422:	80 83       	st	Z, r24
	lcd_base[5]  = charCodes[number][1]<<shift | lcd_base[5] ;
     424:	11 96       	adiw	r26, 0x01	; 1
     426:	8c 91       	ld	r24, X
     428:	11 97       	sbiw	r26, 0x01	; 1
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	02 2e       	mov	r0, r18
     42e:	02 c0       	rjmp	.+4      	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     430:	88 0f       	add	r24, r24
     432:	99 1f       	adc	r25, r25
     434:	0a 94       	dec	r0
     436:	e2 f7       	brpl	.-8      	; 0x430 <__DATA_REGION_LENGTH__+0x30>
     438:	95 81       	ldd	r25, Z+5	; 0x05
     43a:	89 2b       	or	r24, r25
     43c:	85 83       	std	Z+5, r24	; 0x05
	lcd_base[10] = charCodes[number][2]<<shift | lcd_base[10];
     43e:	12 96       	adiw	r26, 0x02	; 2
     440:	8c 91       	ld	r24, X
     442:	12 97       	sbiw	r26, 0x02	; 2
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	02 2e       	mov	r0, r18
     448:	02 c0       	rjmp	.+4      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	0a 94       	dec	r0
     450:	e2 f7       	brpl	.-8      	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
     452:	92 85       	ldd	r25, Z+10	; 0x0a
     454:	89 2b       	or	r24, r25
     456:	82 87       	std	Z+10, r24	; 0x0a
	lcd_base[15] = charCodes[number][3]<<shift | lcd_base[15];
     458:	13 96       	adiw	r26, 0x03	; 3
     45a:	8c 91       	ld	r24, X
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	02 c0       	rjmp	.+4      	; 0x464 <__DATA_REGION_LENGTH__+0x64>
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	2a 95       	dec	r18
     466:	e2 f7       	brpl	.-8      	; 0x460 <__DATA_REGION_LENGTH__+0x60>
     468:	97 85       	ldd	r25, Z+15	; 0x0f
     46a:	89 2b       	or	r24, r25
     46c:	87 87       	std	Z+15, r24	; 0x0f
     46e:	08 95       	ret

00000470 <printAt>:
}
	
int printAt(LCD_Driver *self, const int map) {
     470:	ef 92       	push	r14
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
	union PrintPun p = {.map = map};
	int pp;
	pp = p.args.pos;
     47c:	c6 2f       	mov	r28, r22
     47e:	cc 1f       	adc	r28, r28
     480:	cc 27       	eor	r28, r28
     482:	cc 1f       	adc	r28, r28
     484:	73 70       	andi	r23, 0x03	; 3
     486:	77 0f       	add	r23, r23
     488:	7c 2b       	or	r23, r28
     48a:	c7 2f       	mov	r28, r23
     48c:	d0 e0       	ldi	r29, 0x00	; 0
	int num = p.args.num;
     48e:	6f 77       	andi	r22, 0x7F	; 127
     490:	06 2f       	mov	r16, r22
     492:	10 e0       	ldi	r17, 0x00	; 0
	writeChar( (num % 100) / 10 + '0', pp);
     494:	c8 01       	movw	r24, r16
     496:	64 e6       	ldi	r22, 0x64	; 100
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__divmodhi4>
     49e:	0f 2e       	mov	r0, r31
     4a0:	fa e0       	ldi	r31, 0x0A	; 10
     4a2:	ef 2e       	mov	r14, r31
     4a4:	f1 2c       	mov	r15, r1
     4a6:	f0 2d       	mov	r31, r0
     4a8:	b7 01       	movw	r22, r14
     4aa:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__divmodhi4>
     4ae:	86 2f       	mov	r24, r22
     4b0:	be 01       	movw	r22, r28
     4b2:	80 5d       	subi	r24, 0xD0	; 208
     4b4:	0e 94 c5 01 	call	0x38a	; 0x38a <writeChar>
	pp++;
     4b8:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     4ba:	c8 01       	movw	r24, r16
     4bc:	b7 01       	movw	r22, r14
     4be:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__divmodhi4>
     4c2:	be 01       	movw	r22, r28
     4c4:	80 5d       	subi	r24, 0xD0	; 208
     4c6:	0e 94 c5 01 	call	0x38a	; 0x38a <writeChar>
	
	return 0;
}
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	1f 91       	pop	r17
     4d4:	0f 91       	pop	r16
     4d6:	ff 90       	pop	r15
     4d8:	ef 90       	pop	r14
     4da:	08 95       	ret

000004dc <switchIndicator>:

int switchIndicator(LCD_Driver *self, int unused){
	LCDDR13 ^= 1;
     4dc:	e9 ef       	ldi	r30, 0xF9	; 249
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	90 81       	ld	r25, Z
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	89 27       	eor	r24, r25
     4e6:	80 83       	st	Z, r24
	
	return 0;
}
     4e8:	80 e0       	ldi	r24, 0x00	; 0
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	08 95       	ret

000004ee <main>:
#include "GUI.h"
#include "LCD_Driver.h"


int main(void)
{    
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62
     4f6:	e1 97       	sbiw	r28, 0x31	; 49
     4f8:	0f b6       	in	r0, 0x3f	; 63
     4fa:	f8 94       	cli
     4fc:	de bf       	out	0x3e, r29	; 62
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	cd bf       	out	0x3d, r28	; 61
	INIT();
     502:	0e 94 bc 01 	call	0x378	; 0x378 <INIT>
	PulseController pulseController = initPulseController();
     506:	1a 82       	std	Y+2, r1	; 0x02
     508:	19 82       	std	Y+1, r1	; 0x01
     50a:	1c 82       	std	Y+4, r1	; 0x04
     50c:	1b 82       	std	Y+3, r1	; 0x03
	LCD_Driver display = initLCD_Driver();
     50e:	1e 82       	std	Y+6, r1	; 0x06
     510:	1d 82       	std	Y+5, r1	; 0x05
     512:	18 86       	std	Y+8, r1	; 0x08
     514:	1f 82       	std	Y+7, r1	; 0x07
	PulseGenerator pulseLeft = initPulseGenerator(0, 1, 1, &pulseController, &display);
     516:	1a 86       	std	Y+10, r1	; 0x0a
     518:	19 86       	std	Y+9, r1	; 0x09
     51a:	1c 86       	std	Y+12, r1	; 0x0c
     51c:	1b 86       	std	Y+11, r1	; 0x0b
     51e:	1e 86       	std	Y+14, r1	; 0x0e
     520:	1d 86       	std	Y+13, r1	; 0x0d
     522:	18 8a       	std	Y+16, r1	; 0x10
     524:	1f 86       	std	Y+15, r1	; 0x0f
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	9a 8b       	std	Y+18, r25	; 0x12
     52c:	89 8b       	std	Y+17, r24	; 0x11
     52e:	9c 8b       	std	Y+20, r25	; 0x14
     530:	8b 8b       	std	Y+19, r24	; 0x13
     532:	9e 01       	movw	r18, r28
     534:	2f 5f       	subi	r18, 0xFF	; 255
     536:	3f 4f       	sbci	r19, 0xFF	; 255
     538:	3e 8b       	std	Y+22, r19	; 0x16
     53a:	2d 8b       	std	Y+21, r18	; 0x15
     53c:	ce 01       	movw	r24, r28
     53e:	05 96       	adiw	r24, 0x05	; 5
     540:	98 8f       	std	Y+24, r25	; 0x18
     542:	8f 8b       	std	Y+23, r24	; 0x17
	PulseGenerator pulseRight = initPulseGenerator(0, 4, 3, &pulseController, &display);
     544:	1a 8e       	std	Y+26, r1	; 0x1a
     546:	19 8e       	std	Y+25, r1	; 0x19
     548:	1c 8e       	std	Y+28, r1	; 0x1c
     54a:	1b 8e       	std	Y+27, r1	; 0x1b
     54c:	1e 8e       	std	Y+30, r1	; 0x1e
     54e:	1d 8e       	std	Y+29, r1	; 0x1d
     550:	18 a2       	std	Y+32, r1	; 0x20
     552:	1f 8e       	std	Y+31, r1	; 0x1f
     554:	44 e0       	ldi	r20, 0x04	; 4
     556:	50 e0       	ldi	r21, 0x00	; 0
     558:	5a a3       	std	Y+34, r21	; 0x22
     55a:	49 a3       	std	Y+33, r20	; 0x21
     55c:	43 e0       	ldi	r20, 0x03	; 3
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	5c a3       	std	Y+36, r21	; 0x24
     562:	4b a3       	std	Y+35, r20	; 0x23
     564:	3e a3       	std	Y+38, r19	; 0x26
     566:	2d a3       	std	Y+37, r18	; 0x25
     568:	98 a7       	std	Y+40, r25	; 0x28
     56a:	8f a3       	std	Y+39, r24	; 0x27
	GUI gui = initGUI(&pulseLeft, &pulseRight);
     56c:	1a a6       	std	Y+42, r1	; 0x2a
     56e:	19 a6       	std	Y+41, r1	; 0x29
     570:	1c a6       	std	Y+44, r1	; 0x2c
     572:	1b a6       	std	Y+43, r1	; 0x2b
     574:	1d a6       	std	Y+45, r1	; 0x2d
     576:	04 96       	adiw	r24, 0x04	; 4
     578:	9f a7       	std	Y+47, r25	; 0x2f
     57a:	8e a7       	std	Y+46, r24	; 0x2e
     57c:	40 96       	adiw	r24, 0x10	; 16
     57e:	99 ab       	std	Y+49, r25	; 0x31
     580:	88 ab       	std	Y+48, r24	; 0x30
	//SYNC(&display, printAt, PACK_PRINT(pulseLeft.currentFreq, pulseLeft.pos));
	//SYNC(&display, printAt, PACK_PRINT(pulseRight.currentFreq, pulseRight.pos));
	INSTALL(&gui, joyStickVerticalControll, IRQ_PCINT1);
     582:	42 e0       	ldi	r20, 0x02	; 2
     584:	6f e3       	ldi	r22, 0x3F	; 63
     586:	71 e0       	ldi	r23, 0x01	; 1
     588:	40 96       	adiw	r24, 0x10	; 16
     58a:	0e 94 39 10 	call	0x2072	; 0x2072 <install>
	INSTALL(&gui, joyStickHorizontalControll, IRQ_PCINT0);
     58e:	41 e0       	ldi	r20, 0x01	; 1
     590:	62 e3       	ldi	r22, 0x32	; 50
     592:	71 e0       	ldi	r23, 0x01	; 1
     594:	ce 01       	movw	r24, r28
     596:	89 96       	adiw	r24, 0x29	; 41
     598:	0e 94 39 10 	call	0x2072	; 0x2072 <install>
	return TINYTIMBER(NULL, NULL, NULL);
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	50 e0       	ldi	r21, 0x00	; 0
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 54 10 	call	0x20a8	; 0x20a8 <tinytimber>
     5ac:	e1 96       	adiw	r28, 0x31	; 49
     5ae:	0f b6       	in	r0, 0x3f	; 63
     5b0:	f8 94       	cli
     5b2:	de bf       	out	0x3e, r29	; 62
     5b4:	0f be       	out	0x3f, r0	; 63
     5b6:	cd bf       	out	0x3d, r28	; 61
     5b8:	df 91       	pop	r29
     5ba:	cf 91       	pop	r28
     5bc:	08 95       	ret

000005be <setLow>:
	LCDDR18 ^= 1;
	return 0;
}

int setLow(PulseController *self, int pin){
	if(pin == 1){
     5be:	61 30       	cpi	r22, 0x01	; 1
     5c0:	71 05       	cpc	r23, r1
     5c2:	21 f4       	brne	.+8      	; 0x5cc <setLow+0xe>
		PORTE &= ~(1 << PE4);
     5c4:	8e b1       	in	r24, 0x0e	; 14
     5c6:	8f 7e       	andi	r24, 0xEF	; 239
     5c8:	8e b9       	out	0x0e, r24	; 14
     5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <setLow+0x1a>
	}else if(pin == 3){
     5cc:	63 30       	cpi	r22, 0x03	; 3
     5ce:	71 05       	cpc	r23, r1
     5d0:	19 f4       	brne	.+6      	; 0x5d8 <setLow+0x1a>
		PORTE &= ~(1 << PE6);
     5d2:	8e b1       	in	r24, 0x0e	; 14
     5d4:	8f 7b       	andi	r24, 0xBF	; 191
     5d6:	8e b9       	out	0x0e, r24	; 14
	}
	return 0;
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	08 95       	ret

000005de <generator>:
	SYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));

	return self->currentFreq;
}

int generator(PulseGenerator *self, int unused){
     5de:	cf 92       	push	r12
     5e0:	df 92       	push	r13
     5e2:	ef 92       	push	r14
     5e4:	ff 92       	push	r15
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
     5ea:	fc 01       	movw	r30, r24
	if(self->currentFreq > 0){
     5ec:	64 81       	ldd	r22, Z+4	; 0x04
     5ee:	75 81       	ldd	r23, Z+5	; 0x05
     5f0:	16 16       	cp	r1, r22
     5f2:	17 06       	cpc	r1, r23
     5f4:	54 f5       	brge	.+84     	; 0x64a <generator+0x6c>
		int fre = 500 / self->currentFreq;
     5f6:	84 ef       	ldi	r24, 0xF4	; 244
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__divmodhi4>
		AFTER(MSEC(fre), self, generator, 0);
     5fe:	2d e7       	ldi	r18, 0x7D	; 125
     600:	30 e0       	ldi	r19, 0x00	; 0
     602:	db 01       	movw	r26, r22
     604:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__usmulhisi3>
     608:	6b 01       	movw	r12, r22
     60a:	7c 01       	movw	r14, r24
     60c:	99 23       	and	r25, r25
     60e:	2c f4       	brge	.+10     	; 0x61a <generator+0x3c>
     610:	23 e0       	ldi	r18, 0x03	; 3
     612:	c2 0e       	add	r12, r18
     614:	d1 1c       	adc	r13, r1
     616:	e1 1c       	adc	r14, r1
     618:	f1 1c       	adc	r15, r1
     61a:	8f 01       	movw	r16, r30
     61c:	c7 01       	movw	r24, r14
     61e:	b6 01       	movw	r22, r12
     620:	95 95       	asr	r25
     622:	87 95       	ror	r24
     624:	77 95       	ror	r23
     626:	67 95       	ror	r22
     628:	95 95       	asr	r25
     62a:	87 95       	ror	r24
     62c:	77 95       	ror	r23
     62e:	67 95       	ror	r22
     630:	c1 2c       	mov	r12, r1
     632:	d1 2c       	mov	r13, r1
     634:	0f 2e       	mov	r0, r31
     636:	ff ee       	ldi	r31, 0xEF	; 239
     638:	ef 2e       	mov	r14, r31
     63a:	f2 e0       	ldi	r31, 0x02	; 2
     63c:	ff 2e       	mov	r15, r31
     63e:	f0 2d       	mov	r31, r0
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	a9 01       	movw	r20, r18
     646:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
	}

	return 0;
}
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	ff 90       	pop	r15
     654:	ef 90       	pop	r14
     656:	df 90       	pop	r13
     658:	cf 90       	pop	r12
     65a:	08 95       	ret

0000065c <increase>:
#include "PulseGenerator.h"

int increase(PulseGenerator *self, int unused){
     65c:	cf 92       	push	r12
     65e:	df 92       	push	r13
     660:	ef 92       	push	r14
     662:	ff 92       	push	r15
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	ec 01       	movw	r28, r24
	if (!(self->currentFreq >= 99)) self->currentFreq += 1;
     66e:	8c 81       	ldd	r24, Y+4	; 0x04
     670:	9d 81       	ldd	r25, Y+5	; 0x05
     672:	83 36       	cpi	r24, 0x63	; 99
     674:	91 05       	cpc	r25, r1
     676:	1c f4       	brge	.+6      	; 0x67e <increase+0x22>
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	9d 83       	std	Y+5, r25	; 0x05
     67c:	8c 83       	std	Y+4, r24	; 0x04
	SYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     67e:	4c 81       	ldd	r20, Y+4	; 0x04
     680:	58 85       	ldd	r21, Y+8	; 0x08
     682:	85 2f       	mov	r24, r21
     684:	87 95       	ror	r24
     686:	88 27       	eor	r24, r24
     688:	87 95       	ror	r24
     68a:	4f 77       	andi	r20, 0x7F	; 127
     68c:	48 2b       	or	r20, r24
     68e:	56 95       	lsr	r21
     690:	53 70       	andi	r21, 0x03	; 3
     692:	68 e3       	ldi	r22, 0x38	; 56
     694:	72 e0       	ldi	r23, 0x02	; 2
     696:	8e 85       	ldd	r24, Y+14	; 0x0e
     698:	9f 85       	ldd	r25, Y+15	; 0x0f
     69a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <sync>

	if(self->currentFreq == 1){
     69e:	8c 81       	ldd	r24, Y+4	; 0x04
     6a0:	9d 81       	ldd	r25, Y+5	; 0x05
     6a2:	01 97       	sbiw	r24, 0x01	; 1
     6a4:	89 f4       	brne	.+34     	; 0x6c8 <increase+0x6c>
		ASYNC(self, generator, 0); // Ändrat från SYNC till ASYNC
     6a6:	c1 2c       	mov	r12, r1
     6a8:	d1 2c       	mov	r13, r1
     6aa:	0f 2e       	mov	r0, r31
     6ac:	ff ee       	ldi	r31, 0xEF	; 239
     6ae:	ef 2e       	mov	r14, r31
     6b0:	f2 e0       	ldi	r31, 0x02	; 2
     6b2:	ff 2e       	mov	r15, r31
     6b4:	f0 2d       	mov	r31, r0
     6b6:	8e 01       	movw	r16, r28
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	a9 01       	movw	r20, r18
     6be:	60 e0       	ldi	r22, 0x00	; 0
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	cb 01       	movw	r24, r22
     6c4:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
	}
	return self->currentFreq;
}
     6c8:	8c 81       	ldd	r24, Y+4	; 0x04
     6ca:	9d 81       	ldd	r25, Y+5	; 0x05
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	1f 91       	pop	r17
     6d2:	0f 91       	pop	r16
     6d4:	ff 90       	pop	r15
     6d6:	ef 90       	pop	r14
     6d8:	df 90       	pop	r13
     6da:	cf 90       	pop	r12
     6dc:	08 95       	ret

000006de <decrease>:

int decrease(PulseGenerator *self, int unused){
     6de:	cf 92       	push	r12
     6e0:	df 92       	push	r13
     6e2:	ef 92       	push	r14
     6e4:	ff 92       	push	r15
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	ec 01       	movw	r28, r24
	if (self->currentFreq == 1) ASYNC(self, setLow, self->pin);  // Ändrat från SYNC till ASYNC
     6f0:	8c 81       	ldd	r24, Y+4	; 0x04
     6f2:	9d 81       	ldd	r25, Y+5	; 0x05
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	89 f4       	brne	.+34     	; 0x71a <decrease+0x3c>
     6f8:	ca 84       	ldd	r12, Y+10	; 0x0a
     6fa:	db 84       	ldd	r13, Y+11	; 0x0b
     6fc:	0f 2e       	mov	r0, r31
     6fe:	ff ed       	ldi	r31, 0xDF	; 223
     700:	ef 2e       	mov	r14, r31
     702:	f2 e0       	ldi	r31, 0x02	; 2
     704:	ff 2e       	mov	r15, r31
     706:	f0 2d       	mov	r31, r0
     708:	8e 01       	movw	r16, r28
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	a9 01       	movw	r20, r18
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	cb 01       	movw	r24, r22
     716:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>

	if (self->currentFreq > 0){
     71a:	4c 81       	ldd	r20, Y+4	; 0x04
     71c:	5d 81       	ldd	r21, Y+5	; 0x05
     71e:	14 16       	cp	r1, r20
     720:	15 06       	cpc	r1, r21
     722:	9c f4       	brge	.+38     	; 0x74a <decrease+0x6c>
		self->currentFreq--;
     724:	41 50       	subi	r20, 0x01	; 1
     726:	51 09       	sbc	r21, r1
     728:	5d 83       	std	Y+5, r21	; 0x05
     72a:	4c 83       	std	Y+4, r20	; 0x04
		SYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     72c:	58 85       	ldd	r21, Y+8	; 0x08
     72e:	85 2f       	mov	r24, r21
     730:	87 95       	ror	r24
     732:	88 27       	eor	r24, r24
     734:	87 95       	ror	r24
     736:	4f 77       	andi	r20, 0x7F	; 127
     738:	48 2b       	or	r20, r24
     73a:	56 95       	lsr	r21
     73c:	53 70       	andi	r21, 0x03	; 3
     73e:	68 e3       	ldi	r22, 0x38	; 56
     740:	72 e0       	ldi	r23, 0x02	; 2
     742:	8e 85       	ldd	r24, Y+14	; 0x0e
     744:	9f 85       	ldd	r25, Y+15	; 0x0f
     746:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <sync>
	}

	return self->currentFreq;
}
     74a:	8c 81       	ldd	r24, Y+4	; 0x04
     74c:	9d 81       	ldd	r25, Y+5	; 0x05
     74e:	df 91       	pop	r29
     750:	cf 91       	pop	r28
     752:	1f 91       	pop	r17
     754:	0f 91       	pop	r16
     756:	ff 90       	pop	r15
     758:	ef 90       	pop	r14
     75a:	df 90       	pop	r13
     75c:	cf 90       	pop	r12
     75e:	08 95       	ret

00000760 <reset>:
int reset(PulseGenerator *self, int unused){
     760:	cf 92       	push	r12
     762:	df 92       	push	r13
     764:	ef 92       	push	r14
     766:	ff 92       	push	r15
     768:	0f 93       	push	r16
     76a:	1f 93       	push	r17
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	ec 01       	movw	r28, r24
	if (self->currentFreq == 0){
     772:	8c 81       	ldd	r24, Y+4	; 0x04
     774:	9d 81       	ldd	r25, Y+5	; 0x05
     776:	00 97       	sbiw	r24, 0x00	; 0
     778:	c1 f4       	brne	.+48     	; 0x7aa <reset+0x4a>
		self->currentFreq = self->lastFreq;
     77a:	8e 81       	ldd	r24, Y+6	; 0x06
     77c:	9f 81       	ldd	r25, Y+7	; 0x07
     77e:	9d 83       	std	Y+5, r25	; 0x05
     780:	8c 83       	std	Y+4, r24	; 0x04
		if(self->currentFreq != 0) ASYNC(self, generator, 0); // Ändrat från SYNC till ASYNC
     782:	89 2b       	or	r24, r25
     784:	39 f1       	breq	.+78     	; 0x7d4 <reset+0x74>
     786:	c1 2c       	mov	r12, r1
     788:	d1 2c       	mov	r13, r1
     78a:	0f 2e       	mov	r0, r31
     78c:	ff ee       	ldi	r31, 0xEF	; 239
     78e:	ef 2e       	mov	r14, r31
     790:	f2 e0       	ldi	r31, 0x02	; 2
     792:	ff 2e       	mov	r15, r31
     794:	f0 2d       	mov	r31, r0
     796:	8e 01       	movw	r16, r28
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	a9 01       	movw	r20, r18
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	cb 01       	movw	r24, r22
     7a4:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
     7a8:	15 c0       	rjmp	.+42     	; 0x7d4 <reset+0x74>
		} else {
		self->lastFreq = self->currentFreq;
     7aa:	9f 83       	std	Y+7, r25	; 0x07
     7ac:	8e 83       	std	Y+6, r24	; 0x06
		self->currentFreq = 0;
     7ae:	1d 82       	std	Y+5, r1	; 0x05
     7b0:	1c 82       	std	Y+4, r1	; 0x04
		ASYNC(self, setLow, self->pin); // Ändrat från SYNC till ASYNC
     7b2:	ca 84       	ldd	r12, Y+10	; 0x0a
     7b4:	db 84       	ldd	r13, Y+11	; 0x0b
     7b6:	0f 2e       	mov	r0, r31
     7b8:	ff ed       	ldi	r31, 0xDF	; 223
     7ba:	ef 2e       	mov	r14, r31
     7bc:	f2 e0       	ldi	r31, 0x02	; 2
     7be:	ff 2e       	mov	r15, r31
     7c0:	f0 2d       	mov	r31, r0
     7c2:	8e 01       	movw	r16, r28
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	a9 01       	movw	r20, r18
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	cb 01       	movw	r24, r22
     7d0:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
	}
	SYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     7d4:	4c 81       	ldd	r20, Y+4	; 0x04
     7d6:	58 85       	ldd	r21, Y+8	; 0x08
     7d8:	85 2f       	mov	r24, r21
     7da:	87 95       	ror	r24
     7dc:	88 27       	eor	r24, r24
     7de:	87 95       	ror	r24
     7e0:	4f 77       	andi	r20, 0x7F	; 127
     7e2:	48 2b       	or	r20, r24
     7e4:	56 95       	lsr	r21
     7e6:	53 70       	andi	r21, 0x03	; 3
     7e8:	68 e3       	ldi	r22, 0x38	; 56
     7ea:	72 e0       	ldi	r23, 0x02	; 2
     7ec:	8e 85       	ldd	r24, Y+14	; 0x0e
     7ee:	9f 85       	ldd	r25, Y+15	; 0x0f
     7f0:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <sync>

	return self->currentFreq;
}
     7f4:	8c 81       	ldd	r24, Y+4	; 0x04
     7f6:	9d 81       	ldd	r25, Y+5	; 0x05
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
     808:	08 95       	ret

0000080a <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	00 d0       	rcall	.+0      	; 0x810 <initialize+0x6>
     810:	00 d0       	rcall	.+0      	; 0x812 <initialize+0x8>
     812:	cd b7       	in	r28, 0x3d	; 61
     814:	de b7       	in	r29, 0x3e	; 62
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	18 c0       	rjmp	.+48     	; 0x84c <initialize+0x42>
     81c:	ac 01       	movw	r20, r24
     81e:	4f 5f       	subi	r20, 0xFF	; 255
     820:	5f 4f       	sbci	r21, 0xFF	; 255
     822:	9a 01       	movw	r18, r20
     824:	22 95       	swap	r18
     826:	32 95       	swap	r19
     828:	30 7f       	andi	r19, 0xF0	; 240
     82a:	32 27       	eor	r19, r18
     82c:	20 7f       	andi	r18, 0xF0	; 240
     82e:	32 27       	eor	r19, r18
     830:	25 5e       	subi	r18, 0xE5	; 229
     832:	3d 4f       	sbci	r19, 0xFD	; 253
     834:	82 95       	swap	r24
     836:	92 95       	swap	r25
     838:	90 7f       	andi	r25, 0xF0	; 240
     83a:	98 27       	eor	r25, r24
     83c:	80 7f       	andi	r24, 0xF0	; 240
     83e:	98 27       	eor	r25, r24
     840:	fc 01       	movw	r30, r24
     842:	e5 5e       	subi	r30, 0xE5	; 229
     844:	fd 4f       	sbci	r31, 0xFD	; 253
     846:	31 83       	std	Z+1, r19	; 0x01
     848:	20 83       	st	Z, r18
     84a:	ca 01       	movw	r24, r20
     84c:	8e 30       	cpi	r24, 0x0E	; 14
     84e:	91 05       	cpc	r25, r1
     850:	2c f3       	brlt	.-54     	; 0x81c <initialize+0x12>
     852:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     856:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	15 c0       	rjmp	.+42     	; 0x88a <initialize+0x80>
     860:	ac 01       	movw	r20, r24
     862:	4f 5f       	subi	r20, 0xFF	; 255
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	6d e1       	ldi	r22, 0x1D	; 29
     868:	64 9f       	mul	r22, r20
     86a:	90 01       	movw	r18, r0
     86c:	65 9f       	mul	r22, r21
     86e:	30 0d       	add	r19, r0
     870:	11 24       	eor	r1, r1
     872:	2a 59       	subi	r18, 0x9A	; 154
     874:	3e 4f       	sbci	r19, 0xFE	; 254
     876:	68 9f       	mul	r22, r24
     878:	f0 01       	movw	r30, r0
     87a:	69 9f       	mul	r22, r25
     87c:	f0 0d       	add	r31, r0
     87e:	11 24       	eor	r1, r1
     880:	ea 59       	subi	r30, 0x9A	; 154
     882:	fe 4f       	sbci	r31, 0xFE	; 254
     884:	31 83       	std	Z+1, r19	; 0x01
     886:	20 83       	st	Z, r18
     888:	ca 01       	movw	r24, r20
     88a:	83 30       	cpi	r24, 0x03	; 3
     88c:	91 05       	cpc	r25, r1
     88e:	44 f3       	brlt	.-48     	; 0x860 <initialize+0x56>
     890:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <threads+0x58>
     894:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <threads+0x57>
     898:	1a 82       	std	Y+2, r1	; 0x02
     89a:	19 82       	std	Y+1, r1	; 0x01
     89c:	32 c0       	rjmp	.+100    	; 0x902 <initialize+0xf8>
     89e:	2d e1       	ldi	r18, 0x1D	; 29
     8a0:	49 81       	ldd	r20, Y+1	; 0x01
     8a2:	5a 81       	ldd	r21, Y+2	; 0x02
     8a4:	24 9f       	mul	r18, r20
     8a6:	c0 01       	movw	r24, r0
     8a8:	25 9f       	mul	r18, r21
     8aa:	90 0d       	add	r25, r0
     8ac:	11 24       	eor	r1, r1
     8ae:	fc 01       	movw	r30, r24
     8b0:	e4 59       	subi	r30, 0x94	; 148
     8b2:	fe 4f       	sbci	r31, 0xFE	; 254
     8b4:	fc 83       	std	Y+4, r31	; 0x04
     8b6:	eb 83       	std	Y+3, r30	; 0x03
     8b8:	cf 01       	movw	r24, r30
     8ba:	0e 94 a9 10 	call	0x2152	; 0x2152 <setjmp>
     8be:	20 e6       	ldi	r18, 0x60	; 96
     8c0:	49 81       	ldd	r20, Y+1	; 0x01
     8c2:	5a 81       	ldd	r21, Y+2	; 0x02
     8c4:	24 9f       	mul	r18, r20
     8c6:	c0 01       	movw	r24, r0
     8c8:	25 9f       	mul	r18, r21
     8ca:	90 0d       	add	r25, r0
     8cc:	11 24       	eor	r1, r1
     8ce:	89 59       	subi	r24, 0x99	; 153
     8d0:	9c 4f       	sbci	r25, 0xFC	; 252
     8d2:	eb 81       	ldd	r30, Y+3	; 0x03
     8d4:	fc 81       	ldd	r31, Y+4	; 0x04
     8d6:	91 8b       	std	Z+17, r25	; 0x11
     8d8:	80 8b       	std	Z+16, r24	; 0x10
     8da:	93 8b       	std	Z+19, r25	; 0x13
     8dc:	82 8b       	std	Z+18, r24	; 0x12
     8de:	81 ee       	ldi	r24, 0xE1	; 225
     8e0:	9f e0       	ldi	r25, 0x0F	; 15
     8e2:	96 8b       	std	Z+22, r25	; 0x16
     8e4:	85 8b       	std	Z+21, r24	; 0x15
     8e6:	8d e1       	ldi	r24, 0x1D	; 29
     8e8:	84 9f       	mul	r24, r20
     8ea:	f0 01       	movw	r30, r0
     8ec:	85 9f       	mul	r24, r21
     8ee:	f0 0d       	add	r31, r0
     8f0:	11 24       	eor	r1, r1
     8f2:	ea 59       	subi	r30, 0x9A	; 154
     8f4:	fe 4f       	sbci	r31, 0xFE	; 254
     8f6:	15 82       	std	Z+5, r1	; 0x05
     8f8:	14 82       	std	Z+4, r1	; 0x04
     8fa:	4f 5f       	subi	r20, 0xFF	; 255
     8fc:	5f 4f       	sbci	r21, 0xFF	; 255
     8fe:	5a 83       	std	Y+2, r21	; 0x02
     900:	49 83       	std	Y+1, r20	; 0x01
     902:	29 81       	ldd	r18, Y+1	; 0x01
     904:	3a 81       	ldd	r19, Y+2	; 0x02
     906:	24 30       	cpi	r18, 0x04	; 4
     908:	31 05       	cpc	r19, r1
     90a:	4c f2       	brlt	.-110    	; 0x89e <initialize+0x94>
     90c:	ee ef       	ldi	r30, 0xFE	; 254
     90e:	f1 e0       	ldi	r31, 0x01	; 1
     910:	11 82       	std	Z+1, r1	; 0x01
     912:	10 82       	st	Z, r1
     914:	15 82       	std	Z+5, r1	; 0x05
     916:	14 82       	std	Z+4, r1	; 0x04
     918:	13 82       	std	Z+3, r1	; 0x03
     91a:	12 82       	std	Z+2, r1	; 0x02
     91c:	e1 e6       	ldi	r30, 0x61	; 97
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	80 e8       	ldi	r24, 0x80	; 128
     922:	80 83       	st	Z, r24
     924:	10 82       	st	Z, r1
     926:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     92a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     92e:	84 e0       	ldi	r24, 0x04	; 4
     930:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     93a:	0f 90       	pop	r0
     93c:	0f 90       	pop	r0
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	08 95       	ret

00000948 <dispatch>:
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	00 d0       	rcall	.+0      	; 0x94e <dispatch+0x6>
     94e:	cd b7       	in	r28, 0x3d	; 61
     950:	de b7       	in	r29, 0x3e	; 62
     952:	9a 83       	std	Y+2, r25	; 0x02
     954:	89 83       	std	Y+1, r24	; 0x01
     956:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     95a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     95e:	06 96       	adiw	r24, 0x06	; 6
     960:	0e 94 a9 10 	call	0x2152	; 0x2152 <setjmp>
     964:	89 2b       	or	r24, r25
     966:	59 f4       	brne	.+22     	; 0x97e <dispatch+0x36>
     968:	89 81       	ldd	r24, Y+1	; 0x01
     96a:	9a 81       	ldd	r25, Y+2	; 0x02
     96c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     970:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     974:	61 e0       	ldi	r22, 0x01	; 1
     976:	70 e0       	ldi	r23, 0x00	; 0
     978:	06 96       	adiw	r24, 0x06	; 6
     97a:	0e 94 c9 10 	call	0x2192	; 0x2192 <longjmp>
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	08 95       	ret

00000988 <enqueueByDeadline>:
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	dc 01       	movw	r26, r24
     992:	cb 01       	movw	r24, r22
     994:	eb 01       	movw	r28, r22
     996:	e8 81       	ld	r30, Y
     998:	f9 81       	ldd	r31, Y+1	; 0x01
     99a:	c0 e0       	ldi	r28, 0x00	; 0
     99c:	d0 e0       	ldi	r29, 0x00	; 0
     99e:	04 c0       	rjmp	.+8      	; 0x9a8 <enqueueByDeadline+0x20>
     9a0:	ef 01       	movw	r28, r30
     9a2:	01 90       	ld	r0, Z+
     9a4:	f0 81       	ld	r31, Z
     9a6:	e0 2d       	mov	r30, r0
     9a8:	30 97       	sbiw	r30, 0x00	; 0
     9aa:	79 f0       	breq	.+30     	; 0x9ca <enqueueByDeadline+0x42>
     9ac:	06 81       	ldd	r16, Z+6	; 0x06
     9ae:	17 81       	ldd	r17, Z+7	; 0x07
     9b0:	20 85       	ldd	r18, Z+8	; 0x08
     9b2:	31 85       	ldd	r19, Z+9	; 0x09
     9b4:	16 96       	adiw	r26, 0x06	; 6
     9b6:	4d 91       	ld	r20, X+
     9b8:	5d 91       	ld	r21, X+
     9ba:	6d 91       	ld	r22, X+
     9bc:	7c 91       	ld	r23, X
     9be:	19 97       	sbiw	r26, 0x09	; 9
     9c0:	40 17       	cp	r20, r16
     9c2:	51 07       	cpc	r21, r17
     9c4:	62 07       	cpc	r22, r18
     9c6:	73 07       	cpc	r23, r19
     9c8:	5c f7       	brge	.-42     	; 0x9a0 <enqueueByDeadline+0x18>
     9ca:	11 96       	adiw	r26, 0x01	; 1
     9cc:	fc 93       	st	X, r31
     9ce:	ee 93       	st	-X, r30
     9d0:	20 97       	sbiw	r28, 0x00	; 0
     9d2:	21 f4       	brne	.+8      	; 0x9dc <enqueueByDeadline+0x54>
     9d4:	fc 01       	movw	r30, r24
     9d6:	b1 83       	std	Z+1, r27	; 0x01
     9d8:	a0 83       	st	Z, r26
     9da:	02 c0       	rjmp	.+4      	; 0x9e0 <enqueueByDeadline+0x58>
     9dc:	b9 83       	std	Y+1, r27	; 0x01
     9de:	a8 83       	st	Y, r26
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	1f 91       	pop	r17
     9e6:	0f 91       	pop	r16
     9e8:	08 95       	ret

000009ea <enqueueByBaseline>:
     9ea:	0f 93       	push	r16
     9ec:	1f 93       	push	r17
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	dc 01       	movw	r26, r24
     9f4:	cb 01       	movw	r24, r22
     9f6:	eb 01       	movw	r28, r22
     9f8:	e8 81       	ld	r30, Y
     9fa:	f9 81       	ldd	r31, Y+1	; 0x01
     9fc:	c0 e0       	ldi	r28, 0x00	; 0
     9fe:	d0 e0       	ldi	r29, 0x00	; 0
     a00:	04 c0       	rjmp	.+8      	; 0xa0a <enqueueByBaseline+0x20>
     a02:	ef 01       	movw	r28, r30
     a04:	01 90       	ld	r0, Z+
     a06:	f0 81       	ld	r31, Z
     a08:	e0 2d       	mov	r30, r0
     a0a:	30 97       	sbiw	r30, 0x00	; 0
     a0c:	79 f0       	breq	.+30     	; 0xa2c <enqueueByBaseline+0x42>
     a0e:	02 81       	ldd	r16, Z+2	; 0x02
     a10:	13 81       	ldd	r17, Z+3	; 0x03
     a12:	24 81       	ldd	r18, Z+4	; 0x04
     a14:	35 81       	ldd	r19, Z+5	; 0x05
     a16:	12 96       	adiw	r26, 0x02	; 2
     a18:	4d 91       	ld	r20, X+
     a1a:	5d 91       	ld	r21, X+
     a1c:	6d 91       	ld	r22, X+
     a1e:	7c 91       	ld	r23, X
     a20:	15 97       	sbiw	r26, 0x05	; 5
     a22:	40 17       	cp	r20, r16
     a24:	51 07       	cpc	r21, r17
     a26:	62 07       	cpc	r22, r18
     a28:	73 07       	cpc	r23, r19
     a2a:	5c f7       	brge	.-42     	; 0xa02 <enqueueByBaseline+0x18>
     a2c:	11 96       	adiw	r26, 0x01	; 1
     a2e:	fc 93       	st	X, r31
     a30:	ee 93       	st	-X, r30
     a32:	20 97       	sbiw	r28, 0x00	; 0
     a34:	21 f4       	brne	.+8      	; 0xa3e <enqueueByBaseline+0x54>
     a36:	fc 01       	movw	r30, r24
     a38:	b1 83       	std	Z+1, r27	; 0x01
     a3a:	a0 83       	st	Z, r26
     a3c:	02 c0       	rjmp	.+4      	; 0xa42 <enqueueByBaseline+0x58>
     a3e:	b9 83       	std	Y+1, r27	; 0x01
     a40:	a8 83       	st	Y, r26
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	08 95       	ret

00000a4c <dequeue>:
     a4c:	dc 01       	movw	r26, r24
     a4e:	ed 91       	ld	r30, X+
     a50:	fc 91       	ld	r31, X
     a52:	11 97       	sbiw	r26, 0x01	; 1
     a54:	30 97       	sbiw	r30, 0x00	; 0
     a56:	59 f4       	brne	.+22     	; 0xa6e <dequeue+0x22>
     a58:	8f ef       	ldi	r24, 0xFF	; 255
     a5a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     a5e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     a62:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	83 bf       	out	0x33, r24	; 51
     a6a:	88 95       	sleep
     a6c:	fc cf       	rjmp	.-8      	; 0xa66 <dequeue+0x1a>
     a6e:	20 81       	ld	r18, Z
     a70:	31 81       	ldd	r19, Z+1	; 0x01
     a72:	2d 93       	st	X+, r18
     a74:	3c 93       	st	X, r19
     a76:	cf 01       	movw	r24, r30
     a78:	08 95       	ret

00000a7a <insert>:
     a7a:	fb 01       	movw	r30, r22
     a7c:	20 81       	ld	r18, Z
     a7e:	31 81       	ldd	r19, Z+1	; 0x01
     a80:	fc 01       	movw	r30, r24
     a82:	31 83       	std	Z+1, r19	; 0x01
     a84:	20 83       	st	Z, r18
     a86:	fb 01       	movw	r30, r22
     a88:	91 83       	std	Z+1, r25	; 0x01
     a8a:	80 83       	st	Z, r24
     a8c:	08 95       	ret

00000a8e <push>:
     a8e:	fb 01       	movw	r30, r22
     a90:	20 81       	ld	r18, Z
     a92:	31 81       	ldd	r19, Z+1	; 0x01
     a94:	fc 01       	movw	r30, r24
     a96:	31 83       	std	Z+1, r19	; 0x01
     a98:	20 83       	st	Z, r18
     a9a:	fb 01       	movw	r30, r22
     a9c:	91 83       	std	Z+1, r25	; 0x01
     a9e:	80 83       	st	Z, r24
     aa0:	08 95       	ret

00000aa2 <pop>:
     aa2:	dc 01       	movw	r26, r24
     aa4:	ed 91       	ld	r30, X+
     aa6:	fc 91       	ld	r31, X
     aa8:	11 97       	sbiw	r26, 0x01	; 1
     aaa:	20 81       	ld	r18, Z
     aac:	31 81       	ldd	r19, Z+1	; 0x01
     aae:	2d 93       	st	X+, r18
     ab0:	3c 93       	st	X, r19
     ab2:	cf 01       	movw	r24, r30
     ab4:	08 95       	ret

00000ab6 <schedule>:
     ab6:	cf 93       	push	r28
     ab8:	df 93       	push	r29
     aba:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     abe:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     ac2:	c2 81       	ldd	r28, Z+2	; 0x02
     ac4:	d3 81       	ldd	r29, Z+3	; 0x03
     ac6:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
     aca:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
     ace:	30 97       	sbiw	r30, 0x00	; 0
     ad0:	19 f1       	breq	.+70     	; 0xb18 <schedule+0x62>
     ad2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     ad6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     ada:	89 2b       	or	r24, r25
     adc:	e9 f0       	breq	.+58     	; 0xb18 <schedule+0x62>
     ade:	20 97       	sbiw	r28, 0x00	; 0
     ae0:	69 f0       	breq	.+26     	; 0xafc <schedule+0x46>
     ae2:	86 81       	ldd	r24, Z+6	; 0x06
     ae4:	97 81       	ldd	r25, Z+7	; 0x07
     ae6:	a0 85       	ldd	r26, Z+8	; 0x08
     ae8:	b1 85       	ldd	r27, Z+9	; 0x09
     aea:	4e 81       	ldd	r20, Y+6	; 0x06
     aec:	5f 81       	ldd	r21, Y+7	; 0x07
     aee:	68 85       	ldd	r22, Y+8	; 0x08
     af0:	79 85       	ldd	r23, Y+9	; 0x09
     af2:	84 1b       	sub	r24, r20
     af4:	95 0b       	sbc	r25, r21
     af6:	a6 0b       	sbc	r26, r22
     af8:	b7 0b       	sbc	r27, r23
     afa:	72 f4       	brpl	.+28     	; 0xb18 <schedule+0x62>
     afc:	84 e0       	ldi	r24, 0x04	; 4
     afe:	91 e0       	ldi	r25, 0x01	; 1
     b00:	0e 94 51 05 	call	0xaa2	; 0xaa2 <pop>
     b04:	62 e0       	ldi	r22, 0x02	; 2
     b06:	71 e0       	ldi	r23, 0x01	; 1
     b08:	0e 94 47 05 	call	0xa8e	; 0xa8e <push>
     b0c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     b10:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     b14:	0e 94 a4 04 	call	0x948	; 0x948 <dispatch>
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	08 95       	ret

00000b1e <__vector_1>:
     b1e:	1f 92       	push	r1
     b20:	0f 92       	push	r0
     b22:	0f b6       	in	r0, 0x3f	; 63
     b24:	0f 92       	push	r0
     b26:	11 24       	eor	r1, r1
     b28:	0f 93       	push	r16
     b2a:	1f 93       	push	r17
     b2c:	2f 93       	push	r18
     b2e:	3f 93       	push	r19
     b30:	4f 93       	push	r20
     b32:	5f 93       	push	r21
     b34:	6f 93       	push	r22
     b36:	7f 93       	push	r23
     b38:	8f 93       	push	r24
     b3a:	9f 93       	push	r25
     b3c:	af 93       	push	r26
     b3e:	bf 93       	push	r27
     b40:	ef 93       	push	r30
     b42:	ff 93       	push	r31
     b44:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     b48:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     b4c:	ac 01       	movw	r20, r24
     b4e:	09 2e       	mov	r0, r25
     b50:	00 0c       	add	r0, r0
     b52:	66 0b       	sbc	r22, r22
     b54:	77 0b       	sbc	r23, r23
     b56:	9a 01       	movw	r18, r20
     b58:	11 27       	eor	r17, r17
     b5a:	00 27       	eor	r16, r16
     b5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	40 2b       	or	r20, r16
     b6a:	51 2b       	or	r21, r17
     b6c:	62 2b       	or	r22, r18
     b6e:	73 2b       	or	r23, r19
     b70:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     b74:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     b78:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     b7c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     b80:	b0 9b       	sbis	0x16, 0	; 22
     b82:	1a c0       	rjmp	.+52     	; 0xbb8 <__vector_1+0x9a>
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	09 2e       	mov	r0, r25
     b88:	00 0c       	add	r0, r0
     b8a:	aa 0b       	sbc	r26, r26
     b8c:	bb 0b       	sbc	r27, r27
     b8e:	bc 01       	movw	r22, r24
     b90:	55 27       	eor	r21, r21
     b92:	44 27       	eor	r20, r20
     b94:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b98:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	84 2b       	or	r24, r20
     ba2:	95 2b       	or	r25, r21
     ba4:	a6 2b       	or	r26, r22
     ba6:	b7 2b       	or	r27, r23
     ba8:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     bac:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     bb0:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     bb4:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     bb8:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     bbc:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     bc0:	30 97       	sbiw	r30, 0x00	; 0
     bc2:	39 f0       	breq	.+14     	; 0xbd2 <__vector_1+0xb4>
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     bcc:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     bd0:	09 95       	icall
     bd2:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     bd6:	ff 91       	pop	r31
     bd8:	ef 91       	pop	r30
     bda:	bf 91       	pop	r27
     bdc:	af 91       	pop	r26
     bde:	9f 91       	pop	r25
     be0:	8f 91       	pop	r24
     be2:	7f 91       	pop	r23
     be4:	6f 91       	pop	r22
     be6:	5f 91       	pop	r21
     be8:	4f 91       	pop	r20
     bea:	3f 91       	pop	r19
     bec:	2f 91       	pop	r18
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	0f 90       	pop	r0
     bf4:	0f be       	out	0x3f, r0	; 63
     bf6:	0f 90       	pop	r0
     bf8:	1f 90       	pop	r1
     bfa:	18 95       	reti

00000bfc <__vector_2>:
     bfc:	1f 92       	push	r1
     bfe:	0f 92       	push	r0
     c00:	0f b6       	in	r0, 0x3f	; 63
     c02:	0f 92       	push	r0
     c04:	11 24       	eor	r1, r1
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	2f 93       	push	r18
     c0c:	3f 93       	push	r19
     c0e:	4f 93       	push	r20
     c10:	5f 93       	push	r21
     c12:	6f 93       	push	r22
     c14:	7f 93       	push	r23
     c16:	8f 93       	push	r24
     c18:	9f 93       	push	r25
     c1a:	af 93       	push	r26
     c1c:	bf 93       	push	r27
     c1e:	ef 93       	push	r30
     c20:	ff 93       	push	r31
     c22:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     c26:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     c2a:	ac 01       	movw	r20, r24
     c2c:	09 2e       	mov	r0, r25
     c2e:	00 0c       	add	r0, r0
     c30:	66 0b       	sbc	r22, r22
     c32:	77 0b       	sbc	r23, r23
     c34:	9a 01       	movw	r18, r20
     c36:	11 27       	eor	r17, r17
     c38:	00 27       	eor	r16, r16
     c3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c42:	60 e0       	ldi	r22, 0x00	; 0
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	40 2b       	or	r20, r16
     c48:	51 2b       	or	r21, r17
     c4a:	62 2b       	or	r22, r18
     c4c:	73 2b       	or	r23, r19
     c4e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     c52:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     c56:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     c5a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     c5e:	b0 9b       	sbis	0x16, 0	; 22
     c60:	1a c0       	rjmp	.+52     	; 0xc96 <__vector_2+0x9a>
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	09 2e       	mov	r0, r25
     c66:	00 0c       	add	r0, r0
     c68:	aa 0b       	sbc	r26, r26
     c6a:	bb 0b       	sbc	r27, r27
     c6c:	bc 01       	movw	r22, r24
     c6e:	55 27       	eor	r21, r21
     c70:	44 27       	eor	r20, r20
     c72:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c76:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	84 2b       	or	r24, r20
     c80:	95 2b       	or	r25, r21
     c82:	a6 2b       	or	r26, r22
     c84:	b7 2b       	or	r27, r23
     c86:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     c8a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     c8e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     c92:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     c96:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     c9a:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     c9e:	30 97       	sbiw	r30, 0x00	; 0
     ca0:	39 f0       	breq	.+14     	; 0xcb0 <__vector_2+0xb4>
     ca2:	61 e0       	ldi	r22, 0x01	; 1
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     caa:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     cae:	09 95       	icall
     cb0:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     cb4:	ff 91       	pop	r31
     cb6:	ef 91       	pop	r30
     cb8:	bf 91       	pop	r27
     cba:	af 91       	pop	r26
     cbc:	9f 91       	pop	r25
     cbe:	8f 91       	pop	r24
     cc0:	7f 91       	pop	r23
     cc2:	6f 91       	pop	r22
     cc4:	5f 91       	pop	r21
     cc6:	4f 91       	pop	r20
     cc8:	3f 91       	pop	r19
     cca:	2f 91       	pop	r18
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	0f 90       	pop	r0
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	0f 90       	pop	r0
     cd6:	1f 90       	pop	r1
     cd8:	18 95       	reti

00000cda <__vector_3>:
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	2f 93       	push	r18
     cea:	3f 93       	push	r19
     cec:	4f 93       	push	r20
     cee:	5f 93       	push	r21
     cf0:	6f 93       	push	r22
     cf2:	7f 93       	push	r23
     cf4:	8f 93       	push	r24
     cf6:	9f 93       	push	r25
     cf8:	af 93       	push	r26
     cfa:	bf 93       	push	r27
     cfc:	ef 93       	push	r30
     cfe:	ff 93       	push	r31
     d00:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     d04:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     d08:	ac 01       	movw	r20, r24
     d0a:	09 2e       	mov	r0, r25
     d0c:	00 0c       	add	r0, r0
     d0e:	66 0b       	sbc	r22, r22
     d10:	77 0b       	sbc	r23, r23
     d12:	9a 01       	movw	r18, r20
     d14:	11 27       	eor	r17, r17
     d16:	00 27       	eor	r16, r16
     d18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d20:	60 e0       	ldi	r22, 0x00	; 0
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	40 2b       	or	r20, r16
     d26:	51 2b       	or	r21, r17
     d28:	62 2b       	or	r22, r18
     d2a:	73 2b       	or	r23, r19
     d2c:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     d30:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     d34:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     d38:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     d3c:	b0 9b       	sbis	0x16, 0	; 22
     d3e:	1a c0       	rjmp	.+52     	; 0xd74 <__vector_3+0x9a>
     d40:	01 96       	adiw	r24, 0x01	; 1
     d42:	09 2e       	mov	r0, r25
     d44:	00 0c       	add	r0, r0
     d46:	aa 0b       	sbc	r26, r26
     d48:	bb 0b       	sbc	r27, r27
     d4a:	bc 01       	movw	r22, r24
     d4c:	55 27       	eor	r21, r21
     d4e:	44 27       	eor	r20, r20
     d50:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d54:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d58:	a0 e0       	ldi	r26, 0x00	; 0
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	84 2b       	or	r24, r20
     d5e:	95 2b       	or	r25, r21
     d60:	a6 2b       	or	r26, r22
     d62:	b7 2b       	or	r27, r23
     d64:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     d68:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     d6c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     d70:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     d74:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     d78:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     d7c:	30 97       	sbiw	r30, 0x00	; 0
     d7e:	39 f0       	breq	.+14     	; 0xd8e <__vector_3+0xb4>
     d80:	62 e0       	ldi	r22, 0x02	; 2
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     d88:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     d8c:	09 95       	icall
     d8e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     d92:	ff 91       	pop	r31
     d94:	ef 91       	pop	r30
     d96:	bf 91       	pop	r27
     d98:	af 91       	pop	r26
     d9a:	9f 91       	pop	r25
     d9c:	8f 91       	pop	r24
     d9e:	7f 91       	pop	r23
     da0:	6f 91       	pop	r22
     da2:	5f 91       	pop	r21
     da4:	4f 91       	pop	r20
     da6:	3f 91       	pop	r19
     da8:	2f 91       	pop	r18
     daa:	1f 91       	pop	r17
     dac:	0f 91       	pop	r16
     dae:	0f 90       	pop	r0
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	0f 90       	pop	r0
     db4:	1f 90       	pop	r1
     db6:	18 95       	reti

00000db8 <__vector_4>:
     db8:	1f 92       	push	r1
     dba:	0f 92       	push	r0
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	0f 92       	push	r0
     dc0:	11 24       	eor	r1, r1
     dc2:	0f 93       	push	r16
     dc4:	1f 93       	push	r17
     dc6:	2f 93       	push	r18
     dc8:	3f 93       	push	r19
     dca:	4f 93       	push	r20
     dcc:	5f 93       	push	r21
     dce:	6f 93       	push	r22
     dd0:	7f 93       	push	r23
     dd2:	8f 93       	push	r24
     dd4:	9f 93       	push	r25
     dd6:	af 93       	push	r26
     dd8:	bf 93       	push	r27
     dda:	ef 93       	push	r30
     ddc:	ff 93       	push	r31
     dde:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     de2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     de6:	ac 01       	movw	r20, r24
     de8:	09 2e       	mov	r0, r25
     dea:	00 0c       	add	r0, r0
     dec:	66 0b       	sbc	r22, r22
     dee:	77 0b       	sbc	r23, r23
     df0:	9a 01       	movw	r18, r20
     df2:	11 27       	eor	r17, r17
     df4:	00 27       	eor	r16, r16
     df6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dfa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dfe:	60 e0       	ldi	r22, 0x00	; 0
     e00:	70 e0       	ldi	r23, 0x00	; 0
     e02:	40 2b       	or	r20, r16
     e04:	51 2b       	or	r21, r17
     e06:	62 2b       	or	r22, r18
     e08:	73 2b       	or	r23, r19
     e0a:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     e0e:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     e12:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     e16:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     e1a:	b0 9b       	sbis	0x16, 0	; 22
     e1c:	1a c0       	rjmp	.+52     	; 0xe52 <__vector_4+0x9a>
     e1e:	01 96       	adiw	r24, 0x01	; 1
     e20:	09 2e       	mov	r0, r25
     e22:	00 0c       	add	r0, r0
     e24:	aa 0b       	sbc	r26, r26
     e26:	bb 0b       	sbc	r27, r27
     e28:	bc 01       	movw	r22, r24
     e2a:	55 27       	eor	r21, r21
     e2c:	44 27       	eor	r20, r20
     e2e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e32:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e36:	a0 e0       	ldi	r26, 0x00	; 0
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	84 2b       	or	r24, r20
     e3c:	95 2b       	or	r25, r21
     e3e:	a6 2b       	or	r26, r22
     e40:	b7 2b       	or	r27, r23
     e42:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     e46:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     e4a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     e4e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     e52:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     e56:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     e5a:	30 97       	sbiw	r30, 0x00	; 0
     e5c:	39 f0       	breq	.+14     	; 0xe6c <__vector_4+0xb4>
     e5e:	63 e0       	ldi	r22, 0x03	; 3
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     e66:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     e6a:	09 95       	icall
     e6c:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     e70:	ff 91       	pop	r31
     e72:	ef 91       	pop	r30
     e74:	bf 91       	pop	r27
     e76:	af 91       	pop	r26
     e78:	9f 91       	pop	r25
     e7a:	8f 91       	pop	r24
     e7c:	7f 91       	pop	r23
     e7e:	6f 91       	pop	r22
     e80:	5f 91       	pop	r21
     e82:	4f 91       	pop	r20
     e84:	3f 91       	pop	r19
     e86:	2f 91       	pop	r18
     e88:	1f 91       	pop	r17
     e8a:	0f 91       	pop	r16
     e8c:	0f 90       	pop	r0
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	0f 90       	pop	r0
     e92:	1f 90       	pop	r1
     e94:	18 95       	reti

00000e96 <__vector_5>:
     e96:	1f 92       	push	r1
     e98:	0f 92       	push	r0
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	0f 92       	push	r0
     e9e:	11 24       	eor	r1, r1
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	2f 93       	push	r18
     ea6:	3f 93       	push	r19
     ea8:	4f 93       	push	r20
     eaa:	5f 93       	push	r21
     eac:	6f 93       	push	r22
     eae:	7f 93       	push	r23
     eb0:	8f 93       	push	r24
     eb2:	9f 93       	push	r25
     eb4:	af 93       	push	r26
     eb6:	bf 93       	push	r27
     eb8:	ef 93       	push	r30
     eba:	ff 93       	push	r31
     ebc:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     ec0:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     ec4:	ac 01       	movw	r20, r24
     ec6:	09 2e       	mov	r0, r25
     ec8:	00 0c       	add	r0, r0
     eca:	66 0b       	sbc	r22, r22
     ecc:	77 0b       	sbc	r23, r23
     ece:	9a 01       	movw	r18, r20
     ed0:	11 27       	eor	r17, r17
     ed2:	00 27       	eor	r16, r16
     ed4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	40 2b       	or	r20, r16
     ee2:	51 2b       	or	r21, r17
     ee4:	62 2b       	or	r22, r18
     ee6:	73 2b       	or	r23, r19
     ee8:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     eec:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     ef0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     ef4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     ef8:	b0 9b       	sbis	0x16, 0	; 22
     efa:	1a c0       	rjmp	.+52     	; 0xf30 <__vector_5+0x9a>
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	09 2e       	mov	r0, r25
     f00:	00 0c       	add	r0, r0
     f02:	aa 0b       	sbc	r26, r26
     f04:	bb 0b       	sbc	r27, r27
     f06:	bc 01       	movw	r22, r24
     f08:	55 27       	eor	r21, r21
     f0a:	44 27       	eor	r20, r20
     f0c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f10:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f14:	a0 e0       	ldi	r26, 0x00	; 0
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	84 2b       	or	r24, r20
     f1a:	95 2b       	or	r25, r21
     f1c:	a6 2b       	or	r26, r22
     f1e:	b7 2b       	or	r27, r23
     f20:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     f24:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     f28:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     f2c:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     f30:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     f34:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     f38:	30 97       	sbiw	r30, 0x00	; 0
     f3a:	39 f0       	breq	.+14     	; 0xf4a <__vector_5+0xb4>
     f3c:	64 e0       	ldi	r22, 0x04	; 4
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     f44:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     f48:	09 95       	icall
     f4a:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
     f4e:	ff 91       	pop	r31
     f50:	ef 91       	pop	r30
     f52:	bf 91       	pop	r27
     f54:	af 91       	pop	r26
     f56:	9f 91       	pop	r25
     f58:	8f 91       	pop	r24
     f5a:	7f 91       	pop	r23
     f5c:	6f 91       	pop	r22
     f5e:	5f 91       	pop	r21
     f60:	4f 91       	pop	r20
     f62:	3f 91       	pop	r19
     f64:	2f 91       	pop	r18
     f66:	1f 91       	pop	r17
     f68:	0f 91       	pop	r16
     f6a:	0f 90       	pop	r0
     f6c:	0f be       	out	0x3f, r0	; 63
     f6e:	0f 90       	pop	r0
     f70:	1f 90       	pop	r1
     f72:	18 95       	reti

00000f74 <__vector_10>:
     f74:	1f 92       	push	r1
     f76:	0f 92       	push	r0
     f78:	0f b6       	in	r0, 0x3f	; 63
     f7a:	0f 92       	push	r0
     f7c:	11 24       	eor	r1, r1
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	2f 93       	push	r18
     f84:	3f 93       	push	r19
     f86:	4f 93       	push	r20
     f88:	5f 93       	push	r21
     f8a:	6f 93       	push	r22
     f8c:	7f 93       	push	r23
     f8e:	8f 93       	push	r24
     f90:	9f 93       	push	r25
     f92:	af 93       	push	r26
     f94:	bf 93       	push	r27
     f96:	ef 93       	push	r30
     f98:	ff 93       	push	r31
     f9a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     f9e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     fa2:	ac 01       	movw	r20, r24
     fa4:	09 2e       	mov	r0, r25
     fa6:	00 0c       	add	r0, r0
     fa8:	66 0b       	sbc	r22, r22
     faa:	77 0b       	sbc	r23, r23
     fac:	9a 01       	movw	r18, r20
     fae:	11 27       	eor	r17, r17
     fb0:	00 27       	eor	r16, r16
     fb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fba:	60 e0       	ldi	r22, 0x00	; 0
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	40 2b       	or	r20, r16
     fc0:	51 2b       	or	r21, r17
     fc2:	62 2b       	or	r22, r18
     fc4:	73 2b       	or	r23, r19
     fc6:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     fca:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     fce:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     fd2:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     fd6:	b0 9b       	sbis	0x16, 0	; 22
     fd8:	1a c0       	rjmp	.+52     	; 0x100e <__vector_10+0x9a>
     fda:	01 96       	adiw	r24, 0x01	; 1
     fdc:	09 2e       	mov	r0, r25
     fde:	00 0c       	add	r0, r0
     fe0:	aa 0b       	sbc	r26, r26
     fe2:	bb 0b       	sbc	r27, r27
     fe4:	bc 01       	movw	r22, r24
     fe6:	55 27       	eor	r21, r21
     fe8:	44 27       	eor	r20, r20
     fea:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fee:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ff2:	a0 e0       	ldi	r26, 0x00	; 0
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	84 2b       	or	r24, r20
     ff8:	95 2b       	or	r25, r21
     ffa:	a6 2b       	or	r26, r22
     ffc:	b7 2b       	or	r27, r23
     ffe:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1002:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1006:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    100a:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    100e:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
    1012:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
    1016:	30 97       	sbiw	r30, 0x00	; 0
    1018:	39 f0       	breq	.+14     	; 0x1028 <__vector_10+0xb4>
    101a:	65 e0       	ldi	r22, 0x05	; 5
    101c:	70 e0       	ldi	r23, 0x00	; 0
    101e:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
    1022:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
    1026:	09 95       	icall
    1028:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    102c:	ff 91       	pop	r31
    102e:	ef 91       	pop	r30
    1030:	bf 91       	pop	r27
    1032:	af 91       	pop	r26
    1034:	9f 91       	pop	r25
    1036:	8f 91       	pop	r24
    1038:	7f 91       	pop	r23
    103a:	6f 91       	pop	r22
    103c:	5f 91       	pop	r21
    103e:	4f 91       	pop	r20
    1040:	3f 91       	pop	r19
    1042:	2f 91       	pop	r18
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	0f 90       	pop	r0
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	0f 90       	pop	r0
    104e:	1f 90       	pop	r1
    1050:	18 95       	reti

00001052 <__vector_11>:
    1052:	1f 92       	push	r1
    1054:	0f 92       	push	r0
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	0f 92       	push	r0
    105a:	11 24       	eor	r1, r1
    105c:	0f 93       	push	r16
    105e:	1f 93       	push	r17
    1060:	2f 93       	push	r18
    1062:	3f 93       	push	r19
    1064:	4f 93       	push	r20
    1066:	5f 93       	push	r21
    1068:	6f 93       	push	r22
    106a:	7f 93       	push	r23
    106c:	8f 93       	push	r24
    106e:	9f 93       	push	r25
    1070:	af 93       	push	r26
    1072:	bf 93       	push	r27
    1074:	ef 93       	push	r30
    1076:	ff 93       	push	r31
    1078:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    107c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1080:	ac 01       	movw	r20, r24
    1082:	09 2e       	mov	r0, r25
    1084:	00 0c       	add	r0, r0
    1086:	66 0b       	sbc	r22, r22
    1088:	77 0b       	sbc	r23, r23
    108a:	9a 01       	movw	r18, r20
    108c:	11 27       	eor	r17, r17
    108e:	00 27       	eor	r16, r16
    1090:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1094:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1098:	60 e0       	ldi	r22, 0x00	; 0
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	40 2b       	or	r20, r16
    109e:	51 2b       	or	r21, r17
    10a0:	62 2b       	or	r22, r18
    10a2:	73 2b       	or	r23, r19
    10a4:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    10a8:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    10ac:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    10b0:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    10b4:	b0 9b       	sbis	0x16, 0	; 22
    10b6:	1a c0       	rjmp	.+52     	; 0x10ec <__vector_11+0x9a>
    10b8:	01 96       	adiw	r24, 0x01	; 1
    10ba:	09 2e       	mov	r0, r25
    10bc:	00 0c       	add	r0, r0
    10be:	aa 0b       	sbc	r26, r26
    10c0:	bb 0b       	sbc	r27, r27
    10c2:	bc 01       	movw	r22, r24
    10c4:	55 27       	eor	r21, r21
    10c6:	44 27       	eor	r20, r20
    10c8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10cc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10d0:	a0 e0       	ldi	r26, 0x00	; 0
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	84 2b       	or	r24, r20
    10d6:	95 2b       	or	r25, r21
    10d8:	a6 2b       	or	r26, r22
    10da:	b7 2b       	or	r27, r23
    10dc:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    10e0:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    10e4:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    10e8:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    10ec:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
    10f0:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
    10f4:	30 97       	sbiw	r30, 0x00	; 0
    10f6:	39 f0       	breq	.+14     	; 0x1106 <__vector_11+0xb4>
    10f8:	66 e0       	ldi	r22, 0x06	; 6
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
    1100:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
    1104:	09 95       	icall
    1106:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    110a:	ff 91       	pop	r31
    110c:	ef 91       	pop	r30
    110e:	bf 91       	pop	r27
    1110:	af 91       	pop	r26
    1112:	9f 91       	pop	r25
    1114:	8f 91       	pop	r24
    1116:	7f 91       	pop	r23
    1118:	6f 91       	pop	r22
    111a:	5f 91       	pop	r21
    111c:	4f 91       	pop	r20
    111e:	3f 91       	pop	r19
    1120:	2f 91       	pop	r18
    1122:	1f 91       	pop	r17
    1124:	0f 91       	pop	r16
    1126:	0f 90       	pop	r0
    1128:	0f be       	out	0x3f, r0	; 63
    112a:	0f 90       	pop	r0
    112c:	1f 90       	pop	r1
    112e:	18 95       	reti

00001130 <__vector_12>:
    1130:	1f 92       	push	r1
    1132:	0f 92       	push	r0
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	0f 92       	push	r0
    1138:	11 24       	eor	r1, r1
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	2f 93       	push	r18
    1140:	3f 93       	push	r19
    1142:	4f 93       	push	r20
    1144:	5f 93       	push	r21
    1146:	6f 93       	push	r22
    1148:	7f 93       	push	r23
    114a:	8f 93       	push	r24
    114c:	9f 93       	push	r25
    114e:	af 93       	push	r26
    1150:	bf 93       	push	r27
    1152:	ef 93       	push	r30
    1154:	ff 93       	push	r31
    1156:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    115a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    115e:	ac 01       	movw	r20, r24
    1160:	09 2e       	mov	r0, r25
    1162:	00 0c       	add	r0, r0
    1164:	66 0b       	sbc	r22, r22
    1166:	77 0b       	sbc	r23, r23
    1168:	9a 01       	movw	r18, r20
    116a:	11 27       	eor	r17, r17
    116c:	00 27       	eor	r16, r16
    116e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1172:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	40 2b       	or	r20, r16
    117c:	51 2b       	or	r21, r17
    117e:	62 2b       	or	r22, r18
    1180:	73 2b       	or	r23, r19
    1182:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1186:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    118a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    118e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1192:	b0 9b       	sbis	0x16, 0	; 22
    1194:	1a c0       	rjmp	.+52     	; 0x11ca <__vector_12+0x9a>
    1196:	01 96       	adiw	r24, 0x01	; 1
    1198:	09 2e       	mov	r0, r25
    119a:	00 0c       	add	r0, r0
    119c:	aa 0b       	sbc	r26, r26
    119e:	bb 0b       	sbc	r27, r27
    11a0:	bc 01       	movw	r22, r24
    11a2:	55 27       	eor	r21, r21
    11a4:	44 27       	eor	r20, r20
    11a6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11aa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ae:	a0 e0       	ldi	r26, 0x00	; 0
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	84 2b       	or	r24, r20
    11b4:	95 2b       	or	r25, r21
    11b6:	a6 2b       	or	r26, r22
    11b8:	b7 2b       	or	r27, r23
    11ba:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    11be:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    11c2:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    11c6:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    11ca:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
    11ce:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
    11d2:	30 97       	sbiw	r30, 0x00	; 0
    11d4:	39 f0       	breq	.+14     	; 0x11e4 <__vector_12+0xb4>
    11d6:	67 e0       	ldi	r22, 0x07	; 7
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
    11de:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
    11e2:	09 95       	icall
    11e4:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    11e8:	ff 91       	pop	r31
    11ea:	ef 91       	pop	r30
    11ec:	bf 91       	pop	r27
    11ee:	af 91       	pop	r26
    11f0:	9f 91       	pop	r25
    11f2:	8f 91       	pop	r24
    11f4:	7f 91       	pop	r23
    11f6:	6f 91       	pop	r22
    11f8:	5f 91       	pop	r21
    11fa:	4f 91       	pop	r20
    11fc:	3f 91       	pop	r19
    11fe:	2f 91       	pop	r18
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	0f 90       	pop	r0
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	0f 90       	pop	r0
    120a:	1f 90       	pop	r1
    120c:	18 95       	reti

0000120e <__vector_13>:
    120e:	1f 92       	push	r1
    1210:	0f 92       	push	r0
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	0f 92       	push	r0
    1216:	11 24       	eor	r1, r1
    1218:	0f 93       	push	r16
    121a:	1f 93       	push	r17
    121c:	2f 93       	push	r18
    121e:	3f 93       	push	r19
    1220:	4f 93       	push	r20
    1222:	5f 93       	push	r21
    1224:	6f 93       	push	r22
    1226:	7f 93       	push	r23
    1228:	8f 93       	push	r24
    122a:	9f 93       	push	r25
    122c:	af 93       	push	r26
    122e:	bf 93       	push	r27
    1230:	ef 93       	push	r30
    1232:	ff 93       	push	r31
    1234:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1238:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    123c:	ac 01       	movw	r20, r24
    123e:	09 2e       	mov	r0, r25
    1240:	00 0c       	add	r0, r0
    1242:	66 0b       	sbc	r22, r22
    1244:	77 0b       	sbc	r23, r23
    1246:	9a 01       	movw	r18, r20
    1248:	11 27       	eor	r17, r17
    124a:	00 27       	eor	r16, r16
    124c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1250:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1254:	60 e0       	ldi	r22, 0x00	; 0
    1256:	70 e0       	ldi	r23, 0x00	; 0
    1258:	40 2b       	or	r20, r16
    125a:	51 2b       	or	r21, r17
    125c:	62 2b       	or	r22, r18
    125e:	73 2b       	or	r23, r19
    1260:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1264:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1268:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    126c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1270:	b0 9b       	sbis	0x16, 0	; 22
    1272:	1a c0       	rjmp	.+52     	; 0x12a8 <__vector_13+0x9a>
    1274:	01 96       	adiw	r24, 0x01	; 1
    1276:	09 2e       	mov	r0, r25
    1278:	00 0c       	add	r0, r0
    127a:	aa 0b       	sbc	r26, r26
    127c:	bb 0b       	sbc	r27, r27
    127e:	bc 01       	movw	r22, r24
    1280:	55 27       	eor	r21, r21
    1282:	44 27       	eor	r20, r20
    1284:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1288:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    128c:	a0 e0       	ldi	r26, 0x00	; 0
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	84 2b       	or	r24, r20
    1292:	95 2b       	or	r25, r21
    1294:	a6 2b       	or	r26, r22
    1296:	b7 2b       	or	r27, r23
    1298:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    129c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    12a0:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    12a4:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    12a8:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    12ac:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    12b0:	30 97       	sbiw	r30, 0x00	; 0
    12b2:	39 f0       	breq	.+14     	; 0x12c2 <__vector_13+0xb4>
    12b4:	68 e0       	ldi	r22, 0x08	; 8
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    12bc:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    12c0:	09 95       	icall
    12c2:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    12c6:	ff 91       	pop	r31
    12c8:	ef 91       	pop	r30
    12ca:	bf 91       	pop	r27
    12cc:	af 91       	pop	r26
    12ce:	9f 91       	pop	r25
    12d0:	8f 91       	pop	r24
    12d2:	7f 91       	pop	r23
    12d4:	6f 91       	pop	r22
    12d6:	5f 91       	pop	r21
    12d8:	4f 91       	pop	r20
    12da:	3f 91       	pop	r19
    12dc:	2f 91       	pop	r18
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	0f 90       	pop	r0
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	0f 90       	pop	r0
    12e8:	1f 90       	pop	r1
    12ea:	18 95       	reti

000012ec <__vector_14>:
    12ec:	1f 92       	push	r1
    12ee:	0f 92       	push	r0
    12f0:	0f b6       	in	r0, 0x3f	; 63
    12f2:	0f 92       	push	r0
    12f4:	11 24       	eor	r1, r1
    12f6:	0f 93       	push	r16
    12f8:	1f 93       	push	r17
    12fa:	2f 93       	push	r18
    12fc:	3f 93       	push	r19
    12fe:	4f 93       	push	r20
    1300:	5f 93       	push	r21
    1302:	6f 93       	push	r22
    1304:	7f 93       	push	r23
    1306:	8f 93       	push	r24
    1308:	9f 93       	push	r25
    130a:	af 93       	push	r26
    130c:	bf 93       	push	r27
    130e:	ef 93       	push	r30
    1310:	ff 93       	push	r31
    1312:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1316:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    131a:	ac 01       	movw	r20, r24
    131c:	09 2e       	mov	r0, r25
    131e:	00 0c       	add	r0, r0
    1320:	66 0b       	sbc	r22, r22
    1322:	77 0b       	sbc	r23, r23
    1324:	9a 01       	movw	r18, r20
    1326:	11 27       	eor	r17, r17
    1328:	00 27       	eor	r16, r16
    132a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    132e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	40 2b       	or	r20, r16
    1338:	51 2b       	or	r21, r17
    133a:	62 2b       	or	r22, r18
    133c:	73 2b       	or	r23, r19
    133e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1342:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1346:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    134a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    134e:	b0 9b       	sbis	0x16, 0	; 22
    1350:	1a c0       	rjmp	.+52     	; 0x1386 <__vector_14+0x9a>
    1352:	01 96       	adiw	r24, 0x01	; 1
    1354:	09 2e       	mov	r0, r25
    1356:	00 0c       	add	r0, r0
    1358:	aa 0b       	sbc	r26, r26
    135a:	bb 0b       	sbc	r27, r27
    135c:	bc 01       	movw	r22, r24
    135e:	55 27       	eor	r21, r21
    1360:	44 27       	eor	r20, r20
    1362:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1366:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    136a:	a0 e0       	ldi	r26, 0x00	; 0
    136c:	b0 e0       	ldi	r27, 0x00	; 0
    136e:	84 2b       	or	r24, r20
    1370:	95 2b       	or	r25, r21
    1372:	a6 2b       	or	r26, r22
    1374:	b7 2b       	or	r27, r23
    1376:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    137a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    137e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1382:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1386:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    138a:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    138e:	30 97       	sbiw	r30, 0x00	; 0
    1390:	39 f0       	breq	.+14     	; 0x13a0 <__vector_14+0xb4>
    1392:	69 e0       	ldi	r22, 0x09	; 9
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    139a:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    139e:	09 95       	icall
    13a0:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    13a4:	ff 91       	pop	r31
    13a6:	ef 91       	pop	r30
    13a8:	bf 91       	pop	r27
    13aa:	af 91       	pop	r26
    13ac:	9f 91       	pop	r25
    13ae:	8f 91       	pop	r24
    13b0:	7f 91       	pop	r23
    13b2:	6f 91       	pop	r22
    13b4:	5f 91       	pop	r21
    13b6:	4f 91       	pop	r20
    13b8:	3f 91       	pop	r19
    13ba:	2f 91       	pop	r18
    13bc:	1f 91       	pop	r17
    13be:	0f 91       	pop	r16
    13c0:	0f 90       	pop	r0
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	0f 90       	pop	r0
    13c6:	1f 90       	pop	r1
    13c8:	18 95       	reti

000013ca <__vector_15>:
    13ca:	1f 92       	push	r1
    13cc:	0f 92       	push	r0
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	0f 92       	push	r0
    13d2:	11 24       	eor	r1, r1
    13d4:	0f 93       	push	r16
    13d6:	1f 93       	push	r17
    13d8:	2f 93       	push	r18
    13da:	3f 93       	push	r19
    13dc:	4f 93       	push	r20
    13de:	5f 93       	push	r21
    13e0:	6f 93       	push	r22
    13e2:	7f 93       	push	r23
    13e4:	8f 93       	push	r24
    13e6:	9f 93       	push	r25
    13e8:	af 93       	push	r26
    13ea:	bf 93       	push	r27
    13ec:	ef 93       	push	r30
    13ee:	ff 93       	push	r31
    13f0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    13f4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    13f8:	ac 01       	movw	r20, r24
    13fa:	09 2e       	mov	r0, r25
    13fc:	00 0c       	add	r0, r0
    13fe:	66 0b       	sbc	r22, r22
    1400:	77 0b       	sbc	r23, r23
    1402:	9a 01       	movw	r18, r20
    1404:	11 27       	eor	r17, r17
    1406:	00 27       	eor	r16, r16
    1408:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    140c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	70 e0       	ldi	r23, 0x00	; 0
    1414:	40 2b       	or	r20, r16
    1416:	51 2b       	or	r21, r17
    1418:	62 2b       	or	r22, r18
    141a:	73 2b       	or	r23, r19
    141c:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1420:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1424:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1428:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    142c:	b0 9b       	sbis	0x16, 0	; 22
    142e:	1a c0       	rjmp	.+52     	; 0x1464 <__vector_15+0x9a>
    1430:	01 96       	adiw	r24, 0x01	; 1
    1432:	09 2e       	mov	r0, r25
    1434:	00 0c       	add	r0, r0
    1436:	aa 0b       	sbc	r26, r26
    1438:	bb 0b       	sbc	r27, r27
    143a:	bc 01       	movw	r22, r24
    143c:	55 27       	eor	r21, r21
    143e:	44 27       	eor	r20, r20
    1440:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1444:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1448:	a0 e0       	ldi	r26, 0x00	; 0
    144a:	b0 e0       	ldi	r27, 0x00	; 0
    144c:	84 2b       	or	r24, r20
    144e:	95 2b       	or	r25, r21
    1450:	a6 2b       	or	r26, r22
    1452:	b7 2b       	or	r27, r23
    1454:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1458:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    145c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1460:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1464:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    1468:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    146c:	30 97       	sbiw	r30, 0x00	; 0
    146e:	39 f0       	breq	.+14     	; 0x147e <__vector_15+0xb4>
    1470:	6a e0       	ldi	r22, 0x0A	; 10
    1472:	70 e0       	ldi	r23, 0x00	; 0
    1474:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    1478:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    147c:	09 95       	icall
    147e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1482:	ff 91       	pop	r31
    1484:	ef 91       	pop	r30
    1486:	bf 91       	pop	r27
    1488:	af 91       	pop	r26
    148a:	9f 91       	pop	r25
    148c:	8f 91       	pop	r24
    148e:	7f 91       	pop	r23
    1490:	6f 91       	pop	r22
    1492:	5f 91       	pop	r21
    1494:	4f 91       	pop	r20
    1496:	3f 91       	pop	r19
    1498:	2f 91       	pop	r18
    149a:	1f 91       	pop	r17
    149c:	0f 91       	pop	r16
    149e:	0f 90       	pop	r0
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	0f 90       	pop	r0
    14a4:	1f 90       	pop	r1
    14a6:	18 95       	reti

000014a8 <__vector_16>:
    14a8:	1f 92       	push	r1
    14aa:	0f 92       	push	r0
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	0f 92       	push	r0
    14b0:	11 24       	eor	r1, r1
    14b2:	0f 93       	push	r16
    14b4:	1f 93       	push	r17
    14b6:	2f 93       	push	r18
    14b8:	3f 93       	push	r19
    14ba:	4f 93       	push	r20
    14bc:	5f 93       	push	r21
    14be:	6f 93       	push	r22
    14c0:	7f 93       	push	r23
    14c2:	8f 93       	push	r24
    14c4:	9f 93       	push	r25
    14c6:	af 93       	push	r26
    14c8:	bf 93       	push	r27
    14ca:	ef 93       	push	r30
    14cc:	ff 93       	push	r31
    14ce:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    14d2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    14d6:	ac 01       	movw	r20, r24
    14d8:	09 2e       	mov	r0, r25
    14da:	00 0c       	add	r0, r0
    14dc:	66 0b       	sbc	r22, r22
    14de:	77 0b       	sbc	r23, r23
    14e0:	9a 01       	movw	r18, r20
    14e2:	11 27       	eor	r17, r17
    14e4:	00 27       	eor	r16, r16
    14e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	70 e0       	ldi	r23, 0x00	; 0
    14f2:	40 2b       	or	r20, r16
    14f4:	51 2b       	or	r21, r17
    14f6:	62 2b       	or	r22, r18
    14f8:	73 2b       	or	r23, r19
    14fa:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    14fe:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1502:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1506:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    150a:	b0 9b       	sbis	0x16, 0	; 22
    150c:	1a c0       	rjmp	.+52     	; 0x1542 <__vector_16+0x9a>
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	09 2e       	mov	r0, r25
    1512:	00 0c       	add	r0, r0
    1514:	aa 0b       	sbc	r26, r26
    1516:	bb 0b       	sbc	r27, r27
    1518:	bc 01       	movw	r22, r24
    151a:	55 27       	eor	r21, r21
    151c:	44 27       	eor	r20, r20
    151e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1522:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1526:	a0 e0       	ldi	r26, 0x00	; 0
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	84 2b       	or	r24, r20
    152c:	95 2b       	or	r25, r21
    152e:	a6 2b       	or	r26, r22
    1530:	b7 2b       	or	r27, r23
    1532:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1536:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    153a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    153e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1542:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    1546:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    154a:	30 97       	sbiw	r30, 0x00	; 0
    154c:	39 f0       	breq	.+14     	; 0x155c <__vector_16+0xb4>
    154e:	6b e0       	ldi	r22, 0x0B	; 11
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    1556:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    155a:	09 95       	icall
    155c:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1560:	ff 91       	pop	r31
    1562:	ef 91       	pop	r30
    1564:	bf 91       	pop	r27
    1566:	af 91       	pop	r26
    1568:	9f 91       	pop	r25
    156a:	8f 91       	pop	r24
    156c:	7f 91       	pop	r23
    156e:	6f 91       	pop	r22
    1570:	5f 91       	pop	r21
    1572:	4f 91       	pop	r20
    1574:	3f 91       	pop	r19
    1576:	2f 91       	pop	r18
    1578:	1f 91       	pop	r17
    157a:	0f 91       	pop	r16
    157c:	0f 90       	pop	r0
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	0f 90       	pop	r0
    1582:	1f 90       	pop	r1
    1584:	18 95       	reti

00001586 <__vector_17>:
    1586:	1f 92       	push	r1
    1588:	0f 92       	push	r0
    158a:	0f b6       	in	r0, 0x3f	; 63
    158c:	0f 92       	push	r0
    158e:	11 24       	eor	r1, r1
    1590:	0f 93       	push	r16
    1592:	1f 93       	push	r17
    1594:	2f 93       	push	r18
    1596:	3f 93       	push	r19
    1598:	4f 93       	push	r20
    159a:	5f 93       	push	r21
    159c:	6f 93       	push	r22
    159e:	7f 93       	push	r23
    15a0:	8f 93       	push	r24
    15a2:	9f 93       	push	r25
    15a4:	af 93       	push	r26
    15a6:	bf 93       	push	r27
    15a8:	ef 93       	push	r30
    15aa:	ff 93       	push	r31
    15ac:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    15b0:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    15b4:	ac 01       	movw	r20, r24
    15b6:	09 2e       	mov	r0, r25
    15b8:	00 0c       	add	r0, r0
    15ba:	66 0b       	sbc	r22, r22
    15bc:	77 0b       	sbc	r23, r23
    15be:	9a 01       	movw	r18, r20
    15c0:	11 27       	eor	r17, r17
    15c2:	00 27       	eor	r16, r16
    15c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	40 2b       	or	r20, r16
    15d2:	51 2b       	or	r21, r17
    15d4:	62 2b       	or	r22, r18
    15d6:	73 2b       	or	r23, r19
    15d8:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    15dc:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    15e0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    15e4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    15e8:	b0 9b       	sbis	0x16, 0	; 22
    15ea:	1a c0       	rjmp	.+52     	; 0x1620 <__vector_17+0x9a>
    15ec:	01 96       	adiw	r24, 0x01	; 1
    15ee:	09 2e       	mov	r0, r25
    15f0:	00 0c       	add	r0, r0
    15f2:	aa 0b       	sbc	r26, r26
    15f4:	bb 0b       	sbc	r27, r27
    15f6:	bc 01       	movw	r22, r24
    15f8:	55 27       	eor	r21, r21
    15fa:	44 27       	eor	r20, r20
    15fc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1600:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1604:	a0 e0       	ldi	r26, 0x00	; 0
    1606:	b0 e0       	ldi	r27, 0x00	; 0
    1608:	84 2b       	or	r24, r20
    160a:	95 2b       	or	r25, r21
    160c:	a6 2b       	or	r26, r22
    160e:	b7 2b       	or	r27, r23
    1610:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1614:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1618:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    161c:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1620:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    1624:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    1628:	30 97       	sbiw	r30, 0x00	; 0
    162a:	39 f0       	breq	.+14     	; 0x163a <__vector_17+0xb4>
    162c:	6c e0       	ldi	r22, 0x0C	; 12
    162e:	70 e0       	ldi	r23, 0x00	; 0
    1630:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    1634:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    1638:	09 95       	icall
    163a:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    163e:	ff 91       	pop	r31
    1640:	ef 91       	pop	r30
    1642:	bf 91       	pop	r27
    1644:	af 91       	pop	r26
    1646:	9f 91       	pop	r25
    1648:	8f 91       	pop	r24
    164a:	7f 91       	pop	r23
    164c:	6f 91       	pop	r22
    164e:	5f 91       	pop	r21
    1650:	4f 91       	pop	r20
    1652:	3f 91       	pop	r19
    1654:	2f 91       	pop	r18
    1656:	1f 91       	pop	r17
    1658:	0f 91       	pop	r16
    165a:	0f 90       	pop	r0
    165c:	0f be       	out	0x3f, r0	; 63
    165e:	0f 90       	pop	r0
    1660:	1f 90       	pop	r1
    1662:	18 95       	reti

00001664 <__vector_18>:
    1664:	1f 92       	push	r1
    1666:	0f 92       	push	r0
    1668:	0f b6       	in	r0, 0x3f	; 63
    166a:	0f 92       	push	r0
    166c:	11 24       	eor	r1, r1
    166e:	0f 93       	push	r16
    1670:	1f 93       	push	r17
    1672:	2f 93       	push	r18
    1674:	3f 93       	push	r19
    1676:	4f 93       	push	r20
    1678:	5f 93       	push	r21
    167a:	6f 93       	push	r22
    167c:	7f 93       	push	r23
    167e:	8f 93       	push	r24
    1680:	9f 93       	push	r25
    1682:	af 93       	push	r26
    1684:	bf 93       	push	r27
    1686:	ef 93       	push	r30
    1688:	ff 93       	push	r31
    168a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    168e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1692:	ac 01       	movw	r20, r24
    1694:	09 2e       	mov	r0, r25
    1696:	00 0c       	add	r0, r0
    1698:	66 0b       	sbc	r22, r22
    169a:	77 0b       	sbc	r23, r23
    169c:	9a 01       	movw	r18, r20
    169e:	11 27       	eor	r17, r17
    16a0:	00 27       	eor	r16, r16
    16a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16aa:	60 e0       	ldi	r22, 0x00	; 0
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	40 2b       	or	r20, r16
    16b0:	51 2b       	or	r21, r17
    16b2:	62 2b       	or	r22, r18
    16b4:	73 2b       	or	r23, r19
    16b6:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    16ba:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    16be:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    16c2:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    16c6:	b0 9b       	sbis	0x16, 0	; 22
    16c8:	1a c0       	rjmp	.+52     	; 0x16fe <__vector_18+0x9a>
    16ca:	01 96       	adiw	r24, 0x01	; 1
    16cc:	09 2e       	mov	r0, r25
    16ce:	00 0c       	add	r0, r0
    16d0:	aa 0b       	sbc	r26, r26
    16d2:	bb 0b       	sbc	r27, r27
    16d4:	bc 01       	movw	r22, r24
    16d6:	55 27       	eor	r21, r21
    16d8:	44 27       	eor	r20, r20
    16da:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16de:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16e2:	a0 e0       	ldi	r26, 0x00	; 0
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	84 2b       	or	r24, r20
    16e8:	95 2b       	or	r25, r21
    16ea:	a6 2b       	or	r26, r22
    16ec:	b7 2b       	or	r27, r23
    16ee:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    16f2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    16f6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    16fa:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    16fe:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    1702:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    1706:	30 97       	sbiw	r30, 0x00	; 0
    1708:	39 f0       	breq	.+14     	; 0x1718 <__vector_18+0xb4>
    170a:	6d e0       	ldi	r22, 0x0D	; 13
    170c:	70 e0       	ldi	r23, 0x00	; 0
    170e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    1712:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    1716:	09 95       	icall
    1718:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    171c:	ff 91       	pop	r31
    171e:	ef 91       	pop	r30
    1720:	bf 91       	pop	r27
    1722:	af 91       	pop	r26
    1724:	9f 91       	pop	r25
    1726:	8f 91       	pop	r24
    1728:	7f 91       	pop	r23
    172a:	6f 91       	pop	r22
    172c:	5f 91       	pop	r21
    172e:	4f 91       	pop	r20
    1730:	3f 91       	pop	r19
    1732:	2f 91       	pop	r18
    1734:	1f 91       	pop	r17
    1736:	0f 91       	pop	r16
    1738:	0f 90       	pop	r0
    173a:	0f be       	out	0x3f, r0	; 63
    173c:	0f 90       	pop	r0
    173e:	1f 90       	pop	r1
    1740:	18 95       	reti

00001742 <__vector_19>:
    1742:	1f 92       	push	r1
    1744:	0f 92       	push	r0
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	0f 92       	push	r0
    174a:	11 24       	eor	r1, r1
    174c:	0f 93       	push	r16
    174e:	1f 93       	push	r17
    1750:	2f 93       	push	r18
    1752:	3f 93       	push	r19
    1754:	4f 93       	push	r20
    1756:	5f 93       	push	r21
    1758:	6f 93       	push	r22
    175a:	7f 93       	push	r23
    175c:	8f 93       	push	r24
    175e:	9f 93       	push	r25
    1760:	af 93       	push	r26
    1762:	bf 93       	push	r27
    1764:	ef 93       	push	r30
    1766:	ff 93       	push	r31
    1768:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    176c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1770:	ac 01       	movw	r20, r24
    1772:	09 2e       	mov	r0, r25
    1774:	00 0c       	add	r0, r0
    1776:	66 0b       	sbc	r22, r22
    1778:	77 0b       	sbc	r23, r23
    177a:	9a 01       	movw	r18, r20
    177c:	11 27       	eor	r17, r17
    177e:	00 27       	eor	r16, r16
    1780:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1784:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1788:	60 e0       	ldi	r22, 0x00	; 0
    178a:	70 e0       	ldi	r23, 0x00	; 0
    178c:	40 2b       	or	r20, r16
    178e:	51 2b       	or	r21, r17
    1790:	62 2b       	or	r22, r18
    1792:	73 2b       	or	r23, r19
    1794:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1798:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    179c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    17a0:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    17a4:	b0 9b       	sbis	0x16, 0	; 22
    17a6:	1a c0       	rjmp	.+52     	; 0x17dc <__vector_19+0x9a>
    17a8:	01 96       	adiw	r24, 0x01	; 1
    17aa:	09 2e       	mov	r0, r25
    17ac:	00 0c       	add	r0, r0
    17ae:	aa 0b       	sbc	r26, r26
    17b0:	bb 0b       	sbc	r27, r27
    17b2:	bc 01       	movw	r22, r24
    17b4:	55 27       	eor	r21, r21
    17b6:	44 27       	eor	r20, r20
    17b8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17bc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c0:	a0 e0       	ldi	r26, 0x00	; 0
    17c2:	b0 e0       	ldi	r27, 0x00	; 0
    17c4:	84 2b       	or	r24, r20
    17c6:	95 2b       	or	r25, r21
    17c8:	a6 2b       	or	r26, r22
    17ca:	b7 2b       	or	r27, r23
    17cc:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    17d0:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    17d4:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    17d8:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    17dc:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    17e0:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    17e4:	30 97       	sbiw	r30, 0x00	; 0
    17e6:	39 f0       	breq	.+14     	; 0x17f6 <__vector_19+0xb4>
    17e8:	6e e0       	ldi	r22, 0x0E	; 14
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    17f0:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    17f4:	09 95       	icall
    17f6:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    17fa:	ff 91       	pop	r31
    17fc:	ef 91       	pop	r30
    17fe:	bf 91       	pop	r27
    1800:	af 91       	pop	r26
    1802:	9f 91       	pop	r25
    1804:	8f 91       	pop	r24
    1806:	7f 91       	pop	r23
    1808:	6f 91       	pop	r22
    180a:	5f 91       	pop	r21
    180c:	4f 91       	pop	r20
    180e:	3f 91       	pop	r19
    1810:	2f 91       	pop	r18
    1812:	1f 91       	pop	r17
    1814:	0f 91       	pop	r16
    1816:	0f 90       	pop	r0
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	0f 90       	pop	r0
    181c:	1f 90       	pop	r1
    181e:	18 95       	reti

00001820 <__vector_20>:
    1820:	1f 92       	push	r1
    1822:	0f 92       	push	r0
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	0f 92       	push	r0
    1828:	11 24       	eor	r1, r1
    182a:	0f 93       	push	r16
    182c:	1f 93       	push	r17
    182e:	2f 93       	push	r18
    1830:	3f 93       	push	r19
    1832:	4f 93       	push	r20
    1834:	5f 93       	push	r21
    1836:	6f 93       	push	r22
    1838:	7f 93       	push	r23
    183a:	8f 93       	push	r24
    183c:	9f 93       	push	r25
    183e:	af 93       	push	r26
    1840:	bf 93       	push	r27
    1842:	ef 93       	push	r30
    1844:	ff 93       	push	r31
    1846:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    184a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    184e:	ac 01       	movw	r20, r24
    1850:	09 2e       	mov	r0, r25
    1852:	00 0c       	add	r0, r0
    1854:	66 0b       	sbc	r22, r22
    1856:	77 0b       	sbc	r23, r23
    1858:	9a 01       	movw	r18, r20
    185a:	11 27       	eor	r17, r17
    185c:	00 27       	eor	r16, r16
    185e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1862:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1866:	60 e0       	ldi	r22, 0x00	; 0
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	40 2b       	or	r20, r16
    186c:	51 2b       	or	r21, r17
    186e:	62 2b       	or	r22, r18
    1870:	73 2b       	or	r23, r19
    1872:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1876:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    187a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    187e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1882:	b0 9b       	sbis	0x16, 0	; 22
    1884:	1a c0       	rjmp	.+52     	; 0x18ba <__vector_20+0x9a>
    1886:	01 96       	adiw	r24, 0x01	; 1
    1888:	09 2e       	mov	r0, r25
    188a:	00 0c       	add	r0, r0
    188c:	aa 0b       	sbc	r26, r26
    188e:	bb 0b       	sbc	r27, r27
    1890:	bc 01       	movw	r22, r24
    1892:	55 27       	eor	r21, r21
    1894:	44 27       	eor	r20, r20
    1896:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    189a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    189e:	a0 e0       	ldi	r26, 0x00	; 0
    18a0:	b0 e0       	ldi	r27, 0x00	; 0
    18a2:	84 2b       	or	r24, r20
    18a4:	95 2b       	or	r25, r21
    18a6:	a6 2b       	or	r26, r22
    18a8:	b7 2b       	or	r27, r23
    18aa:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    18ae:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    18b2:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    18b6:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    18ba:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    18be:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    18c2:	30 97       	sbiw	r30, 0x00	; 0
    18c4:	39 f0       	breq	.+14     	; 0x18d4 <__vector_20+0xb4>
    18c6:	6f e0       	ldi	r22, 0x0F	; 15
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    18ce:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    18d2:	09 95       	icall
    18d4:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    18d8:	ff 91       	pop	r31
    18da:	ef 91       	pop	r30
    18dc:	bf 91       	pop	r27
    18de:	af 91       	pop	r26
    18e0:	9f 91       	pop	r25
    18e2:	8f 91       	pop	r24
    18e4:	7f 91       	pop	r23
    18e6:	6f 91       	pop	r22
    18e8:	5f 91       	pop	r21
    18ea:	4f 91       	pop	r20
    18ec:	3f 91       	pop	r19
    18ee:	2f 91       	pop	r18
    18f0:	1f 91       	pop	r17
    18f2:	0f 91       	pop	r16
    18f4:	0f 90       	pop	r0
    18f6:	0f be       	out	0x3f, r0	; 63
    18f8:	0f 90       	pop	r0
    18fa:	1f 90       	pop	r1
    18fc:	18 95       	reti

000018fe <__vector_21>:
    18fe:	1f 92       	push	r1
    1900:	0f 92       	push	r0
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	0f 92       	push	r0
    1906:	11 24       	eor	r1, r1
    1908:	0f 93       	push	r16
    190a:	1f 93       	push	r17
    190c:	2f 93       	push	r18
    190e:	3f 93       	push	r19
    1910:	4f 93       	push	r20
    1912:	5f 93       	push	r21
    1914:	6f 93       	push	r22
    1916:	7f 93       	push	r23
    1918:	8f 93       	push	r24
    191a:	9f 93       	push	r25
    191c:	af 93       	push	r26
    191e:	bf 93       	push	r27
    1920:	ef 93       	push	r30
    1922:	ff 93       	push	r31
    1924:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1928:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    192c:	ac 01       	movw	r20, r24
    192e:	09 2e       	mov	r0, r25
    1930:	00 0c       	add	r0, r0
    1932:	66 0b       	sbc	r22, r22
    1934:	77 0b       	sbc	r23, r23
    1936:	9a 01       	movw	r18, r20
    1938:	11 27       	eor	r17, r17
    193a:	00 27       	eor	r16, r16
    193c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1940:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1944:	60 e0       	ldi	r22, 0x00	; 0
    1946:	70 e0       	ldi	r23, 0x00	; 0
    1948:	40 2b       	or	r20, r16
    194a:	51 2b       	or	r21, r17
    194c:	62 2b       	or	r22, r18
    194e:	73 2b       	or	r23, r19
    1950:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1954:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1958:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    195c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1960:	b0 9b       	sbis	0x16, 0	; 22
    1962:	1a c0       	rjmp	.+52     	; 0x1998 <__vector_21+0x9a>
    1964:	01 96       	adiw	r24, 0x01	; 1
    1966:	09 2e       	mov	r0, r25
    1968:	00 0c       	add	r0, r0
    196a:	aa 0b       	sbc	r26, r26
    196c:	bb 0b       	sbc	r27, r27
    196e:	bc 01       	movw	r22, r24
    1970:	55 27       	eor	r21, r21
    1972:	44 27       	eor	r20, r20
    1974:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1978:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    197c:	a0 e0       	ldi	r26, 0x00	; 0
    197e:	b0 e0       	ldi	r27, 0x00	; 0
    1980:	84 2b       	or	r24, r20
    1982:	95 2b       	or	r25, r21
    1984:	a6 2b       	or	r26, r22
    1986:	b7 2b       	or	r27, r23
    1988:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    198c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1990:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1994:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1998:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    199c:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    19a0:	30 97       	sbiw	r30, 0x00	; 0
    19a2:	39 f0       	breq	.+14     	; 0x19b2 <__vector_21+0xb4>
    19a4:	60 e1       	ldi	r22, 0x10	; 16
    19a6:	70 e0       	ldi	r23, 0x00	; 0
    19a8:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    19ac:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    19b0:	09 95       	icall
    19b2:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    19b6:	ff 91       	pop	r31
    19b8:	ef 91       	pop	r30
    19ba:	bf 91       	pop	r27
    19bc:	af 91       	pop	r26
    19be:	9f 91       	pop	r25
    19c0:	8f 91       	pop	r24
    19c2:	7f 91       	pop	r23
    19c4:	6f 91       	pop	r22
    19c6:	5f 91       	pop	r21
    19c8:	4f 91       	pop	r20
    19ca:	3f 91       	pop	r19
    19cc:	2f 91       	pop	r18
    19ce:	1f 91       	pop	r17
    19d0:	0f 91       	pop	r16
    19d2:	0f 90       	pop	r0
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	0f 90       	pop	r0
    19d8:	1f 90       	pop	r1
    19da:	18 95       	reti

000019dc <__vector_22>:
    19dc:	1f 92       	push	r1
    19de:	0f 92       	push	r0
    19e0:	0f b6       	in	r0, 0x3f	; 63
    19e2:	0f 92       	push	r0
    19e4:	11 24       	eor	r1, r1
    19e6:	0f 93       	push	r16
    19e8:	1f 93       	push	r17
    19ea:	2f 93       	push	r18
    19ec:	3f 93       	push	r19
    19ee:	4f 93       	push	r20
    19f0:	5f 93       	push	r21
    19f2:	6f 93       	push	r22
    19f4:	7f 93       	push	r23
    19f6:	8f 93       	push	r24
    19f8:	9f 93       	push	r25
    19fa:	af 93       	push	r26
    19fc:	bf 93       	push	r27
    19fe:	ef 93       	push	r30
    1a00:	ff 93       	push	r31
    1a02:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1a06:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1a0a:	ac 01       	movw	r20, r24
    1a0c:	09 2e       	mov	r0, r25
    1a0e:	00 0c       	add	r0, r0
    1a10:	66 0b       	sbc	r22, r22
    1a12:	77 0b       	sbc	r23, r23
    1a14:	9a 01       	movw	r18, r20
    1a16:	11 27       	eor	r17, r17
    1a18:	00 27       	eor	r16, r16
    1a1a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a1e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a22:	60 e0       	ldi	r22, 0x00	; 0
    1a24:	70 e0       	ldi	r23, 0x00	; 0
    1a26:	40 2b       	or	r20, r16
    1a28:	51 2b       	or	r21, r17
    1a2a:	62 2b       	or	r22, r18
    1a2c:	73 2b       	or	r23, r19
    1a2e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1a32:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1a36:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1a3a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1a3e:	b0 9b       	sbis	0x16, 0	; 22
    1a40:	1a c0       	rjmp	.+52     	; 0x1a76 <__vector_22+0x9a>
    1a42:	01 96       	adiw	r24, 0x01	; 1
    1a44:	09 2e       	mov	r0, r25
    1a46:	00 0c       	add	r0, r0
    1a48:	aa 0b       	sbc	r26, r26
    1a4a:	bb 0b       	sbc	r27, r27
    1a4c:	bc 01       	movw	r22, r24
    1a4e:	55 27       	eor	r21, r21
    1a50:	44 27       	eor	r20, r20
    1a52:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a56:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a5a:	a0 e0       	ldi	r26, 0x00	; 0
    1a5c:	b0 e0       	ldi	r27, 0x00	; 0
    1a5e:	84 2b       	or	r24, r20
    1a60:	95 2b       	or	r25, r21
    1a62:	a6 2b       	or	r26, r22
    1a64:	b7 2b       	or	r27, r23
    1a66:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1a6a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1a6e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1a72:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1a76:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    1a7a:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1a7e:	30 97       	sbiw	r30, 0x00	; 0
    1a80:	39 f0       	breq	.+14     	; 0x1a90 <__vector_22+0xb4>
    1a82:	61 e1       	ldi	r22, 0x11	; 17
    1a84:	70 e0       	ldi	r23, 0x00	; 0
    1a86:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    1a8a:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    1a8e:	09 95       	icall
    1a90:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1a94:	ff 91       	pop	r31
    1a96:	ef 91       	pop	r30
    1a98:	bf 91       	pop	r27
    1a9a:	af 91       	pop	r26
    1a9c:	9f 91       	pop	r25
    1a9e:	8f 91       	pop	r24
    1aa0:	7f 91       	pop	r23
    1aa2:	6f 91       	pop	r22
    1aa4:	5f 91       	pop	r21
    1aa6:	4f 91       	pop	r20
    1aa8:	3f 91       	pop	r19
    1aaa:	2f 91       	pop	r18
    1aac:	1f 91       	pop	r17
    1aae:	0f 91       	pop	r16
    1ab0:	0f 90       	pop	r0
    1ab2:	0f be       	out	0x3f, r0	; 63
    1ab4:	0f 90       	pop	r0
    1ab6:	1f 90       	pop	r1
    1ab8:	18 95       	reti

00001aba <idle>:
    1aba:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1abe:	78 94       	sei
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	83 bf       	out	0x33, r24	; 51
    1ac4:	88 95       	sleep
    1ac6:	fc cf       	rjmp	.-8      	; 0x1ac0 <idle+0x6>

00001ac8 <__vector_9>:
    1ac8:	1f 92       	push	r1
    1aca:	0f 92       	push	r0
    1acc:	0f b6       	in	r0, 0x3f	; 63
    1ace:	0f 92       	push	r0
    1ad0:	11 24       	eor	r1, r1
    1ad2:	2f 93       	push	r18
    1ad4:	3f 93       	push	r19
    1ad6:	4f 93       	push	r20
    1ad8:	5f 93       	push	r21
    1ada:	6f 93       	push	r22
    1adc:	7f 93       	push	r23
    1ade:	8f 93       	push	r24
    1ae0:	9f 93       	push	r25
    1ae2:	ef 93       	push	r30
    1ae4:	ff 93       	push	r31
    1ae6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1aea:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1aee:	01 96       	adiw	r24, 0x01	; 1
    1af0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
    1af4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
    1af8:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1afc:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1b00:	30 97       	sbiw	r30, 0x00	; 0
    1b02:	01 f1       	breq	.+64     	; 0x1b44 <__vector_9+0x7c>
    1b04:	42 81       	ldd	r20, Z+2	; 0x02
    1b06:	53 81       	ldd	r21, Z+3	; 0x03
    1b08:	64 81       	ldd	r22, Z+4	; 0x04
    1b0a:	75 81       	ldd	r23, Z+5	; 0x05
    1b0c:	86 17       	cp	r24, r22
    1b0e:	97 07       	cpc	r25, r23
    1b10:	c9 f4       	brne	.+50     	; 0x1b44 <__vector_9+0x7c>
    1b12:	ca 01       	movw	r24, r20
    1b14:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b18:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b1c:	42 1b       	sub	r20, r18
    1b1e:	53 0b       	sbc	r21, r19
    1b20:	41 30       	cpi	r20, 0x01	; 1
    1b22:	51 05       	cpc	r21, r1
    1b24:	29 f4       	brne	.+10     	; 0x1b30 <__vector_9+0x68>
    1b26:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b2a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b2e:	01 96       	adiw	r24, 0x01	; 1
    1b30:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b34:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b38:	ef e6       	ldi	r30, 0x6F	; 111
    1b3a:	f0 e0       	ldi	r31, 0x00	; 0
    1b3c:	80 81       	ld	r24, Z
    1b3e:	82 60       	ori	r24, 0x02	; 2
    1b40:	80 83       	st	Z, r24
    1b42:	05 c0       	rjmp	.+10     	; 0x1b4e <__vector_9+0x86>
    1b44:	ef e6       	ldi	r30, 0x6F	; 111
    1b46:	f0 e0       	ldi	r31, 0x00	; 0
    1b48:	80 81       	ld	r24, Z
    1b4a:	8d 7f       	andi	r24, 0xFD	; 253
    1b4c:	80 83       	st	Z, r24
    1b4e:	ff 91       	pop	r31
    1b50:	ef 91       	pop	r30
    1b52:	9f 91       	pop	r25
    1b54:	8f 91       	pop	r24
    1b56:	7f 91       	pop	r23
    1b58:	6f 91       	pop	r22
    1b5a:	5f 91       	pop	r21
    1b5c:	4f 91       	pop	r20
    1b5e:	3f 91       	pop	r19
    1b60:	2f 91       	pop	r18
    1b62:	0f 90       	pop	r0
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	0f 90       	pop	r0
    1b68:	1f 90       	pop	r1
    1b6a:	18 95       	reti

00001b6c <__vector_7>:
    1b6c:	1f 92       	push	r1
    1b6e:	0f 92       	push	r0
    1b70:	0f b6       	in	r0, 0x3f	; 63
    1b72:	0f 92       	push	r0
    1b74:	11 24       	eor	r1, r1
    1b76:	cf 92       	push	r12
    1b78:	df 92       	push	r13
    1b7a:	ef 92       	push	r14
    1b7c:	ff 92       	push	r15
    1b7e:	2f 93       	push	r18
    1b80:	3f 93       	push	r19
    1b82:	4f 93       	push	r20
    1b84:	5f 93       	push	r21
    1b86:	6f 93       	push	r22
    1b88:	7f 93       	push	r23
    1b8a:	8f 93       	push	r24
    1b8c:	9f 93       	push	r25
    1b8e:	af 93       	push	r26
    1b90:	bf 93       	push	r27
    1b92:	ef 93       	push	r30
    1b94:	ff 93       	push	r31
    1b96:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1b9a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1b9e:	6c 01       	movw	r12, r24
    1ba0:	09 2e       	mov	r0, r25
    1ba2:	00 0c       	add	r0, r0
    1ba4:	ee 08       	sbc	r14, r14
    1ba6:	ff 08       	sbc	r15, r15
    1ba8:	76 01       	movw	r14, r12
    1baa:	dd 24       	eor	r13, r13
    1bac:	cc 24       	eor	r12, r12
    1bae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bb2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bb6:	60 e0       	ldi	r22, 0x00	; 0
    1bb8:	70 e0       	ldi	r23, 0x00	; 0
    1bba:	c4 2a       	or	r12, r20
    1bbc:	d5 2a       	or	r13, r21
    1bbe:	e6 2a       	or	r14, r22
    1bc0:	f7 2a       	or	r15, r23
    1bc2:	b0 9b       	sbis	0x16, 0	; 22
    1bc4:	1e c0       	rjmp	.+60     	; 0x1c02 <__vector_7+0x96>
    1bc6:	6c 01       	movw	r12, r24
    1bc8:	2f ef       	ldi	r18, 0xFF	; 255
    1bca:	c2 1a       	sub	r12, r18
    1bcc:	d2 0a       	sbc	r13, r18
    1bce:	0d 2c       	mov	r0, r13
    1bd0:	00 0c       	add	r0, r0
    1bd2:	ee 08       	sbc	r14, r14
    1bd4:	ff 08       	sbc	r15, r15
    1bd6:	d6 01       	movw	r26, r12
    1bd8:	99 27       	eor	r25, r25
    1bda:	88 27       	eor	r24, r24
    1bdc:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1be0:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1be4:	e1 2c       	mov	r14, r1
    1be6:	f1 2c       	mov	r15, r1
    1be8:	c8 2a       	or	r12, r24
    1bea:	d9 2a       	or	r13, r25
    1bec:	ea 2a       	or	r14, r26
    1bee:	fb 2a       	or	r15, r27
    1bf0:	08 c0       	rjmp	.+16     	; 0x1c02 <__vector_7+0x96>
    1bf2:	8e e3       	ldi	r24, 0x3E	; 62
    1bf4:	91 e0       	ldi	r25, 0x01	; 1
    1bf6:	0e 94 26 05 	call	0xa4c	; 0xa4c <dequeue>
    1bfa:	60 e4       	ldi	r22, 0x40	; 64
    1bfc:	71 e0       	ldi	r23, 0x01	; 1
    1bfe:	0e 94 c4 04 	call	0x988	; 0x988 <enqueueByDeadline>
    1c02:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1c06:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1c0a:	30 97       	sbiw	r30, 0x00	; 0
    1c0c:	69 f0       	breq	.+26     	; 0x1c28 <__vector_7+0xbc>
    1c0e:	82 81       	ldd	r24, Z+2	; 0x02
    1c10:	93 81       	ldd	r25, Z+3	; 0x03
    1c12:	a4 81       	ldd	r26, Z+4	; 0x04
    1c14:	b5 81       	ldd	r27, Z+5	; 0x05
    1c16:	8c 19       	sub	r24, r12
    1c18:	9d 09       	sbc	r25, r13
    1c1a:	ae 09       	sbc	r26, r14
    1c1c:	bf 09       	sbc	r27, r15
    1c1e:	18 16       	cp	r1, r24
    1c20:	19 06       	cpc	r1, r25
    1c22:	1a 06       	cpc	r1, r26
    1c24:	1b 06       	cpc	r1, r27
    1c26:	2c f7       	brge	.-54     	; 0x1bf2 <__vector_7+0x86>
    1c28:	30 97       	sbiw	r30, 0x00	; 0
    1c2a:	21 f1       	breq	.+72     	; 0x1c74 <__vector_7+0x108>
    1c2c:	82 81       	ldd	r24, Z+2	; 0x02
    1c2e:	93 81       	ldd	r25, Z+3	; 0x03
    1c30:	a4 81       	ldd	r26, Z+4	; 0x04
    1c32:	b5 81       	ldd	r27, Z+5	; 0x05
    1c34:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1c38:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1c3c:	2a 17       	cp	r18, r26
    1c3e:	3b 07       	cpc	r19, r27
    1c40:	c9 f4       	brne	.+50     	; 0x1c74 <__vector_7+0x108>
    1c42:	9c 01       	movw	r18, r24
    1c44:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c48:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c4c:	84 1b       	sub	r24, r20
    1c4e:	95 0b       	sbc	r25, r21
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	31 f4       	brne	.+12     	; 0x1c60 <__vector_7+0xf4>
    1c54:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c58:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c5c:	2f 5f       	subi	r18, 0xFF	; 255
    1c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c60:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c64:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c68:	ef e6       	ldi	r30, 0x6F	; 111
    1c6a:	f0 e0       	ldi	r31, 0x00	; 0
    1c6c:	80 81       	ld	r24, Z
    1c6e:	82 60       	ori	r24, 0x02	; 2
    1c70:	80 83       	st	Z, r24
    1c72:	05 c0       	rjmp	.+10     	; 0x1c7e <__vector_7+0x112>
    1c74:	ef e6       	ldi	r30, 0x6F	; 111
    1c76:	f0 e0       	ldi	r31, 0x00	; 0
    1c78:	80 81       	ld	r24, Z
    1c7a:	8d 7f       	andi	r24, 0xFD	; 253
    1c7c:	80 83       	st	Z, r24
    1c7e:	0e 94 5b 05 	call	0xab6	; 0xab6 <schedule>
    1c82:	ff 91       	pop	r31
    1c84:	ef 91       	pop	r30
    1c86:	bf 91       	pop	r27
    1c88:	af 91       	pop	r26
    1c8a:	9f 91       	pop	r25
    1c8c:	8f 91       	pop	r24
    1c8e:	7f 91       	pop	r23
    1c90:	6f 91       	pop	r22
    1c92:	5f 91       	pop	r21
    1c94:	4f 91       	pop	r20
    1c96:	3f 91       	pop	r19
    1c98:	2f 91       	pop	r18
    1c9a:	ff 90       	pop	r15
    1c9c:	ef 90       	pop	r14
    1c9e:	df 90       	pop	r13
    1ca0:	cf 90       	pop	r12
    1ca2:	0f 90       	pop	r0
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	0f 90       	pop	r0
    1ca8:	1f 90       	pop	r1
    1caa:	18 95       	reti

00001cac <async>:
    1cac:	3f 92       	push	r3
    1cae:	4f 92       	push	r4
    1cb0:	5f 92       	push	r5
    1cb2:	6f 92       	push	r6
    1cb4:	7f 92       	push	r7
    1cb6:	8f 92       	push	r8
    1cb8:	9f 92       	push	r9
    1cba:	af 92       	push	r10
    1cbc:	bf 92       	push	r11
    1cbe:	cf 92       	push	r12
    1cc0:	df 92       	push	r13
    1cc2:	ef 92       	push	r14
    1cc4:	ff 92       	push	r15
    1cc6:	0f 93       	push	r16
    1cc8:	1f 93       	push	r17
    1cca:	cf 93       	push	r28
    1ccc:	df 93       	push	r29
    1cce:	2b 01       	movw	r4, r22
    1cd0:	3c 01       	movw	r6, r24
    1cd2:	49 01       	movw	r8, r18
    1cd4:	5a 01       	movw	r10, r20
    1cd6:	8f b7       	in	r24, 0x3f	; 63
    1cd8:	80 78       	andi	r24, 0x80	; 128
    1cda:	38 2e       	mov	r3, r24
    1cdc:	f8 94       	cli
    1cde:	86 e0       	ldi	r24, 0x06	; 6
    1ce0:	91 e0       	ldi	r25, 0x01	; 1
    1ce2:	0e 94 26 05 	call	0xa4c	; 0xa4c <dequeue>
    1ce6:	ec 01       	movw	r28, r24
    1ce8:	1b 87       	std	Y+11, r17	; 0x0b
    1cea:	0a 87       	std	Y+10, r16	; 0x0a
    1cec:	fd 86       	std	Y+13, r15	; 0x0d
    1cee:	ec 86       	std	Y+12, r14	; 0x0c
    1cf0:	df 86       	std	Y+15, r13	; 0x0f
    1cf2:	ce 86       	std	Y+14, r12	; 0x0e
    1cf4:	33 20       	and	r3, r3
    1cf6:	61 f0       	breq	.+24     	; 0x1d10 <async+0x64>
    1cf8:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cfc:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d00:	02 80       	ldd	r0, Z+2	; 0x02
    1d02:	f3 81       	ldd	r31, Z+3	; 0x03
    1d04:	e0 2d       	mov	r30, r0
    1d06:	82 81       	ldd	r24, Z+2	; 0x02
    1d08:	93 81       	ldd	r25, Z+3	; 0x03
    1d0a:	a4 81       	ldd	r26, Z+4	; 0x04
    1d0c:	b5 81       	ldd	r27, Z+5	; 0x05
    1d0e:	08 c0       	rjmp	.+16     	; 0x1d20 <async+0x74>
    1d10:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <timestamp>
    1d14:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <timestamp+0x1>
    1d18:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <timestamp+0x2>
    1d1c:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <timestamp+0x3>
    1d20:	48 0e       	add	r4, r24
    1d22:	59 1e       	adc	r5, r25
    1d24:	6a 1e       	adc	r6, r26
    1d26:	7b 1e       	adc	r7, r27
    1d28:	4a 82       	std	Y+2, r4	; 0x02
    1d2a:	5b 82       	std	Y+3, r5	; 0x03
    1d2c:	6c 82       	std	Y+4, r6	; 0x04
    1d2e:	7d 82       	std	Y+5, r7	; 0x05
    1d30:	18 14       	cp	r1, r8
    1d32:	19 04       	cpc	r1, r9
    1d34:	1a 04       	cpc	r1, r10
    1d36:	1b 04       	cpc	r1, r11
    1d38:	44 f0       	brlt	.+16     	; 0x1d4a <async+0x9e>
    1d3a:	0f 2e       	mov	r0, r31
    1d3c:	88 24       	eor	r8, r8
    1d3e:	8a 94       	dec	r8
    1d40:	98 2c       	mov	r9, r8
    1d42:	a8 2c       	mov	r10, r8
    1d44:	ff e7       	ldi	r31, 0x7F	; 127
    1d46:	bf 2e       	mov	r11, r31
    1d48:	f0 2d       	mov	r31, r0
    1d4a:	84 0c       	add	r8, r4
    1d4c:	95 1c       	adc	r9, r5
    1d4e:	a6 1c       	adc	r10, r6
    1d50:	b7 1c       	adc	r11, r7
    1d52:	8e 82       	std	Y+6, r8	; 0x06
    1d54:	9f 82       	std	Y+7, r9	; 0x07
    1d56:	a8 86       	std	Y+8, r10	; 0x08
    1d58:	b9 86       	std	Y+9, r11	; 0x09
    1d5a:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1d5e:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1d62:	c9 01       	movw	r24, r18
    1d64:	03 2e       	mov	r0, r19
    1d66:	00 0c       	add	r0, r0
    1d68:	aa 0b       	sbc	r26, r26
    1d6a:	bb 0b       	sbc	r27, r27
    1d6c:	dc 01       	movw	r26, r24
    1d6e:	99 27       	eor	r25, r25
    1d70:	88 27       	eor	r24, r24
    1d72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d7a:	60 e0       	ldi	r22, 0x00	; 0
    1d7c:	70 e0       	ldi	r23, 0x00	; 0
    1d7e:	84 2b       	or	r24, r20
    1d80:	95 2b       	or	r25, r21
    1d82:	a6 2b       	or	r26, r22
    1d84:	b7 2b       	or	r27, r23
    1d86:	b0 9b       	sbis	0x16, 0	; 22
    1d88:	13 c0       	rjmp	.+38     	; 0x1db0 <async+0x104>
    1d8a:	c9 01       	movw	r24, r18
    1d8c:	01 96       	adiw	r24, 0x01	; 1
    1d8e:	09 2e       	mov	r0, r25
    1d90:	00 0c       	add	r0, r0
    1d92:	aa 0b       	sbc	r26, r26
    1d94:	bb 0b       	sbc	r27, r27
    1d96:	dc 01       	movw	r26, r24
    1d98:	99 27       	eor	r25, r25
    1d9a:	88 27       	eor	r24, r24
    1d9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1da0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1da4:	60 e0       	ldi	r22, 0x00	; 0
    1da6:	70 e0       	ldi	r23, 0x00	; 0
    1da8:	84 2b       	or	r24, r20
    1daa:	95 2b       	or	r25, r21
    1dac:	a6 2b       	or	r26, r22
    1dae:	b7 2b       	or	r27, r23
    1db0:	48 1a       	sub	r4, r24
    1db2:	59 0a       	sbc	r5, r25
    1db4:	6a 0a       	sbc	r6, r26
    1db6:	7b 0a       	sbc	r7, r27
    1db8:	14 14       	cp	r1, r4
    1dba:	15 04       	cpc	r1, r5
    1dbc:	16 04       	cpc	r1, r6
    1dbe:	17 04       	cpc	r1, r7
    1dc0:	ac f5       	brge	.+106    	; 0x1e2c <async+0x180>
    1dc2:	6e e3       	ldi	r22, 0x3E	; 62
    1dc4:	71 e0       	ldi	r23, 0x01	; 1
    1dc6:	ce 01       	movw	r24, r28
    1dc8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <enqueueByBaseline>
    1dcc:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1dd0:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1dd4:	30 97       	sbiw	r30, 0x00	; 0
    1dd6:	21 f1       	breq	.+72     	; 0x1e20 <async+0x174>
    1dd8:	82 81       	ldd	r24, Z+2	; 0x02
    1dda:	93 81       	ldd	r25, Z+3	; 0x03
    1ddc:	a4 81       	ldd	r26, Z+4	; 0x04
    1dde:	b5 81       	ldd	r27, Z+5	; 0x05
    1de0:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1de4:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1de8:	2a 17       	cp	r18, r26
    1dea:	3b 07       	cpc	r19, r27
    1dec:	c9 f4       	brne	.+50     	; 0x1e20 <async+0x174>
    1dee:	9c 01       	movw	r18, r24
    1df0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1df4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1df8:	84 1b       	sub	r24, r20
    1dfa:	95 0b       	sbc	r25, r21
    1dfc:	01 97       	sbiw	r24, 0x01	; 1
    1dfe:	31 f4       	brne	.+12     	; 0x1e0c <async+0x160>
    1e00:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e04:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e08:	2f 5f       	subi	r18, 0xFF	; 255
    1e0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e0c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e10:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e14:	ef e6       	ldi	r30, 0x6F	; 111
    1e16:	f0 e0       	ldi	r31, 0x00	; 0
    1e18:	80 81       	ld	r24, Z
    1e1a:	82 60       	ori	r24, 0x02	; 2
    1e1c:	80 83       	st	Z, r24
    1e1e:	39 c0       	rjmp	.+114    	; 0x1e92 <async+0x1e6>
    1e20:	ef e6       	ldi	r30, 0x6F	; 111
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	8d 7f       	andi	r24, 0xFD	; 253
    1e28:	80 83       	st	Z, r24
    1e2a:	33 c0       	rjmp	.+102    	; 0x1e92 <async+0x1e6>
    1e2c:	60 e4       	ldi	r22, 0x40	; 64
    1e2e:	71 e0       	ldi	r23, 0x01	; 1
    1e30:	ce 01       	movw	r24, r28
    1e32:	0e 94 c4 04 	call	0x988	; 0x988 <enqueueByDeadline>
    1e36:	33 20       	and	r3, r3
    1e38:	61 f1       	breq	.+88     	; 0x1e92 <async+0x1e6>
    1e3a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e3e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e42:	89 2b       	or	r24, r25
    1e44:	31 f1       	breq	.+76     	; 0x1e92 <async+0x1e6>
    1e46:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    1e4a:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    1e4e:	86 81       	ldd	r24, Z+6	; 0x06
    1e50:	97 81       	ldd	r25, Z+7	; 0x07
    1e52:	a0 85       	ldd	r26, Z+8	; 0x08
    1e54:	b1 85       	ldd	r27, Z+9	; 0x09
    1e56:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1e5a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1e5e:	02 80       	ldd	r0, Z+2	; 0x02
    1e60:	f3 81       	ldd	r31, Z+3	; 0x03
    1e62:	e0 2d       	mov	r30, r0
    1e64:	46 81       	ldd	r20, Z+6	; 0x06
    1e66:	57 81       	ldd	r21, Z+7	; 0x07
    1e68:	60 85       	ldd	r22, Z+8	; 0x08
    1e6a:	71 85       	ldd	r23, Z+9	; 0x09
    1e6c:	84 1b       	sub	r24, r20
    1e6e:	95 0b       	sbc	r25, r21
    1e70:	a6 0b       	sbc	r26, r22
    1e72:	b7 0b       	sbc	r27, r23
    1e74:	72 f4       	brpl	.+28     	; 0x1e92 <async+0x1e6>
    1e76:	84 e0       	ldi	r24, 0x04	; 4
    1e78:	91 e0       	ldi	r25, 0x01	; 1
    1e7a:	0e 94 51 05 	call	0xaa2	; 0xaa2 <pop>
    1e7e:	62 e0       	ldi	r22, 0x02	; 2
    1e80:	71 e0       	ldi	r23, 0x01	; 1
    1e82:	0e 94 47 05 	call	0xa8e	; 0xa8e <push>
    1e86:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1e8a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1e8e:	0e 94 a4 04 	call	0x948	; 0x948 <dispatch>
    1e92:	33 20       	and	r3, r3
    1e94:	09 f0       	breq	.+2      	; 0x1e98 <async+0x1ec>
    1e96:	78 94       	sei
    1e98:	ce 01       	movw	r24, r28
    1e9a:	df 91       	pop	r29
    1e9c:	cf 91       	pop	r28
    1e9e:	1f 91       	pop	r17
    1ea0:	0f 91       	pop	r16
    1ea2:	ff 90       	pop	r15
    1ea4:	ef 90       	pop	r14
    1ea6:	df 90       	pop	r13
    1ea8:	cf 90       	pop	r12
    1eaa:	bf 90       	pop	r11
    1eac:	af 90       	pop	r10
    1eae:	9f 90       	pop	r9
    1eb0:	8f 90       	pop	r8
    1eb2:	7f 90       	pop	r7
    1eb4:	6f 90       	pop	r6
    1eb6:	5f 90       	pop	r5
    1eb8:	4f 90       	pop	r4
    1eba:	3f 90       	pop	r3
    1ebc:	08 95       	ret

00001ebe <sync>:
    1ebe:	cf 92       	push	r12
    1ec0:	df 92       	push	r13
    1ec2:	ef 92       	push	r14
    1ec4:	ff 92       	push	r15
    1ec6:	0f 93       	push	r16
    1ec8:	1f 93       	push	r17
    1eca:	cf 93       	push	r28
    1ecc:	df 93       	push	r29
    1ece:	ec 01       	movw	r28, r24
    1ed0:	7b 01       	movw	r14, r22
    1ed2:	6a 01       	movw	r12, r20
    1ed4:	1f b7       	in	r17, 0x3f	; 63
    1ed6:	10 78       	andi	r17, 0x80	; 128
    1ed8:	f8 94       	cli
    1eda:	a8 81       	ld	r26, Y
    1edc:	b9 81       	ldd	r27, Y+1	; 0x01
    1ede:	10 97       	sbiw	r26, 0x00	; 0
    1ee0:	19 f4       	brne	.+6      	; 0x1ee8 <sync+0x2a>
    1ee2:	35 c0       	rjmp	.+106    	; 0x1f4e <sync+0x90>
    1ee4:	a0 81       	ld	r26, Z
    1ee6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ee8:	14 96       	adiw	r26, 0x04	; 4
    1eea:	ed 91       	ld	r30, X+
    1eec:	fc 91       	ld	r31, X
    1eee:	15 97       	sbiw	r26, 0x05	; 5
    1ef0:	30 97       	sbiw	r30, 0x00	; 0
    1ef2:	c1 f7       	brne	.-16     	; 0x1ee4 <sync+0x26>
    1ef4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ef8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1efc:	a2 17       	cp	r26, r18
    1efe:	b3 07       	cpc	r27, r19
    1f00:	11 f0       	breq	.+4      	; 0x1f06 <sync+0x48>
    1f02:	11 11       	cpse	r17, r1
    1f04:	07 c0       	rjmp	.+14     	; 0x1f14 <sync+0x56>
    1f06:	11 23       	and	r17, r17
    1f08:	09 f4       	brne	.+2      	; 0x1f0c <sync+0x4e>
    1f0a:	4a c0       	rjmp	.+148    	; 0x1fa0 <sync+0xe2>
    1f0c:	78 94       	sei
    1f0e:	8f ef       	ldi	r24, 0xFF	; 255
    1f10:	9f ef       	ldi	r25, 0xFF	; 255
    1f12:	4e c0       	rjmp	.+156    	; 0x1fb0 <sync+0xf2>
    1f14:	8a 81       	ldd	r24, Y+2	; 0x02
    1f16:	9b 81       	ldd	r25, Y+3	; 0x03
    1f18:	00 97       	sbiw	r24, 0x00	; 0
    1f1a:	19 f0       	breq	.+6      	; 0x1f22 <sync+0x64>
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	15 82       	std	Z+5, r1	; 0x05
    1f20:	14 82       	std	Z+4, r1	; 0x04
    1f22:	3b 83       	std	Y+3, r19	; 0x03
    1f24:	2a 83       	std	Y+2, r18	; 0x02
    1f26:	f9 01       	movw	r30, r18
    1f28:	d5 83       	std	Z+5, r29	; 0x05
    1f2a:	c4 83       	std	Z+4, r28	; 0x04
    1f2c:	cd 01       	movw	r24, r26
    1f2e:	0e 94 a4 04 	call	0x948	; 0x948 <dispatch>
    1f32:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f36:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f3a:	82 81       	ldd	r24, Z+2	; 0x02
    1f3c:	93 81       	ldd	r25, Z+3	; 0x03
    1f3e:	89 2b       	or	r24, r25
    1f40:	31 f4       	brne	.+12     	; 0x1f4e <sync+0x90>
    1f42:	11 23       	and	r17, r17
    1f44:	81 f1       	breq	.+96     	; 0x1fa6 <sync+0xe8>
    1f46:	78 94       	sei
    1f48:	80 e0       	ldi	r24, 0x00	; 0
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	31 c0       	rjmp	.+98     	; 0x1fb0 <sync+0xf2>
    1f4e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f52:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f56:	99 83       	std	Y+1, r25	; 0x01
    1f58:	88 83       	st	Y, r24
    1f5a:	11 23       	and	r17, r17
    1f5c:	29 f0       	breq	.+10     	; 0x1f68 <sync+0xaa>
    1f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f60:	9b 81       	ldd	r25, Y+3	; 0x03
    1f62:	01 97       	sbiw	r24, 0x01	; 1
    1f64:	09 f0       	breq	.+2      	; 0x1f68 <sync+0xaa>
    1f66:	78 94       	sei
    1f68:	b6 01       	movw	r22, r12
    1f6a:	ce 01       	movw	r24, r28
    1f6c:	f7 01       	movw	r30, r14
    1f6e:	09 95       	icall
    1f70:	f8 2e       	mov	r15, r24
    1f72:	09 2f       	mov	r16, r25
    1f74:	8f b7       	in	r24, 0x3f	; 63
    1f76:	f8 94       	cli
    1f78:	19 82       	std	Y+1, r1	; 0x01
    1f7a:	18 82       	st	Y, r1
    1f7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f7e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f80:	82 30       	cpi	r24, 0x02	; 2
    1f82:	91 05       	cpc	r25, r1
    1f84:	38 f0       	brcs	.+14     	; 0x1f94 <sync+0xd6>
    1f86:	1b 82       	std	Y+3, r1	; 0x03
    1f88:	1a 82       	std	Y+2, r1	; 0x02
    1f8a:	fc 01       	movw	r30, r24
    1f8c:	15 82       	std	Z+5, r1	; 0x05
    1f8e:	14 82       	std	Z+4, r1	; 0x04
    1f90:	0e 94 a4 04 	call	0x948	; 0x948 <dispatch>
    1f94:	11 23       	and	r17, r17
    1f96:	51 f0       	breq	.+20     	; 0x1fac <sync+0xee>
    1f98:	78 94       	sei
    1f9a:	8f 2d       	mov	r24, r15
    1f9c:	90 2f       	mov	r25, r16
    1f9e:	08 c0       	rjmp	.+16     	; 0x1fb0 <sync+0xf2>
    1fa0:	8f ef       	ldi	r24, 0xFF	; 255
    1fa2:	9f ef       	ldi	r25, 0xFF	; 255
    1fa4:	05 c0       	rjmp	.+10     	; 0x1fb0 <sync+0xf2>
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	02 c0       	rjmp	.+4      	; 0x1fb0 <sync+0xf2>
    1fac:	8f 2d       	mov	r24, r15
    1fae:	90 2f       	mov	r25, r16
    1fb0:	df 91       	pop	r29
    1fb2:	cf 91       	pop	r28
    1fb4:	1f 91       	pop	r17
    1fb6:	0f 91       	pop	r16
    1fb8:	ff 90       	pop	r15
    1fba:	ef 90       	pop	r14
    1fbc:	df 90       	pop	r13
    1fbe:	cf 90       	pop	r12
    1fc0:	08 95       	ret

00001fc2 <run>:
    1fc2:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fc6:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fca:	80 e4       	ldi	r24, 0x40	; 64
    1fcc:	91 e0       	ldi	r25, 0x01	; 1
    1fce:	0e 94 26 05 	call	0xa4c	; 0xa4c <dequeue>
    1fd2:	ec 01       	movw	r28, r24
    1fd4:	f8 01       	movw	r30, r16
    1fd6:	93 83       	std	Z+3, r25	; 0x03
    1fd8:	82 83       	std	Z+2, r24	; 0x02
    1fda:	78 94       	sei
    1fdc:	6c 85       	ldd	r22, Y+12	; 0x0c
    1fde:	7d 85       	ldd	r23, Y+13	; 0x0d
    1fe0:	4e 85       	ldd	r20, Y+14	; 0x0e
    1fe2:	5f 85       	ldd	r21, Y+15	; 0x0f
    1fe4:	8a 85       	ldd	r24, Y+10	; 0x0a
    1fe6:	9b 85       	ldd	r25, Y+11	; 0x0b
    1fe8:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <sync>
    1fec:	8f b7       	in	r24, 0x3f	; 63
    1fee:	f8 94       	cli
    1ff0:	66 e0       	ldi	r22, 0x06	; 6
    1ff2:	71 e0       	ldi	r23, 0x01	; 1
    1ff4:	ce 01       	movw	r24, r28
    1ff6:	0e 94 3d 05 	call	0xa7a	; 0xa7a <insert>
    1ffa:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1ffe:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    2002:	01 90       	ld	r0, Z+
    2004:	f0 81       	ld	r31, Z
    2006:	e0 2d       	mov	r30, r0
    2008:	c2 81       	ldd	r28, Z+2	; 0x02
    200a:	d3 81       	ldd	r29, Z+3	; 0x03
    200c:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    2010:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    2014:	30 97       	sbiw	r30, 0x00	; 0
    2016:	a1 f0       	breq	.+40     	; 0x2040 <run+0x7e>
    2018:	20 97       	sbiw	r28, 0x00	; 0
    201a:	99 f2       	breq	.-90     	; 0x1fc2 <run>
    201c:	86 81       	ldd	r24, Z+6	; 0x06
    201e:	97 81       	ldd	r25, Z+7	; 0x07
    2020:	a0 85       	ldd	r26, Z+8	; 0x08
    2022:	b1 85       	ldd	r27, Z+9	; 0x09
    2024:	4e 81       	ldd	r20, Y+6	; 0x06
    2026:	5f 81       	ldd	r21, Y+7	; 0x07
    2028:	68 85       	ldd	r22, Y+8	; 0x08
    202a:	79 85       	ldd	r23, Y+9	; 0x09
    202c:	84 1b       	sub	r24, r20
    202e:	95 0b       	sbc	r25, r21
    2030:	a6 0b       	sbc	r26, r22
    2032:	b7 0b       	sbc	r27, r23
    2034:	18 16       	cp	r1, r24
    2036:	19 06       	cpc	r1, r25
    2038:	1a 06       	cpc	r1, r26
    203a:	1b 06       	cpc	r1, r27
    203c:	0c f0       	brlt	.+2      	; 0x2040 <run+0x7e>
    203e:	c1 cf       	rjmp	.-126    	; 0x1fc2 <run>
    2040:	82 e0       	ldi	r24, 0x02	; 2
    2042:	91 e0       	ldi	r25, 0x01	; 1
    2044:	0e 94 51 05 	call	0xaa2	; 0xaa2 <pop>
    2048:	64 e0       	ldi	r22, 0x04	; 4
    204a:	71 e0       	ldi	r23, 0x01	; 1
    204c:	0e 94 47 05 	call	0xa8e	; 0xa8e <push>
    2050:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2054:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2058:	02 c0       	rjmp	.+4      	; 0x205e <run+0x9c>
    205a:	a0 81       	ld	r26, Z
    205c:	b1 81       	ldd	r27, Z+1	; 0x01
    205e:	14 96       	adiw	r26, 0x04	; 4
    2060:	ed 91       	ld	r30, X+
    2062:	fc 91       	ld	r31, X
    2064:	15 97       	sbiw	r26, 0x05	; 5
    2066:	30 97       	sbiw	r30, 0x00	; 0
    2068:	c1 f7       	brne	.-16     	; 0x205a <run+0x98>
    206a:	cd 01       	movw	r24, r26
    206c:	0e 94 a4 04 	call	0x948	; 0x948 <dispatch>
    2070:	a8 cf       	rjmp	.-176    	; 0x1fc2 <run>

00002072 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    2072:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    2074:	42 31       	cpi	r20, 0x12	; 18
    2076:	b8 f4       	brcc	.+46     	; 0x20a6 <install+0x34>
        char status;
        DISABLE(status);
    2078:	9f b7       	in	r25, 0x3f	; 63
    207a:	90 78       	andi	r25, 0x80	; 128
    207c:	f8 94       	cli
        otable[i] = obj;
    207e:	50 e0       	ldi	r21, 0x00	; 0
    2080:	44 0f       	add	r20, r20
    2082:	55 1f       	adc	r21, r21
    2084:	da 01       	movw	r26, r20
    2086:	ae 5b       	subi	r26, 0xBE	; 190
    2088:	be 4f       	sbci	r27, 0xFE	; 254
    208a:	ed 93       	st	X+, r30
    208c:	fc 93       	st	X, r31
        mtable[i] = m;
    208e:	da 01       	movw	r26, r20
    2090:	a6 52       	subi	r26, 0x26	; 38
    2092:	be 4f       	sbci	r27, 0xFE	; 254
    2094:	6d 93       	st	X+, r22
    2096:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2098:	21 e0       	ldi	r18, 0x01	; 1
    209a:	30 e0       	ldi	r19, 0x00	; 0
    209c:	33 83       	std	Z+3, r19	; 0x03
    209e:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    20a0:	99 23       	and	r25, r25
    20a2:	09 f0       	breq	.+2      	; 0x20a6 <install+0x34>
    20a4:	78 94       	sei
    20a6:	08 95       	ret

000020a8 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20a8:	8c 01       	movw	r16, r24
    20aa:	7b 01       	movw	r14, r22
    20ac:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20ae:	8f b7       	in	r24, 0x3f	; 63
    20b0:	f8 94       	cli
    initialize();
    20b2:	0e 94 05 04 	call	0x80a	; 0x80a <initialize>
    ENABLE(1);
    20b6:	78 94       	sei
    if (m != NULL)
    20b8:	e1 14       	cp	r14, r1
    20ba:	f1 04       	cpc	r15, r1
    20bc:	41 f0       	breq	.+16     	; 0x20ce <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20be:	20 e0       	ldi	r18, 0x00	; 0
    20c0:	30 e0       	ldi	r19, 0x00	; 0
    20c2:	a9 01       	movw	r20, r18
    20c4:	60 e0       	ldi	r22, 0x00	; 0
    20c6:	70 e0       	ldi	r23, 0x00	; 0
    20c8:	cb 01       	movw	r24, r22
    20ca:	0e 94 56 0e 	call	0x1cac	; 0x1cac <async>
    DISABLE(status);
    20ce:	8f b7       	in	r24, 0x3f	; 63
    20d0:	f8 94       	cli
    idle();
    20d2:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <idle>

000020d6 <__divmodhi4>:
    20d6:	97 fb       	bst	r25, 7
    20d8:	07 2e       	mov	r0, r23
    20da:	16 f4       	brtc	.+4      	; 0x20e0 <__divmodhi4+0xa>
    20dc:	00 94       	com	r0
    20de:	07 d0       	rcall	.+14     	; 0x20ee <__divmodhi4_neg1>
    20e0:	77 fd       	sbrc	r23, 7
    20e2:	09 d0       	rcall	.+18     	; 0x20f6 <__divmodhi4_neg2>
    20e4:	0e 94 86 10 	call	0x210c	; 0x210c <__udivmodhi4>
    20e8:	07 fc       	sbrc	r0, 7
    20ea:	05 d0       	rcall	.+10     	; 0x20f6 <__divmodhi4_neg2>
    20ec:	3e f4       	brtc	.+14     	; 0x20fc <__divmodhi4_exit>

000020ee <__divmodhi4_neg1>:
    20ee:	90 95       	com	r25
    20f0:	81 95       	neg	r24
    20f2:	9f 4f       	sbci	r25, 0xFF	; 255
    20f4:	08 95       	ret

000020f6 <__divmodhi4_neg2>:
    20f6:	70 95       	com	r23
    20f8:	61 95       	neg	r22
    20fa:	7f 4f       	sbci	r23, 0xFF	; 255

000020fc <__divmodhi4_exit>:
    20fc:	08 95       	ret

000020fe <__usmulhisi3>:
    20fe:	0e 94 9a 10 	call	0x2134	; 0x2134 <__umulhisi3>

00002102 <__usmulhisi3_tail>:
    2102:	b7 ff       	sbrs	r27, 7
    2104:	08 95       	ret
    2106:	82 1b       	sub	r24, r18
    2108:	93 0b       	sbc	r25, r19
    210a:	08 95       	ret

0000210c <__udivmodhi4>:
    210c:	aa 1b       	sub	r26, r26
    210e:	bb 1b       	sub	r27, r27
    2110:	51 e1       	ldi	r21, 0x11	; 17
    2112:	07 c0       	rjmp	.+14     	; 0x2122 <__udivmodhi4_ep>

00002114 <__udivmodhi4_loop>:
    2114:	aa 1f       	adc	r26, r26
    2116:	bb 1f       	adc	r27, r27
    2118:	a6 17       	cp	r26, r22
    211a:	b7 07       	cpc	r27, r23
    211c:	10 f0       	brcs	.+4      	; 0x2122 <__udivmodhi4_ep>
    211e:	a6 1b       	sub	r26, r22
    2120:	b7 0b       	sbc	r27, r23

00002122 <__udivmodhi4_ep>:
    2122:	88 1f       	adc	r24, r24
    2124:	99 1f       	adc	r25, r25
    2126:	5a 95       	dec	r21
    2128:	a9 f7       	brne	.-22     	; 0x2114 <__udivmodhi4_loop>
    212a:	80 95       	com	r24
    212c:	90 95       	com	r25
    212e:	bc 01       	movw	r22, r24
    2130:	cd 01       	movw	r24, r26
    2132:	08 95       	ret

00002134 <__umulhisi3>:
    2134:	a2 9f       	mul	r26, r18
    2136:	b0 01       	movw	r22, r0
    2138:	b3 9f       	mul	r27, r19
    213a:	c0 01       	movw	r24, r0
    213c:	a3 9f       	mul	r26, r19
    213e:	70 0d       	add	r23, r0
    2140:	81 1d       	adc	r24, r1
    2142:	11 24       	eor	r1, r1
    2144:	91 1d       	adc	r25, r1
    2146:	b2 9f       	mul	r27, r18
    2148:	70 0d       	add	r23, r0
    214a:	81 1d       	adc	r24, r1
    214c:	11 24       	eor	r1, r1
    214e:	91 1d       	adc	r25, r1
    2150:	08 95       	ret

00002152 <setjmp>:
    2152:	dc 01       	movw	r26, r24
    2154:	2d 92       	st	X+, r2
    2156:	3d 92       	st	X+, r3
    2158:	4d 92       	st	X+, r4
    215a:	5d 92       	st	X+, r5
    215c:	6d 92       	st	X+, r6
    215e:	7d 92       	st	X+, r7
    2160:	8d 92       	st	X+, r8
    2162:	9d 92       	st	X+, r9
    2164:	ad 92       	st	X+, r10
    2166:	bd 92       	st	X+, r11
    2168:	cd 92       	st	X+, r12
    216a:	dd 92       	st	X+, r13
    216c:	ed 92       	st	X+, r14
    216e:	fd 92       	st	X+, r15
    2170:	0d 93       	st	X+, r16
    2172:	1d 93       	st	X+, r17
    2174:	cd 93       	st	X+, r28
    2176:	dd 93       	st	X+, r29
    2178:	ff 91       	pop	r31
    217a:	ef 91       	pop	r30
    217c:	8d b7       	in	r24, 0x3d	; 61
    217e:	8d 93       	st	X+, r24
    2180:	8e b7       	in	r24, 0x3e	; 62
    2182:	8d 93       	st	X+, r24
    2184:	8f b7       	in	r24, 0x3f	; 63
    2186:	8d 93       	st	X+, r24
    2188:	ed 93       	st	X+, r30
    218a:	fd 93       	st	X+, r31
    218c:	88 27       	eor	r24, r24
    218e:	99 27       	eor	r25, r25
    2190:	09 94       	ijmp

00002192 <longjmp>:
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	81 30       	cpi	r24, 0x01	; 1
    2198:	91 05       	cpc	r25, r1
    219a:	81 1d       	adc	r24, r1
    219c:	2d 90       	ld	r2, X+
    219e:	3d 90       	ld	r3, X+
    21a0:	4d 90       	ld	r4, X+
    21a2:	5d 90       	ld	r5, X+
    21a4:	6d 90       	ld	r6, X+
    21a6:	7d 90       	ld	r7, X+
    21a8:	8d 90       	ld	r8, X+
    21aa:	9d 90       	ld	r9, X+
    21ac:	ad 90       	ld	r10, X+
    21ae:	bd 90       	ld	r11, X+
    21b0:	cd 90       	ld	r12, X+
    21b2:	dd 90       	ld	r13, X+
    21b4:	ed 90       	ld	r14, X+
    21b6:	fd 90       	ld	r15, X+
    21b8:	0d 91       	ld	r16, X+
    21ba:	1d 91       	ld	r17, X+
    21bc:	cd 91       	ld	r28, X+
    21be:	dd 91       	ld	r29, X+
    21c0:	ed 91       	ld	r30, X+
    21c2:	fd 91       	ld	r31, X+
    21c4:	0d 90       	ld	r0, X+
    21c6:	f8 94       	cli
    21c8:	fe bf       	out	0x3e, r31	; 62
    21ca:	0f be       	out	0x3f, r0	; 63
    21cc:	ed bf       	out	0x3d, r30	; 61
    21ce:	ed 91       	ld	r30, X+
    21d0:	fd 91       	ld	r31, X+
    21d2:	09 94       	ijmp

000021d4 <_exit>:
    21d4:	f8 94       	cli

000021d6 <__stop_program>:
    21d6:	ff cf       	rjmp	.-2      	; 0x21d6 <__stop_program>
