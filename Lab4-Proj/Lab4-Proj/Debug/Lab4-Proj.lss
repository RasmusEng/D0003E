
Lab4-Proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00002344  000023d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002344  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800138  00800138  00002410  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d8  00000000  00000000  00002480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034e2  00000000  00000000  00002758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000135c  00000000  00000000  00005c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018e5  00000000  00000000  00006f96  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000dcc  00000000  00000000  0000887c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a6b  00000000  00000000  00009648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b3b  00000000  00000000  0000a0b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000cbee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 45 06 	jmp	0xc8a	; 0xc8a <__vector_1>
       8:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__vector_2>
       c:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__vector_3>
      10:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__vector_4>
      14:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 6c 0e 	jmp	0x1cd8	; 0x1cd8 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 1a 0e 	jmp	0x1c34	; 0x1c34 <__vector_9>
      28:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__vector_10>
      2c:	0c 94 df 08 	jmp	0x11be	; 0x11be <__vector_11>
      30:	0c 94 4e 09 	jmp	0x129c	; 0x129c <__vector_12>
      34:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__vector_13>
      38:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__vector_14>
      3c:	0c 94 9b 0a 	jmp	0x1536	; 0x1536 <__vector_15>
      40:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__vector_16>
      44:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__vector_17>
      48:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <__vector_18>
      4c:	0c 94 57 0c 	jmp	0x18ae	; 0x18ae <__vector_19>
      50:	0c 94 c6 0c 	jmp	0x198c	; 0x198c <__vector_20>
      54:	0c 94 35 0d 	jmp	0x1a6a	; 0x1a6a <__vector_21>
      58:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e4       	ldi	r30, 0x44	; 68
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 33       	cpi	r26, 0x38	; 56
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e3       	ldi	r26, 0x38	; 56
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <main>
      92:	0c 94 a0 11 	jmp	0x2340	; 0x2340 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <Switch>:
#include "Joystick.h"
#include "TinyTimber.h"



void Switch(InterruptHandler *self, int arg) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
	if (self->risingEdge){
      a6:	fc 01       	movw	r30, r24
      a8:	26 81       	ldd	r18, Z+6	; 0x06
      aa:	22 23       	and	r18, r18
      ac:	a1 f0       	breq	.+40     	; 0xd6 <Switch+0x3c>
		self->risingEdge = false;
      ae:	16 82       	std	Z+6, r1	; 0x06
		ASYNC(self->joystick, joyStickHorizontalControll, 0);		
      b0:	04 81       	ldd	r16, Z+4	; 0x04
      b2:	15 81       	ldd	r17, Z+5	; 0x05
      b4:	c1 2c       	mov	r12, r1
      b6:	d1 2c       	mov	r13, r1
      b8:	0f 2e       	mov	r0, r31
      ba:	f5 e9       	ldi	r31, 0x95	; 149
      bc:	ef 2e       	mov	r14, r31
      be:	f0 e0       	ldi	r31, 0x00	; 0
      c0:	ff 2e       	mov	r15, r31
      c2:	f0 2d       	mov	r31, r0
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	a9 01       	movw	r20, r18
      ca:	60 e0       	ldi	r22, 0x00	; 0
      cc:	70 e0       	ldi	r23, 0x00	; 0
      ce:	cb 01       	movw	r24, r22
      d0:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
      d4:	03 c0       	rjmp	.+6      	; 0xdc <Switch+0x42>
	}else{
		self->risingEdge = true;
      d6:	21 e0       	ldi	r18, 0x01	; 1
      d8:	fc 01       	movw	r30, r24
      da:	26 83       	std	Z+6, r18	; 0x06
	}
}
      dc:	1f 91       	pop	r17
      de:	0f 91       	pop	r16
      e0:	ff 90       	pop	r15
      e2:	ef 90       	pop	r14
      e4:	df 90       	pop	r13
      e6:	cf 90       	pop	r12
      e8:	08 95       	ret

000000ea <Change>:

void Change(InterruptHandler *self, int arg) {
      ea:	cf 92       	push	r12
      ec:	df 92       	push	r13
      ee:	ef 92       	push	r14
      f0:	ff 92       	push	r15
      f2:	0f 93       	push	r16
      f4:	1f 93       	push	r17
	ASYNC(self->joystick, joyStickVerticalControll, 0);
      f6:	fc 01       	movw	r30, r24
      f8:	04 81       	ldd	r16, Z+4	; 0x04
      fa:	15 81       	ldd	r17, Z+5	; 0x05
      fc:	c1 2c       	mov	r12, r1
      fe:	d1 2c       	mov	r13, r1
     100:	0f 2e       	mov	r0, r31
     102:	f6 ec       	ldi	r31, 0xC6	; 198
     104:	ef 2e       	mov	r14, r31
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	ff 2e       	mov	r15, r31
     10a:	f0 2d       	mov	r31, r0
     10c:	20 e0       	ldi	r18, 0x00	; 0
     10e:	30 e0       	ldi	r19, 0x00	; 0
     110:	a9 01       	movw	r20, r18
     112:	60 e0       	ldi	r22, 0x00	; 0
     114:	70 e0       	ldi	r23, 0x00	; 0
     116:	cb 01       	movw	r24, r22
     118:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     11c:	1f 91       	pop	r17
     11e:	0f 91       	pop	r16
     120:	ff 90       	pop	r15
     122:	ef 90       	pop	r14
     124:	df 90       	pop	r13
     126:	cf 90       	pop	r12
     128:	08 95       	ret

0000012a <joyStickHorizontalControll>:
		//AFTER(MSEC(50), self, holdJoyStick, 0);
	}
	return 0;
}*/

int joyStickHorizontalControll(Joystick *self, int unUsed){
     12a:	cf 92       	push	r12
     12c:	df 92       	push	r13
     12e:	ef 92       	push	r14
     130:	ff 92       	push	r15
     132:	0f 93       	push	r16
     134:	1f 93       	push	r17
     136:	ac 01       	movw	r20, r24
	if((!(PINE & (1 << PE1)) | !(PINE & (1 << PE6)))){
     138:	2c b1       	in	r18, 0x0c	; 12
     13a:	3c b1       	in	r19, 0x0c	; 12
     13c:	26 95       	lsr	r18
     13e:	91 e0       	ldi	r25, 0x01	; 1
     140:	29 27       	eor	r18, r25
     142:	21 70       	andi	r18, 0x01	; 1
     144:	32 95       	swap	r19
     146:	36 95       	lsr	r19
     148:	36 95       	lsr	r19
     14a:	33 70       	andi	r19, 0x03	; 3
     14c:	93 27       	eor	r25, r19
     14e:	91 70       	andi	r25, 0x01	; 1
     150:	92 2b       	or	r25, r18
     152:	99 f0       	breq	.+38     	; 0x17a <joyStickHorizontalControll+0x50>
     154:	fa 01       	movw	r30, r20
		ASYNC(self->gui, switchState,0);
     156:	04 81       	ldd	r16, Z+4	; 0x04
     158:	15 81       	ldd	r17, Z+5	; 0x05
     15a:	c1 2c       	mov	r12, r1
     15c:	d1 2c       	mov	r13, r1
     15e:	0f 2e       	mov	r0, r31
     160:	ff e8       	ldi	r31, 0x8F	; 143
     162:	ef 2e       	mov	r14, r31
     164:	f1 e0       	ldi	r31, 0x01	; 1
     166:	ff 2e       	mov	r15, r31
     168:	f0 2d       	mov	r31, r0
     16a:	20 e0       	ldi	r18, 0x00	; 0
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	a9 01       	movw	r20, r18
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	70 e0       	ldi	r23, 0x00	; 0
     174:	cb 01       	movw	r24, r22
     176:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	return 0;
}
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	1f 91       	pop	r17
     180:	0f 91       	pop	r16
     182:	ff 90       	pop	r15
     184:	ef 90       	pop	r14
     186:	df 90       	pop	r13
     188:	cf 90       	pop	r12
     18a:	08 95       	ret

0000018c <joyStickVerticalControll>:

int joyStickVerticalControll(Joystick *self, int unUsed){
     18c:	cf 92       	push	r12
     18e:	df 92       	push	r13
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	cf 93       	push	r28
     19a:	df 93       	push	r29
     19c:	ec 01       	movw	r28, r24
	if (!(PINB & (1 << PB7))) { //DOWN
     19e:	1f 99       	sbic	0x03, 7	; 3
     1a0:	12 c0       	rjmp	.+36     	; 0x1c6 <joyStickVerticalControll+0x3a>
		//ASYNC(self, holdJoyStick, 0);
		ASYNC(self->gui, freqDown, 0);
     1a2:	0c 81       	ldd	r16, Y+4	; 0x04
     1a4:	1d 81       	ldd	r17, Y+5	; 0x05
     1a6:	c1 2c       	mov	r12, r1
     1a8:	d1 2c       	mov	r13, r1
     1aa:	0f 2e       	mov	r0, r31
     1ac:	f6 e5       	ldi	r31, 0x56	; 86
     1ae:	ef 2e       	mov	r14, r31
     1b0:	f1 e0       	ldi	r31, 0x01	; 1
     1b2:	ff 2e       	mov	r15, r31
     1b4:	f0 2d       	mov	r31, r0
     1b6:	20 e0       	ldi	r18, 0x00	; 0
     1b8:	30 e0       	ldi	r19, 0x00	; 0
     1ba:	a9 01       	movw	r20, r18
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	70 e0       	ldi	r23, 0x00	; 0
     1c0:	cb 01       	movw	r24, r22
     1c2:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
		
	}
	if (!(PINB & (1 << PB6))) { //UP
     1c6:	1e 99       	sbic	0x03, 6	; 3
     1c8:	12 c0       	rjmp	.+36     	; 0x1ee <joyStickVerticalControll+0x62>
		//ASYNC(self, holdJoyStick, 0);
		ASYNC(self->gui, freqUp, 0);
     1ca:	0c 81       	ldd	r16, Y+4	; 0x04
     1cc:	1d 81       	ldd	r17, Y+5	; 0x05
     1ce:	c1 2c       	mov	r12, r1
     1d0:	d1 2c       	mov	r13, r1
     1d2:	0f 2e       	mov	r0, r31
     1d4:	fd e1       	ldi	r31, 0x1D	; 29
     1d6:	ef 2e       	mov	r14, r31
     1d8:	f1 e0       	ldi	r31, 0x01	; 1
     1da:	ff 2e       	mov	r15, r31
     1dc:	f0 2d       	mov	r31, r0
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	a9 01       	movw	r20, r18
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	cb 01       	movw	r24, r22
     1ea:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	if (!(PINB & (1 << PB4))) { //PRESS
     1ee:	1c 99       	sbic	0x03, 4	; 3
     1f0:	19 c0       	rjmp	.+50     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		if (self->risingEdge){
     1f2:	8e 81       	ldd	r24, Y+6	; 0x06
     1f4:	88 23       	and	r24, r24
     1f6:	a1 f0       	breq	.+40     	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
			self->risingEdge = false;
     1f8:	1e 82       	std	Y+6, r1	; 0x06
			ASYNC(self->gui, press, 0);	
     1fa:	0c 81       	ldd	r16, Y+4	; 0x04
     1fc:	1d 81       	ldd	r17, Y+5	; 0x05
     1fe:	c1 2c       	mov	r12, r1
     200:	d1 2c       	mov	r13, r1
     202:	0f 2e       	mov	r0, r31
     204:	f1 ea       	ldi	r31, 0xA1	; 161
     206:	ef 2e       	mov	r14, r31
     208:	f1 e0       	ldi	r31, 0x01	; 1
     20a:	ff 2e       	mov	r15, r31
     20c:	f0 2d       	mov	r31, r0
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	a9 01       	movw	r20, r18
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	cb 01       	movw	r24, r22
     21a:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     21e:	02 c0       	rjmp	.+4      	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		}else{
			self->risingEdge = true;
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	8e 83       	std	Y+6, r24	; 0x06
		}
	}
	return 0;
}
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	1f 91       	pop	r17
     22e:	0f 91       	pop	r16
     230:	ff 90       	pop	r15
     232:	ef 90       	pop	r14
     234:	df 90       	pop	r13
     236:	cf 90       	pop	r12
     238:	08 95       	ret

0000023a <freqUp>:
#include "LCD_Driver.h"
#include "PulseGenerator.h"
#include <avr/io.h>
//TODO: Check every call if it should be SYNC or SYNC

int freqUp(GUI *self, int unUsed){
     23a:	cf 92       	push	r12
     23c:	df 92       	push	r13
     23e:	ef 92       	push	r14
     240:	ff 92       	push	r15
     242:	0f 93       	push	r16
     244:	1f 93       	push	r17
	if(self->isLeft){
     246:	fc 01       	movw	r30, r24
     248:	24 81       	ldd	r18, Z+4	; 0x04
     24a:	22 23       	and	r18, r18
     24c:	99 f0       	breq	.+38     	; 0x274 <freqUp+0x3a>
		ASYNC(self->left, increase, 0);	
     24e:	05 81       	ldd	r16, Z+5	; 0x05
     250:	16 81       	ldd	r17, Z+6	; 0x06
     252:	c1 2c       	mov	r12, r1
     254:	d1 2c       	mov	r13, r1
     256:	0f 2e       	mov	r0, r31
     258:	f5 e0       	ldi	r31, 0x05	; 5
     25a:	ef 2e       	mov	r14, r31
     25c:	f4 e0       	ldi	r31, 0x04	; 4
     25e:	ff 2e       	mov	r15, r31
     260:	f0 2d       	mov	r31, r0
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	a9 01       	movw	r20, r18
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	cb 01       	movw	r24, r22
     26e:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     272:	13 c0       	rjmp	.+38     	; 0x29a <freqUp+0x60>
	}else{
		ASYNC(self->right, increase, 0);
     274:	fc 01       	movw	r30, r24
     276:	07 81       	ldd	r16, Z+7	; 0x07
     278:	10 85       	ldd	r17, Z+8	; 0x08
     27a:	c1 2c       	mov	r12, r1
     27c:	d1 2c       	mov	r13, r1
     27e:	0f 2e       	mov	r0, r31
     280:	f5 e0       	ldi	r31, 0x05	; 5
     282:	ef 2e       	mov	r14, r31
     284:	f4 e0       	ldi	r31, 0x04	; 4
     286:	ff 2e       	mov	r15, r31
     288:	f0 2d       	mov	r31, r0
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	a9 01       	movw	r20, r18
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	cb 01       	movw	r24, r22
     296:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	
	return 0;
}
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	1f 91       	pop	r17
     2a0:	0f 91       	pop	r16
     2a2:	ff 90       	pop	r15
     2a4:	ef 90       	pop	r14
     2a6:	df 90       	pop	r13
     2a8:	cf 90       	pop	r12
     2aa:	08 95       	ret

000002ac <freqDown>:

int freqDown(GUI *self, int unUsed){
     2ac:	cf 92       	push	r12
     2ae:	df 92       	push	r13
     2b0:	ef 92       	push	r14
     2b2:	ff 92       	push	r15
     2b4:	0f 93       	push	r16
     2b6:	1f 93       	push	r17
	if(self->isLeft){
     2b8:	fc 01       	movw	r30, r24
     2ba:	24 81       	ldd	r18, Z+4	; 0x04
     2bc:	22 23       	and	r18, r18
     2be:	99 f0       	breq	.+38     	; 0x2e6 <freqDown+0x3a>
		ASYNC(self->left, decrease, 0);
     2c0:	05 81       	ldd	r16, Z+5	; 0x05
     2c2:	16 81       	ldd	r17, Z+6	; 0x06
     2c4:	c1 2c       	mov	r12, r1
     2c6:	d1 2c       	mov	r13, r1
     2c8:	0f 2e       	mov	r0, r31
     2ca:	fc e3       	ldi	r31, 0x3C	; 60
     2cc:	ef 2e       	mov	r14, r31
     2ce:	f4 e0       	ldi	r31, 0x04	; 4
     2d0:	ff 2e       	mov	r15, r31
     2d2:	f0 2d       	mov	r31, r0
     2d4:	20 e0       	ldi	r18, 0x00	; 0
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	a9 01       	movw	r20, r18
     2da:	60 e0       	ldi	r22, 0x00	; 0
     2dc:	70 e0       	ldi	r23, 0x00	; 0
     2de:	cb 01       	movw	r24, r22
     2e0:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     2e4:	13 c0       	rjmp	.+38     	; 0x30c <freqDown+0x60>
	}else{
		ASYNC(self->right, decrease, 0);
     2e6:	fc 01       	movw	r30, r24
     2e8:	07 81       	ldd	r16, Z+7	; 0x07
     2ea:	10 85       	ldd	r17, Z+8	; 0x08
     2ec:	c1 2c       	mov	r12, r1
     2ee:	d1 2c       	mov	r13, r1
     2f0:	0f 2e       	mov	r0, r31
     2f2:	fc e3       	ldi	r31, 0x3C	; 60
     2f4:	ef 2e       	mov	r14, r31
     2f6:	f4 e0       	ldi	r31, 0x04	; 4
     2f8:	ff 2e       	mov	r15, r31
     2fa:	f0 2d       	mov	r31, r0
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	a9 01       	movw	r20, r18
     302:	60 e0       	ldi	r22, 0x00	; 0
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	cb 01       	movw	r24, r22
     308:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	return 0;
}
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
     314:	ff 90       	pop	r15
     316:	ef 90       	pop	r14
     318:	df 90       	pop	r13
     31a:	cf 90       	pop	r12
     31c:	08 95       	ret

0000031e <switchState>:

int switchState(GUI *self, int unUsed){
	self->isLeft = self->isLeft ? false : true;
     31e:	fc 01       	movw	r30, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	22 23       	and	r18, r18
     324:	11 f0       	breq	.+4      	; 0x32a <switchState+0xc>
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	01 c0       	rjmp	.+2      	; 0x32c <switchState+0xe>
     32a:	21 e0       	ldi	r18, 0x01	; 1
     32c:	fc 01       	movw	r30, r24
     32e:	24 83       	std	Z+4, r18	; 0x04
	LCDDR13 ^= 1;
     330:	e9 ef       	ldi	r30, 0xF9	; 249
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	90 81       	ld	r25, Z
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	89 27       	eor	r24, r25
     33a:	80 83       	st	Z, r24
	return 0;
}
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	08 95       	ret

00000342 <press>:

int press(GUI *self, int unUsed){
     342:	cf 92       	push	r12
     344:	df 92       	push	r13
     346:	ef 92       	push	r14
     348:	ff 92       	push	r15
     34a:	0f 93       	push	r16
     34c:	1f 93       	push	r17
	if(self->isLeft){
     34e:	fc 01       	movw	r30, r24
     350:	24 81       	ldd	r18, Z+4	; 0x04
     352:	22 23       	and	r18, r18
     354:	99 f0       	breq	.+38     	; 0x37c <press+0x3a>
		ASYNC(self->left, reset, 0);  
     356:	05 81       	ldd	r16, Z+5	; 0x05
     358:	16 81       	ldd	r17, Z+6	; 0x06
     35a:	c1 2c       	mov	r12, r1
     35c:	d1 2c       	mov	r13, r1
     35e:	0f 2e       	mov	r0, r31
     360:	f1 e7       	ldi	r31, 0x71	; 113
     362:	ef 2e       	mov	r14, r31
     364:	f4 e0       	ldi	r31, 0x04	; 4
     366:	ff 2e       	mov	r15, r31
     368:	f0 2d       	mov	r31, r0
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	a9 01       	movw	r20, r18
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	70 e0       	ldi	r23, 0x00	; 0
     374:	cb 01       	movw	r24, r22
     376:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     37a:	13 c0       	rjmp	.+38     	; 0x3a2 <press+0x60>
	} else {
		ASYNC(self->right, reset, 0); 
     37c:	fc 01       	movw	r30, r24
     37e:	07 81       	ldd	r16, Z+7	; 0x07
     380:	10 85       	ldd	r17, Z+8	; 0x08
     382:	c1 2c       	mov	r12, r1
     384:	d1 2c       	mov	r13, r1
     386:	0f 2e       	mov	r0, r31
     388:	f1 e7       	ldi	r31, 0x71	; 113
     38a:	ef 2e       	mov	r14, r31
     38c:	f4 e0       	ldi	r31, 0x04	; 4
     38e:	ff 2e       	mov	r15, r31
     390:	f0 2d       	mov	r31, r0
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	a9 01       	movw	r20, r18
     398:	60 e0       	ldi	r22, 0x00	; 0
     39a:	70 e0       	ldi	r23, 0x00	; 0
     39c:	cb 01       	movw	r24, r22
     39e:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	return 0;
}
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	1f 91       	pop	r17
     3a8:	0f 91       	pop	r16
     3aa:	ff 90       	pop	r15
     3ac:	ef 90       	pop	r14
     3ae:	df 90       	pop	r13
     3b0:	cf 90       	pop	r12
     3b2:	08 95       	ret

000003b4 <startPulse>:


void startPulse(GUI *self, int unUsed){
     3b4:	cf 92       	push	r12
     3b6:	df 92       	push	r13
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	ec 01       	movw	r28, r24
	ASYNC(self->left, generator, 0);
     3c6:	0d 81       	ldd	r16, Y+5	; 0x05
     3c8:	1e 81       	ldd	r17, Y+6	; 0x06
     3ca:	c1 2c       	mov	r12, r1
     3cc:	d1 2c       	mov	r13, r1
     3ce:	0f 2e       	mov	r0, r31
     3d0:	fd e8       	ldi	r31, 0x8D	; 141
     3d2:	ef 2e       	mov	r14, r31
     3d4:	f3 e0       	ldi	r31, 0x03	; 3
     3d6:	ff 2e       	mov	r15, r31
     3d8:	f0 2d       	mov	r31, r0
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	a9 01       	movw	r20, r18
     3e0:	60 e0       	ldi	r22, 0x00	; 0
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	cb 01       	movw	r24, r22
     3e6:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	ASYNC(self->right, generator, 0);
     3ea:	0f 81       	ldd	r16, Y+7	; 0x07
     3ec:	18 85       	ldd	r17, Y+8	; 0x08
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	a9 01       	movw	r20, r18
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	cb 01       	movw	r24, r22
     3fa:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
}
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	1f 91       	pop	r17
     404:	0f 91       	pop	r16
     406:	ff 90       	pop	r15
     408:	ef 90       	pop	r14
     40a:	df 90       	pop	r13
     40c:	cf 90       	pop	r12
     40e:	08 95       	ret

00000410 <LCD_Init>:
}

void LCD_Init(void){
	//Use 32 kHz crystal oscillator
	//1/3 Bias and 1/4 duty, SEG0:SEG24 is used as port pins
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX0)| (1<<LCDMUX1)|(1<<LCDPM0) |(1<<LCDPM1) |(1<<LCDPM2);
     410:	87 eb       	ldi	r24, 0xB7	; 183
     412:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/* Using 16 as prescaler selection and 8 as LCD Clock Divide */
	/* gives a frame rate of 32 Hz */
	LCDFRR = (1<<LCDCD0) | (1<<LCDCD1) | (1<<LCDCD2);
     416:	87 e0       	ldi	r24, 0x07	; 7
     418:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	/* Set segment drive time to 300 μs and output voltage to 3.35 V*/
	LCDCCR = (1<<LCDDC0) | (1<<LCDCC1) | (1<<LCDCC2) | (1<<LCDCC3);
     41c:	8e e2       	ldi	r24, 0x2E	; 46
     41e:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	/* Enable LCD, low power waveform and no interrupt enabled */
	LCDCRA = (1<<LCDEN);
     422:	80 e8       	ldi	r24, 0x80	; 128
     424:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

	//Indicator bits 
	LCDDR13 ^= 1;
     428:	e9 ef       	ldi	r30, 0xF9	; 249
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	90 81       	ld	r25, Z
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	89 27       	eor	r24, r25
     432:	80 83       	st	Z, r24
     434:	08 95       	ret

00000436 <CLK_Init>:
}

void CLK_Init(){
	// Timer
	DDRE |= (1 << PE4) | (1<< PE6) | (1<<PE5);
     436:	8d b1       	in	r24, 0x0d	; 13
     438:	80 67       	ori	r24, 0x70	; 112
     43a:	8d b9       	out	0x0d, r24	; 13
	PORTE |= (1<<PE5);
     43c:	8e b1       	in	r24, 0x0e	; 14
     43e:	80 62       	ori	r24, 0x20	; 32
     440:	8e b9       	out	0x0e, r24	; 14
     442:	08 95       	ret

00000444 <BUTTON_Init>:
}

void BUTTON_Init(){
	PORTB |= (1 << 7) | (1 << 6) | (1 << 4);
     444:	85 b1       	in	r24, 0x05	; 5
     446:	80 6d       	ori	r24, 0xD0	; 208
     448:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1 << 3) | (1 << 2);
     44a:	8e b1       	in	r24, 0x0e	; 14
     44c:	8c 60       	ori	r24, 0x0C	; 12
     44e:	8e b9       	out	0x0e, r24	; 14

    //Interrupt enables
	EIMSK  |= (1 << PCIE1) | (1 << PCIE0);
     450:	8d b3       	in	r24, 0x1d	; 29
     452:	80 6c       	ori	r24, 0xC0	; 192
     454:	8d bb       	out	0x1d, r24	; 29
	PCMSK1 |= (1 << PCINT12) | (1 << PCINT14) | (1 << PCINT15);
     456:	ec e6       	ldi	r30, 0x6C	; 108
     458:	f0 e0       	ldi	r31, 0x00	; 0
     45a:	80 81       	ld	r24, Z
     45c:	80 6d       	ori	r24, 0xD0	; 208
     45e:	80 83       	st	Z, r24
	
	PCMSK0 |= (1 << PCINT2) | (1 << PCINT3);
     460:	eb e6       	ldi	r30, 0x6B	; 107
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	80 81       	ld	r24, Z
     466:	8c 60       	ori	r24, 0x0C	; 12
     468:	80 83       	st	Z, r24
     46a:	08 95       	ret

0000046c <INIT>:
}

void INIT(){
	CPUCLK_Init();
	LCD_Init();
     46c:	0e 94 08 02 	call	0x410	; 0x410 <LCD_Init>
	CLK_Init();
     470:	0e 94 1b 02 	call	0x436	; 0x436 <CLK_Init>
	BUTTON_Init();
     474:	0e 94 22 02 	call	0x444	; 0x444 <BUTTON_Init>
     478:	08 95       	ret

0000047a <writeChar>:
	LCDDR6 = data2;
}

void writeChar(char ch, int pos){
	/* Returns if given input is not possible to print */
	if(pos < 0 || pos > 5 || ch < 48 || ch > 57){
     47a:	66 30       	cpi	r22, 0x06	; 6
     47c:	71 05       	cpc	r23, r1
     47e:	08 f0       	brcs	.+2      	; 0x482 <writeChar+0x8>
     480:	6e c0       	rjmp	.+220    	; 0x55e <__stack+0x5f>
     482:	80 33       	cpi	r24, 0x30	; 48
     484:	08 f4       	brcc	.+2      	; 0x488 <writeChar+0xe>
     486:	6b c0       	rjmp	.+214    	; 0x55e <__stack+0x5f>
     488:	8a 33       	cpi	r24, 0x3A	; 58
     48a:	08 f0       	brcs	.+2      	; 0x48e <writeChar+0x14>
     48c:	68 c0       	rjmp	.+208    	; 0x55e <__stack+0x5f>
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
     48e:	fb 01       	movw	r30, r22
     490:	e8 5f       	subi	r30, 0xF8	; 248
     492:	fe 4f       	sbci	r31, 0xFE	; 254
     494:	e0 81       	ld	r30, Z
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	e4 51       	subi	r30, 0x14	; 20
     49a:	ff 4f       	sbci	r31, 0xFF	; 255
	
	int number = (int)ch - 48;
     49c:	a8 2f       	mov	r26, r24
     49e:	b0 e0       	ldi	r27, 0x00	; 0
     4a0:	d0 97       	sbiw	r26, 0x30	; 48
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
     4a2:	61 70       	andi	r22, 0x01	; 1
     4a4:	70 78       	andi	r23, 0x80	; 128
     4a6:	77 23       	and	r23, r23
     4a8:	34 f4       	brge	.+12     	; 0x4b6 <writeChar+0x3c>
     4aa:	61 50       	subi	r22, 0x01	; 1
     4ac:	71 09       	sbc	r23, r1
     4ae:	6e 6f       	ori	r22, 0xFE	; 254
     4b0:	7f 6f       	ori	r23, 0xFF	; 255
     4b2:	6f 5f       	subi	r22, 0xFF	; 255
     4b4:	7f 4f       	sbci	r23, 0xFF	; 255
     4b6:	61 30       	cpi	r22, 0x01	; 1
     4b8:	71 05       	cpc	r23, r1
     4ba:	71 f4       	brne	.+28     	; 0x4d8 <writeChar+0x5e>
		shift = 4;
		lcd_base[0]  = lcd_base[0]  & 0x0F;
     4bc:	80 81       	ld	r24, Z
     4be:	8f 70       	andi	r24, 0x0F	; 15
     4c0:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0x0F;
     4c2:	85 81       	ldd	r24, Z+5	; 0x05
     4c4:	8f 70       	andi	r24, 0x0F	; 15
     4c6:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0x0F;
     4c8:	82 85       	ldd	r24, Z+10	; 0x0a
     4ca:	8f 70       	andi	r24, 0x0F	; 15
     4cc:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0x0F;
     4ce:	87 85       	ldd	r24, Z+15	; 0x0f
     4d0:	8f 70       	andi	r24, 0x0F	; 15
     4d2:	87 87       	std	Z+15, r24	; 0x0f
	
	int number = (int)ch - 48;
	int shift = 0;
	/*Clears the part of the display we want to write onto */
	if (pos % 2 == 1){
		shift = 4;
     4d4:	24 e0       	ldi	r18, 0x04	; 4
     4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <writeChar+0x78>
		lcd_base[0]  = lcd_base[0]  & 0x0F;
		lcd_base[5]  = lcd_base[5]  & 0x0F;
		lcd_base[10] = lcd_base[10] & 0x0F;
		lcd_base[15] = lcd_base[15] & 0x0F;
		}else{
		lcd_base[0]  = lcd_base[0]  & 0xF0;
     4d8:	80 81       	ld	r24, Z
     4da:	80 7f       	andi	r24, 0xF0	; 240
     4dc:	80 83       	st	Z, r24
		lcd_base[5]  = lcd_base[5]  & 0xF0;
     4de:	85 81       	ldd	r24, Z+5	; 0x05
     4e0:	80 7f       	andi	r24, 0xF0	; 240
     4e2:	85 83       	std	Z+5, r24	; 0x05
		lcd_base[10] = lcd_base[10] & 0xF0;
     4e4:	82 85       	ldd	r24, Z+10	; 0x0a
     4e6:	80 7f       	andi	r24, 0xF0	; 240
     4e8:	82 87       	std	Z+10, r24	; 0x0a
		lcd_base[15] = lcd_base[15] & 0xF0;
     4ea:	87 85       	ldd	r24, Z+15	; 0x0f
     4ec:	80 7f       	andi	r24, 0xF0	; 240
     4ee:	87 87       	std	Z+15, r24	; 0x0f
		return;
	}
	volatile uint8_t *lcd_base = &LCDDR0 + offsetPos[pos];
	
	int number = (int)ch - 48;
	int shift = 0;
     4f0:	20 e0       	ldi	r18, 0x00	; 0
		lcd_base[5]  = lcd_base[5]  & 0xF0;
		lcd_base[10] = lcd_base[10] & 0xF0;
		lcd_base[15] = lcd_base[15] & 0xF0;
	}
	/*Writes to the display*/
	lcd_base[0]  = charCodes[number][0]<<shift | lcd_base[0] ;
     4f2:	aa 0f       	add	r26, r26
     4f4:	bb 1f       	adc	r27, r27
     4f6:	aa 0f       	add	r26, r26
     4f8:	bb 1f       	adc	r27, r27
     4fa:	a0 5f       	subi	r26, 0xF0	; 240
     4fc:	be 4f       	sbci	r27, 0xFE	; 254
     4fe:	8c 91       	ld	r24, X
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	02 2e       	mov	r0, r18
     504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xb>
     506:	88 0f       	add	r24, r24
     508:	99 1f       	adc	r25, r25
     50a:	0a 94       	dec	r0
     50c:	e2 f7       	brpl	.-8      	; 0x506 <__stack+0x7>
     50e:	90 81       	ld	r25, Z
     510:	89 2b       	or	r24, r25
     512:	80 83       	st	Z, r24
	lcd_base[5]  = charCodes[number][1]<<shift | lcd_base[5] ;
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	8c 91       	ld	r24, X
     518:	11 97       	sbiw	r26, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	02 2e       	mov	r0, r18
     51e:	02 c0       	rjmp	.+4      	; 0x524 <__stack+0x25>
     520:	88 0f       	add	r24, r24
     522:	99 1f       	adc	r25, r25
     524:	0a 94       	dec	r0
     526:	e2 f7       	brpl	.-8      	; 0x520 <__stack+0x21>
     528:	95 81       	ldd	r25, Z+5	; 0x05
     52a:	89 2b       	or	r24, r25
     52c:	85 83       	std	Z+5, r24	; 0x05
	lcd_base[10] = charCodes[number][2]<<shift | lcd_base[10];
     52e:	12 96       	adiw	r26, 0x02	; 2
     530:	8c 91       	ld	r24, X
     532:	12 97       	sbiw	r26, 0x02	; 2
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	02 2e       	mov	r0, r18
     538:	02 c0       	rjmp	.+4      	; 0x53e <__stack+0x3f>
     53a:	88 0f       	add	r24, r24
     53c:	99 1f       	adc	r25, r25
     53e:	0a 94       	dec	r0
     540:	e2 f7       	brpl	.-8      	; 0x53a <__stack+0x3b>
     542:	92 85       	ldd	r25, Z+10	; 0x0a
     544:	89 2b       	or	r24, r25
     546:	82 87       	std	Z+10, r24	; 0x0a
	lcd_base[15] = charCodes[number][3]<<shift | lcd_base[15];
     548:	13 96       	adiw	r26, 0x03	; 3
     54a:	8c 91       	ld	r24, X
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	02 c0       	rjmp	.+4      	; 0x554 <__stack+0x55>
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	2a 95       	dec	r18
     556:	e2 f7       	brpl	.-8      	; 0x550 <__stack+0x51>
     558:	97 85       	ldd	r25, Z+15	; 0x0f
     55a:	89 2b       	or	r24, r25
     55c:	87 87       	std	Z+15, r24	; 0x0f
     55e:	08 95       	ret

00000560 <printAt>:
}
	
int printAt(LCD_Driver *self, const int map) {
     560:	ef 92       	push	r14
     562:	ff 92       	push	r15
     564:	0f 93       	push	r16
     566:	1f 93       	push	r17
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
	union PrintPun p = {.map = map};
	int pp;
	pp = p.args.pos;
     56c:	c6 2f       	mov	r28, r22
     56e:	cc 1f       	adc	r28, r28
     570:	cc 27       	eor	r28, r28
     572:	cc 1f       	adc	r28, r28
     574:	73 70       	andi	r23, 0x03	; 3
     576:	77 0f       	add	r23, r23
     578:	7c 2b       	or	r23, r28
     57a:	c7 2f       	mov	r28, r23
     57c:	d0 e0       	ldi	r29, 0x00	; 0
	int num = p.args.num;
     57e:	6f 77       	andi	r22, 0x7F	; 127
     580:	06 2f       	mov	r16, r22
     582:	10 e0       	ldi	r17, 0x00	; 0
	writeChar( (num % 100) / 10 + '0', pp);
     584:	c8 01       	movw	r24, r16
     586:	64 e6       	ldi	r22, 0x64	; 100
     588:	70 e0       	ldi	r23, 0x00	; 0
     58a:	0e 94 21 11 	call	0x2242	; 0x2242 <__divmodhi4>
     58e:	0f 2e       	mov	r0, r31
     590:	fa e0       	ldi	r31, 0x0A	; 10
     592:	ef 2e       	mov	r14, r31
     594:	f1 2c       	mov	r15, r1
     596:	f0 2d       	mov	r31, r0
     598:	b7 01       	movw	r22, r14
     59a:	0e 94 21 11 	call	0x2242	; 0x2242 <__divmodhi4>
     59e:	86 2f       	mov	r24, r22
     5a0:	be 01       	movw	r22, r28
     5a2:	80 5d       	subi	r24, 0xD0	; 208
     5a4:	0e 94 3d 02 	call	0x47a	; 0x47a <writeChar>
	pp++;
     5a8:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     5aa:	c8 01       	movw	r24, r16
     5ac:	b7 01       	movw	r22, r14
     5ae:	0e 94 21 11 	call	0x2242	; 0x2242 <__divmodhi4>
     5b2:	be 01       	movw	r22, r28
     5b4:	80 5d       	subi	r24, 0xD0	; 208
     5b6:	0e 94 3d 02 	call	0x47a	; 0x47a <writeChar>
	
	return 0;
}
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	1f 91       	pop	r17
     5c4:	0f 91       	pop	r16
     5c6:	ff 90       	pop	r15
     5c8:	ef 90       	pop	r14
     5ca:	08 95       	ret

000005cc <main>:
#include "InteruptHandler.h"



int main(void)
{    
     5cc:	0f 93       	push	r16
     5ce:	1f 93       	push	r17
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	c0 54       	subi	r28, 0x40	; 64
     5da:	d1 09       	sbc	r29, r1
     5dc:	0f b6       	in	r0, 0x3f	; 63
     5de:	f8 94       	cli
     5e0:	de bf       	out	0x3e, r29	; 62
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	cd bf       	out	0x3d, r28	; 61
	INIT();
     5e6:	0e 94 36 02 	call	0x46c	; 0x46c <INIT>
	PulseController pulseController = initPulseController();
     5ea:	1a 82       	std	Y+2, r1	; 0x02
     5ec:	19 82       	std	Y+1, r1	; 0x01
     5ee:	1c 82       	std	Y+4, r1	; 0x04
     5f0:	1b 82       	std	Y+3, r1	; 0x03
	LCD_Driver display = initLCD_Driver();
     5f2:	1e 82       	std	Y+6, r1	; 0x06
     5f4:	1d 82       	std	Y+5, r1	; 0x05
     5f6:	18 86       	std	Y+8, r1	; 0x08
     5f8:	1f 82       	std	Y+7, r1	; 0x07
	PulseGenerator pulseLeft = initPulseGenerator(0, 1, 1, &pulseController, &display);
     5fa:	1a 86       	std	Y+10, r1	; 0x0a
     5fc:	19 86       	std	Y+9, r1	; 0x09
     5fe:	1c 86       	std	Y+12, r1	; 0x0c
     600:	1b 86       	std	Y+11, r1	; 0x0b
     602:	1e 86       	std	Y+14, r1	; 0x0e
     604:	1d 86       	std	Y+13, r1	; 0x0d
     606:	18 8a       	std	Y+16, r1	; 0x10
     608:	1f 86       	std	Y+15, r1	; 0x0f
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	9a 8b       	std	Y+18, r25	; 0x12
     610:	89 8b       	std	Y+17, r24	; 0x11
     612:	9c 8b       	std	Y+20, r25	; 0x14
     614:	8b 8b       	std	Y+19, r24	; 0x13
     616:	9e 01       	movw	r18, r28
     618:	2f 5f       	subi	r18, 0xFF	; 255
     61a:	3f 4f       	sbci	r19, 0xFF	; 255
     61c:	3e 8b       	std	Y+22, r19	; 0x16
     61e:	2d 8b       	std	Y+21, r18	; 0x15
     620:	ce 01       	movw	r24, r28
     622:	05 96       	adiw	r24, 0x05	; 5
     624:	98 8f       	std	Y+24, r25	; 0x18
     626:	8f 8b       	std	Y+23, r24	; 0x17
	PulseGenerator pulseRight = initPulseGenerator(0, 4, 3, &pulseController, &display);
     628:	1a 8e       	std	Y+26, r1	; 0x1a
     62a:	19 8e       	std	Y+25, r1	; 0x19
     62c:	1c 8e       	std	Y+28, r1	; 0x1c
     62e:	1b 8e       	std	Y+27, r1	; 0x1b
     630:	1e 8e       	std	Y+30, r1	; 0x1e
     632:	1d 8e       	std	Y+29, r1	; 0x1d
     634:	18 a2       	std	Y+32, r1	; 0x20
     636:	1f 8e       	std	Y+31, r1	; 0x1f
     638:	44 e0       	ldi	r20, 0x04	; 4
     63a:	50 e0       	ldi	r21, 0x00	; 0
     63c:	5a a3       	std	Y+34, r21	; 0x22
     63e:	49 a3       	std	Y+33, r20	; 0x21
     640:	43 e0       	ldi	r20, 0x03	; 3
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	5c a3       	std	Y+36, r21	; 0x24
     646:	4b a3       	std	Y+35, r20	; 0x23
     648:	3e a3       	std	Y+38, r19	; 0x26
     64a:	2d a3       	std	Y+37, r18	; 0x25
     64c:	98 a7       	std	Y+40, r25	; 0x28
     64e:	8f a3       	std	Y+39, r24	; 0x27
	GUI gui = initGUI(&pulseLeft, &pulseRight);
     650:	1a a6       	std	Y+42, r1	; 0x2a
     652:	19 a6       	std	Y+41, r1	; 0x29
     654:	1c a6       	std	Y+44, r1	; 0x2c
     656:	1b a6       	std	Y+43, r1	; 0x2b
     658:	1d a6       	std	Y+45, r1	; 0x2d
     65a:	04 96       	adiw	r24, 0x04	; 4
     65c:	9f a7       	std	Y+47, r25	; 0x2f
     65e:	8e a7       	std	Y+46, r24	; 0x2e
     660:	40 96       	adiw	r24, 0x10	; 16
     662:	99 ab       	std	Y+49, r25	; 0x31
     664:	88 ab       	std	Y+48, r24	; 0x30
	Joystick joy = initJoystick(&gui);
     666:	fe 01       	movw	r30, r28
     668:	f2 96       	adiw	r30, 0x32	; 50
     66a:	88 e0       	ldi	r24, 0x08	; 8
     66c:	df 01       	movw	r26, r30
     66e:	1d 92       	st	X+, r1
     670:	8a 95       	dec	r24
     672:	e9 f7       	brne	.-6      	; 0x66e <main+0xa2>
     674:	8e 01       	movw	r16, r28
     676:	07 5d       	subi	r16, 0xD7	; 215
     678:	1f 4f       	sbci	r17, 0xFF	; 255
     67a:	1f ab       	std	Y+55, r17	; 0x37
     67c:	0e ab       	std	Y+54, r16	; 0x36
	InterruptHandler inter = initInterruptHandler(&joy);
     67e:	1b ae       	std	Y+59, r1	; 0x3b
     680:	1a ae       	std	Y+58, r1	; 0x3a
     682:	1d ae       	std	Y+61, r1	; 0x3d
     684:	1c ae       	std	Y+60, r1	; 0x3c
     686:	ff af       	std	Y+63, r31	; 0x3f
     688:	ee af       	std	Y+62, r30	; 0x3e
     68a:	21 96       	adiw	r28, 0x01	; 1
     68c:	1f ae       	std	Y+63, r1	; 0x3f
     68e:	21 97       	sbiw	r28, 0x01	; 1
	INSTALL(&inter, Switch, IRQ_PCINT0);
     690:	41 e0       	ldi	r20, 0x01	; 1
     692:	6d e4       	ldi	r22, 0x4D	; 77
     694:	70 e0       	ldi	r23, 0x00	; 0
     696:	ce 01       	movw	r24, r28
     698:	ca 96       	adiw	r24, 0x3a	; 58
     69a:	0e 94 ef 10 	call	0x21de	; 0x21de <install>
	INSTALL(&inter, Change, IRQ_PCINT1);
     69e:	42 e0       	ldi	r20, 0x02	; 2
     6a0:	65 e7       	ldi	r22, 0x75	; 117
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	ce 01       	movw	r24, r28
     6a6:	ca 96       	adiw	r24, 0x3a	; 58
     6a8:	0e 94 ef 10 	call	0x21de	; 0x21de <install>
	return TINYTIMBER(&gui, startPulse, 0);
     6ac:	40 e0       	ldi	r20, 0x00	; 0
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	71 e0       	ldi	r23, 0x01	; 1
     6b4:	c8 01       	movw	r24, r16
     6b6:	0e 94 0a 11 	call	0x2214	; 0x2214 <tinytimber>
     6ba:	c0 5c       	subi	r28, 0xC0	; 192
     6bc:	df 4f       	sbci	r29, 0xFF	; 255
     6be:	0f b6       	in	r0, 0x3f	; 63
     6c0:	f8 94       	cli
     6c2:	de bf       	out	0x3e, r29	; 62
     6c4:	0f be       	out	0x3f, r0	; 63
     6c6:	cd bf       	out	0x3d, r28	; 61
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	0f 91       	pop	r16
     6d0:	08 95       	ret

000006d2 <sendSignal>:
#include "PulseController.h"
#include <avr/io.h>
#include "LCD_Driver.h"

int sendSignal(PulseController *self, int pin){
	if(pin == 1){
     6d2:	61 30       	cpi	r22, 0x01	; 1
     6d4:	71 05       	cpc	r23, r1
     6d6:	29 f4       	brne	.+10     	; 0x6e2 <sendSignal+0x10>
		PORTE ^= (1 << PE4);
     6d8:	9e b1       	in	r25, 0x0e	; 14
     6da:	80 e1       	ldi	r24, 0x10	; 16
     6dc:	89 27       	eor	r24, r25
     6de:	8e b9       	out	0x0e, r24	; 14
     6e0:	07 c0       	rjmp	.+14     	; 0x6f0 <sendSignal+0x1e>
		}else if(pin == 3){
     6e2:	63 30       	cpi	r22, 0x03	; 3
     6e4:	71 05       	cpc	r23, r1
     6e6:	21 f4       	brne	.+8      	; 0x6f0 <sendSignal+0x1e>
		PORTE ^= (1 << PE6);
     6e8:	9e b1       	in	r25, 0x0e	; 14
     6ea:	80 e4       	ldi	r24, 0x40	; 64
     6ec:	89 27       	eor	r24, r25
     6ee:	8e b9       	out	0x0e, r24	; 14
	}
	
	LCDDR18 ^= 1;
     6f0:	ee ef       	ldi	r30, 0xFE	; 254
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	90 81       	ld	r25, Z
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	89 27       	eor	r24, r25
     6fa:	80 83       	st	Z, r24
	return 0;
}
     6fc:	80 e0       	ldi	r24, 0x00	; 0
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	08 95       	ret

00000702 <setLow>:

int setLow(PulseController *self, int pin){
	if(pin == 1){
     702:	61 30       	cpi	r22, 0x01	; 1
     704:	71 05       	cpc	r23, r1
     706:	11 f4       	brne	.+4      	; 0x70c <setLow+0xa>
		PORTE = (0 << PE4);
     708:	1e b8       	out	0x0e, r1	; 14
     70a:	04 c0       	rjmp	.+8      	; 0x714 <setLow+0x12>
		}else if(pin == 3){
     70c:	63 30       	cpi	r22, 0x03	; 3
     70e:	71 05       	cpc	r23, r1
     710:	09 f4       	brne	.+2      	; 0x714 <setLow+0x12>
		PORTE = (0 << PE6);
     712:	1e b8       	out	0x0e, r1	; 14
	}
	return 0;
     714:	80 e0       	ldi	r24, 0x00	; 0
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	08 95       	ret

0000071a <generator>:
	ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
	
	return 0;
}

int generator(PulseGenerator *self, int unused){
     71a:	cf 92       	push	r12
     71c:	df 92       	push	r13
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	ec 01       	movw	r28, r24
	if(self->currentFreq != 0){ //Not zero
     72c:	8c 81       	ldd	r24, Y+4	; 0x04
     72e:	9d 81       	ldd	r25, Y+5	; 0x05
     730:	89 2b       	or	r24, r25
     732:	f1 f1       	breq	.+124    	; 0x7b0 <generator+0x96>
		ASYNC(self->outPut, sendSignal, self->pin);
     734:	0c 85       	ldd	r16, Y+12	; 0x0c
     736:	1d 85       	ldd	r17, Y+13	; 0x0d
     738:	ca 84       	ldd	r12, Y+10	; 0x0a
     73a:	db 84       	ldd	r13, Y+11	; 0x0b
     73c:	0f 2e       	mov	r0, r31
     73e:	f9 e6       	ldi	r31, 0x69	; 105
     740:	ef 2e       	mov	r14, r31
     742:	f3 e0       	ldi	r31, 0x03	; 3
     744:	ff 2e       	mov	r15, r31
     746:	f0 2d       	mov	r31, r0
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	a9 01       	movw	r20, r18
     74e:	60 e0       	ldi	r22, 0x00	; 0
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	cb 01       	movw	r24, r22
     754:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
		int fre = (500/self->currentFreq);
     758:	6c 81       	ldd	r22, Y+4	; 0x04
     75a:	7d 81       	ldd	r23, Y+5	; 0x05
     75c:	84 ef       	ldi	r24, 0xF4	; 244
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 21 11 	call	0x2242	; 0x2242 <__divmodhi4>
		AFTER(MSEC(fre), self, generator, 0);
     764:	2d e7       	ldi	r18, 0x7D	; 125
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	db 01       	movw	r26, r22
     76a:	0e 94 35 11 	call	0x226a	; 0x226a <__usmulhisi3>
     76e:	8b 01       	movw	r16, r22
     770:	9c 01       	movw	r18, r24
     772:	99 23       	and	r25, r25
     774:	24 f4       	brge	.+8      	; 0x77e <generator+0x64>
     776:	0d 5f       	subi	r16, 0xFD	; 253
     778:	1f 4f       	sbci	r17, 0xFF	; 255
     77a:	2f 4f       	sbci	r18, 0xFF	; 255
     77c:	3f 4f       	sbci	r19, 0xFF	; 255
     77e:	c9 01       	movw	r24, r18
     780:	b8 01       	movw	r22, r16
     782:	95 95       	asr	r25
     784:	87 95       	ror	r24
     786:	77 95       	ror	r23
     788:	67 95       	ror	r22
     78a:	95 95       	asr	r25
     78c:	87 95       	ror	r24
     78e:	77 95       	ror	r23
     790:	67 95       	ror	r22
     792:	c1 2c       	mov	r12, r1
     794:	d1 2c       	mov	r13, r1
     796:	0f 2e       	mov	r0, r31
     798:	fd e8       	ldi	r31, 0x8D	; 141
     79a:	ef 2e       	mov	r14, r31
     79c:	f3 e0       	ldi	r31, 0x03	; 3
     79e:	ff 2e       	mov	r15, r31
     7a0:	f0 2d       	mov	r31, r0
     7a2:	8e 01       	movw	r16, r28
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	30 e0       	ldi	r19, 0x00	; 0
     7a8:	a9 01       	movw	r20, r18
     7aa:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
     7ae:	22 c0       	rjmp	.+68     	; 0x7f4 <generator+0xda>
	}else{ //Zero
		ASYNC(self, setLow, self->pin);
     7b0:	ca 84       	ldd	r12, Y+10	; 0x0a
     7b2:	db 84       	ldd	r13, Y+11	; 0x0b
     7b4:	0f 2e       	mov	r0, r31
     7b6:	f1 e8       	ldi	r31, 0x81	; 129
     7b8:	ef 2e       	mov	r14, r31
     7ba:	f3 e0       	ldi	r31, 0x03	; 3
     7bc:	ff 2e       	mov	r15, r31
     7be:	f0 2d       	mov	r31, r0
     7c0:	8e 01       	movw	r16, r28
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	a9 01       	movw	r20, r18
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	cb 01       	movw	r24, r22
     7ce:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
		AFTER(MSEC(500), self, generator, 0);
     7d2:	c1 2c       	mov	r12, r1
     7d4:	d1 2c       	mov	r13, r1
     7d6:	0f 2e       	mov	r0, r31
     7d8:	fd e8       	ldi	r31, 0x8D	; 141
     7da:	ef 2e       	mov	r14, r31
     7dc:	f3 e0       	ldi	r31, 0x03	; 3
     7de:	ff 2e       	mov	r15, r31
     7e0:	f0 2d       	mov	r31, r0
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	a9 01       	movw	r20, r18
     7e8:	69 e0       	ldi	r22, 0x09	; 9
     7ea:	7d e3       	ldi	r23, 0x3D	; 61
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}

	return 0;
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
     808:	08 95       	ret

0000080a <increase>:
#include "PulseGenerator.h"

int increase(PulseGenerator *self, int unused){
     80a:	cf 92       	push	r12
     80c:	df 92       	push	r13
     80e:	ef 92       	push	r14
     810:	ff 92       	push	r15
     812:	0f 93       	push	r16
     814:	1f 93       	push	r17
	if (!(self->currentFreq >= 99)){
     816:	fc 01       	movw	r30, r24
     818:	c4 80       	ldd	r12, Z+4	; 0x04
     81a:	d5 80       	ldd	r13, Z+5	; 0x05
     81c:	f3 e6       	ldi	r31, 0x63	; 99
     81e:	cf 16       	cp	r12, r31
     820:	d1 04       	cpc	r13, r1
     822:	0c f5       	brge	.+66     	; 0x866 <increase+0x5c>
     824:	fc 01       	movw	r30, r24
		self->currentFreq += 1;
     826:	96 01       	movw	r18, r12
     828:	2f 5f       	subi	r18, 0xFF	; 255
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	35 83       	std	Z+5, r19	; 0x05
     82e:	24 83       	std	Z+4, r18	; 0x04
		ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     830:	d0 84       	ldd	r13, Z+8	; 0x08
     832:	cd 2c       	mov	r12, r13
     834:	c7 94       	ror	r12
     836:	cc 24       	eor	r12, r12
     838:	c7 94       	ror	r12
     83a:	2f 77       	andi	r18, 0x7F	; 127
     83c:	c2 2a       	or	r12, r18
     83e:	8d 2d       	mov	r24, r13
     840:	86 95       	lsr	r24
     842:	83 70       	andi	r24, 0x03	; 3
     844:	d8 2e       	mov	r13, r24
     846:	06 85       	ldd	r16, Z+14	; 0x0e
     848:	17 85       	ldd	r17, Z+15	; 0x0f
     84a:	0f 2e       	mov	r0, r31
     84c:	f0 eb       	ldi	r31, 0xB0	; 176
     84e:	ef 2e       	mov	r14, r31
     850:	f2 e0       	ldi	r31, 0x02	; 2
     852:	ff 2e       	mov	r15, r31
     854:	f0 2d       	mov	r31, r0
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	a9 01       	movw	r20, r18
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	70 e0       	ldi	r23, 0x00	; 0
     860:	cb 01       	movw	r24, r22
     862:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	return 0;
}
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	ff 90       	pop	r15
     870:	ef 90       	pop	r14
     872:	df 90       	pop	r13
     874:	cf 90       	pop	r12
     876:	08 95       	ret

00000878 <decrease>:

int decrease(PulseGenerator *self, int unused){
     878:	cf 92       	push	r12
     87a:	df 92       	push	r13
     87c:	ef 92       	push	r14
     87e:	ff 92       	push	r15
     880:	0f 93       	push	r16
     882:	1f 93       	push	r17
     884:	fc 01       	movw	r30, r24
	if (self->currentFreq > 0) self->currentFreq -= 1;
     886:	84 81       	ldd	r24, Z+4	; 0x04
     888:	95 81       	ldd	r25, Z+5	; 0x05
     88a:	18 16       	cp	r1, r24
     88c:	19 06       	cpc	r1, r25
     88e:	1c f4       	brge	.+6      	; 0x896 <decrease+0x1e>
     890:	01 97       	sbiw	r24, 0x01	; 1
     892:	95 83       	std	Z+5, r25	; 0x05
     894:	84 83       	std	Z+4, r24	; 0x04
	
	if(self->currentFreq == 0){
		//ASYNC(self, setLow, self->pin);
		
	}
	ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     896:	94 81       	ldd	r25, Z+4	; 0x04
     898:	d0 84       	ldd	r13, Z+8	; 0x08
     89a:	8d 2d       	mov	r24, r13
     89c:	87 95       	ror	r24
     89e:	88 27       	eor	r24, r24
     8a0:	87 95       	ror	r24
     8a2:	9f 77       	andi	r25, 0x7F	; 127
     8a4:	c9 2e       	mov	r12, r25
     8a6:	c8 2a       	or	r12, r24
     8a8:	8d 2d       	mov	r24, r13
     8aa:	86 95       	lsr	r24
     8ac:	83 70       	andi	r24, 0x03	; 3
     8ae:	d8 2e       	mov	r13, r24
     8b0:	06 85       	ldd	r16, Z+14	; 0x0e
     8b2:	17 85       	ldd	r17, Z+15	; 0x0f
     8b4:	0f 2e       	mov	r0, r31
     8b6:	f0 eb       	ldi	r31, 0xB0	; 176
     8b8:	ef 2e       	mov	r14, r31
     8ba:	f2 e0       	ldi	r31, 0x02	; 2
     8bc:	ff 2e       	mov	r15, r31
     8be:	f0 2d       	mov	r31, r0
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	a9 01       	movw	r20, r18
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	cb 01       	movw	r24, r22
     8cc:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	
	return 0;
}
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	1f 91       	pop	r17
     8d6:	0f 91       	pop	r16
     8d8:	ff 90       	pop	r15
     8da:	ef 90       	pop	r14
     8dc:	df 90       	pop	r13
     8de:	cf 90       	pop	r12
     8e0:	08 95       	ret

000008e2 <reset>:

int reset(PulseGenerator *self, int unused){
     8e2:	cf 92       	push	r12
     8e4:	df 92       	push	r13
     8e6:	ef 92       	push	r14
     8e8:	ff 92       	push	r15
     8ea:	0f 93       	push	r16
     8ec:	1f 93       	push	r17
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	ec 01       	movw	r28, r24
	if (self->currentFreq == 0){
     8f4:	8c 81       	ldd	r24, Y+4	; 0x04
     8f6:	9d 81       	ldd	r25, Y+5	; 0x05
     8f8:	00 97       	sbiw	r24, 0x00	; 0
     8fa:	29 f4       	brne	.+10     	; 0x906 <reset+0x24>
		self->currentFreq = self->lastFreq;
     8fc:	8e 81       	ldd	r24, Y+6	; 0x06
     8fe:	9f 81       	ldd	r25, Y+7	; 0x07
     900:	9d 83       	std	Y+5, r25	; 0x05
     902:	8c 83       	std	Y+4, r24	; 0x04
     904:	15 c0       	rjmp	.+42     	; 0x930 <reset+0x4e>
	}
	else{
		self->lastFreq = self->currentFreq;
     906:	9f 83       	std	Y+7, r25	; 0x07
     908:	8e 83       	std	Y+6, r24	; 0x06
		self->currentFreq = 0;
     90a:	1d 82       	std	Y+5, r1	; 0x05
     90c:	1c 82       	std	Y+4, r1	; 0x04
		ASYNC(self, setLow, self->pin);
     90e:	ca 84       	ldd	r12, Y+10	; 0x0a
     910:	db 84       	ldd	r13, Y+11	; 0x0b
     912:	0f 2e       	mov	r0, r31
     914:	f1 e8       	ldi	r31, 0x81	; 129
     916:	ef 2e       	mov	r14, r31
     918:	f3 e0       	ldi	r31, 0x03	; 3
     91a:	ff 2e       	mov	r15, r31
     91c:	f0 2d       	mov	r31, r0
     91e:	8e 01       	movw	r16, r28
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	a9 01       	movw	r20, r18
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	cb 01       	movw	r24, r22
     92c:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	}
	ASYNC(self->display, printAt, PACK_PRINT(self->currentFreq, self->pos));
     930:	9c 81       	ldd	r25, Y+4	; 0x04
     932:	d8 84       	ldd	r13, Y+8	; 0x08
     934:	8d 2d       	mov	r24, r13
     936:	87 95       	ror	r24
     938:	88 27       	eor	r24, r24
     93a:	87 95       	ror	r24
     93c:	9f 77       	andi	r25, 0x7F	; 127
     93e:	c9 2e       	mov	r12, r25
     940:	c8 2a       	or	r12, r24
     942:	8d 2d       	mov	r24, r13
     944:	86 95       	lsr	r24
     946:	83 70       	andi	r24, 0x03	; 3
     948:	d8 2e       	mov	r13, r24
     94a:	0e 85       	ldd	r16, Y+14	; 0x0e
     94c:	1f 85       	ldd	r17, Y+15	; 0x0f
     94e:	0f 2e       	mov	r0, r31
     950:	f0 eb       	ldi	r31, 0xB0	; 176
     952:	ef 2e       	mov	r14, r31
     954:	f2 e0       	ldi	r31, 0x02	; 2
     956:	ff 2e       	mov	r15, r31
     958:	f0 2d       	mov	r31, r0
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	a9 01       	movw	r20, r18
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	cb 01       	movw	r24, r22
     966:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
	
	return 0;
}
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	df 91       	pop	r29
     970:	cf 91       	pop	r28
     972:	1f 91       	pop	r17
     974:	0f 91       	pop	r16
     976:	ff 90       	pop	r15
     978:	ef 90       	pop	r14
     97a:	df 90       	pop	r13
     97c:	cf 90       	pop	r12
     97e:	08 95       	ret

00000980 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     980:	cf 93       	push	r28
     982:	df 93       	push	r29
     984:	00 d0       	rcall	.+0      	; 0x986 <initialize+0x6>
     986:	00 d0       	rcall	.+0      	; 0x988 <initialize+0x8>
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	18 c0       	rjmp	.+48     	; 0x9c2 <initialize+0x42>
     992:	ac 01       	movw	r20, r24
     994:	4f 5f       	subi	r20, 0xFF	; 255
     996:	5f 4f       	sbci	r21, 0xFF	; 255
     998:	9a 01       	movw	r18, r20
     99a:	22 95       	swap	r18
     99c:	32 95       	swap	r19
     99e:	30 7f       	andi	r19, 0xF0	; 240
     9a0:	32 27       	eor	r19, r18
     9a2:	20 7f       	andi	r18, 0xF0	; 240
     9a4:	32 27       	eor	r19, r18
     9a6:	25 5e       	subi	r18, 0xE5	; 229
     9a8:	3d 4f       	sbci	r19, 0xFD	; 253
     9aa:	82 95       	swap	r24
     9ac:	92 95       	swap	r25
     9ae:	90 7f       	andi	r25, 0xF0	; 240
     9b0:	98 27       	eor	r25, r24
     9b2:	80 7f       	andi	r24, 0xF0	; 240
     9b4:	98 27       	eor	r25, r24
     9b6:	fc 01       	movw	r30, r24
     9b8:	e5 5e       	subi	r30, 0xE5	; 229
     9ba:	fd 4f       	sbci	r31, 0xFD	; 253
     9bc:	31 83       	std	Z+1, r19	; 0x01
     9be:	20 83       	st	Z, r18
     9c0:	ca 01       	movw	r24, r20
     9c2:	8e 30       	cpi	r24, 0x0E	; 14
     9c4:	91 05       	cpc	r25, r1
     9c6:	2c f3       	brlt	.-54     	; 0x992 <initialize+0x12>
     9c8:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     9cc:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	15 c0       	rjmp	.+42     	; 0xa00 <initialize+0x80>
     9d6:	ac 01       	movw	r20, r24
     9d8:	4f 5f       	subi	r20, 0xFF	; 255
     9da:	5f 4f       	sbci	r21, 0xFF	; 255
     9dc:	6d e1       	ldi	r22, 0x1D	; 29
     9de:	64 9f       	mul	r22, r20
     9e0:	90 01       	movw	r18, r0
     9e2:	65 9f       	mul	r22, r21
     9e4:	30 0d       	add	r19, r0
     9e6:	11 24       	eor	r1, r1
     9e8:	2a 59       	subi	r18, 0x9A	; 154
     9ea:	3e 4f       	sbci	r19, 0xFE	; 254
     9ec:	68 9f       	mul	r22, r24
     9ee:	f0 01       	movw	r30, r0
     9f0:	69 9f       	mul	r22, r25
     9f2:	f0 0d       	add	r31, r0
     9f4:	11 24       	eor	r1, r1
     9f6:	ea 59       	subi	r30, 0x9A	; 154
     9f8:	fe 4f       	sbci	r31, 0xFE	; 254
     9fa:	31 83       	std	Z+1, r19	; 0x01
     9fc:	20 83       	st	Z, r18
     9fe:	ca 01       	movw	r24, r20
     a00:	83 30       	cpi	r24, 0x03	; 3
     a02:	91 05       	cpc	r25, r1
     a04:	44 f3       	brlt	.-48     	; 0x9d6 <initialize+0x56>
     a06:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <threads+0x58>
     a0a:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <threads+0x57>
     a0e:	1a 82       	std	Y+2, r1	; 0x02
     a10:	19 82       	std	Y+1, r1	; 0x01
     a12:	32 c0       	rjmp	.+100    	; 0xa78 <initialize+0xf8>
     a14:	2d e1       	ldi	r18, 0x1D	; 29
     a16:	49 81       	ldd	r20, Y+1	; 0x01
     a18:	5a 81       	ldd	r21, Y+2	; 0x02
     a1a:	24 9f       	mul	r18, r20
     a1c:	c0 01       	movw	r24, r0
     a1e:	25 9f       	mul	r18, r21
     a20:	90 0d       	add	r25, r0
     a22:	11 24       	eor	r1, r1
     a24:	fc 01       	movw	r30, r24
     a26:	e4 59       	subi	r30, 0x94	; 148
     a28:	fe 4f       	sbci	r31, 0xFE	; 254
     a2a:	fc 83       	std	Y+4, r31	; 0x04
     a2c:	eb 83       	std	Y+3, r30	; 0x03
     a2e:	cf 01       	movw	r24, r30
     a30:	0e 94 5f 11 	call	0x22be	; 0x22be <setjmp>
     a34:	20 e6       	ldi	r18, 0x60	; 96
     a36:	49 81       	ldd	r20, Y+1	; 0x01
     a38:	5a 81       	ldd	r21, Y+2	; 0x02
     a3a:	24 9f       	mul	r18, r20
     a3c:	c0 01       	movw	r24, r0
     a3e:	25 9f       	mul	r18, r21
     a40:	90 0d       	add	r25, r0
     a42:	11 24       	eor	r1, r1
     a44:	89 59       	subi	r24, 0x99	; 153
     a46:	9c 4f       	sbci	r25, 0xFC	; 252
     a48:	eb 81       	ldd	r30, Y+3	; 0x03
     a4a:	fc 81       	ldd	r31, Y+4	; 0x04
     a4c:	91 8b       	std	Z+17, r25	; 0x11
     a4e:	80 8b       	std	Z+16, r24	; 0x10
     a50:	93 8b       	std	Z+19, r25	; 0x13
     a52:	82 8b       	std	Z+18, r24	; 0x12
     a54:	87 e9       	ldi	r24, 0x97	; 151
     a56:	90 e1       	ldi	r25, 0x10	; 16
     a58:	96 8b       	std	Z+22, r25	; 0x16
     a5a:	85 8b       	std	Z+21, r24	; 0x15
     a5c:	8d e1       	ldi	r24, 0x1D	; 29
     a5e:	84 9f       	mul	r24, r20
     a60:	f0 01       	movw	r30, r0
     a62:	85 9f       	mul	r24, r21
     a64:	f0 0d       	add	r31, r0
     a66:	11 24       	eor	r1, r1
     a68:	ea 59       	subi	r30, 0x9A	; 154
     a6a:	fe 4f       	sbci	r31, 0xFE	; 254
     a6c:	15 82       	std	Z+5, r1	; 0x05
     a6e:	14 82       	std	Z+4, r1	; 0x04
     a70:	4f 5f       	subi	r20, 0xFF	; 255
     a72:	5f 4f       	sbci	r21, 0xFF	; 255
     a74:	5a 83       	std	Y+2, r21	; 0x02
     a76:	49 83       	std	Y+1, r20	; 0x01
     a78:	29 81       	ldd	r18, Y+1	; 0x01
     a7a:	3a 81       	ldd	r19, Y+2	; 0x02
     a7c:	24 30       	cpi	r18, 0x04	; 4
     a7e:	31 05       	cpc	r19, r1
     a80:	4c f2       	brlt	.-110    	; 0xa14 <initialize+0x94>
     a82:	ee ef       	ldi	r30, 0xFE	; 254
     a84:	f1 e0       	ldi	r31, 0x01	; 1
     a86:	11 82       	std	Z+1, r1	; 0x01
     a88:	10 82       	st	Z, r1
     a8a:	15 82       	std	Z+5, r1	; 0x05
     a8c:	14 82       	std	Z+4, r1	; 0x04
     a8e:	13 82       	std	Z+3, r1	; 0x03
     a90:	12 82       	std	Z+2, r1	; 0x02
     a92:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a96:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a9a:	84 e0       	ldi	r24, 0x04	; 4
     a9c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	08 95       	ret

00000ab4 <dispatch>:
     ab4:	cf 93       	push	r28
     ab6:	df 93       	push	r29
     ab8:	00 d0       	rcall	.+0      	; 0xaba <dispatch+0x6>
     aba:	cd b7       	in	r28, 0x3d	; 61
     abc:	de b7       	in	r29, 0x3e	; 62
     abe:	9a 83       	std	Y+2, r25	; 0x02
     ac0:	89 83       	std	Y+1, r24	; 0x01
     ac2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ac6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aca:	06 96       	adiw	r24, 0x06	; 6
     acc:	0e 94 5f 11 	call	0x22be	; 0x22be <setjmp>
     ad0:	89 2b       	or	r24, r25
     ad2:	59 f4       	brne	.+22     	; 0xaea <dispatch+0x36>
     ad4:	89 81       	ldd	r24, Y+1	; 0x01
     ad6:	9a 81       	ldd	r25, Y+2	; 0x02
     ad8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     adc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     ae0:	61 e0       	ldi	r22, 0x01	; 1
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	06 96       	adiw	r24, 0x06	; 6
     ae6:	0e 94 7f 11 	call	0x22fe	; 0x22fe <longjmp>
     aea:	0f 90       	pop	r0
     aec:	0f 90       	pop	r0
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	08 95       	ret

00000af4 <enqueueByDeadline>:
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
     afc:	dc 01       	movw	r26, r24
     afe:	cb 01       	movw	r24, r22
     b00:	eb 01       	movw	r28, r22
     b02:	e8 81       	ld	r30, Y
     b04:	f9 81       	ldd	r31, Y+1	; 0x01
     b06:	c0 e0       	ldi	r28, 0x00	; 0
     b08:	d0 e0       	ldi	r29, 0x00	; 0
     b0a:	04 c0       	rjmp	.+8      	; 0xb14 <enqueueByDeadline+0x20>
     b0c:	ef 01       	movw	r28, r30
     b0e:	01 90       	ld	r0, Z+
     b10:	f0 81       	ld	r31, Z
     b12:	e0 2d       	mov	r30, r0
     b14:	30 97       	sbiw	r30, 0x00	; 0
     b16:	79 f0       	breq	.+30     	; 0xb36 <enqueueByDeadline+0x42>
     b18:	06 81       	ldd	r16, Z+6	; 0x06
     b1a:	17 81       	ldd	r17, Z+7	; 0x07
     b1c:	20 85       	ldd	r18, Z+8	; 0x08
     b1e:	31 85       	ldd	r19, Z+9	; 0x09
     b20:	16 96       	adiw	r26, 0x06	; 6
     b22:	4d 91       	ld	r20, X+
     b24:	5d 91       	ld	r21, X+
     b26:	6d 91       	ld	r22, X+
     b28:	7c 91       	ld	r23, X
     b2a:	19 97       	sbiw	r26, 0x09	; 9
     b2c:	40 17       	cp	r20, r16
     b2e:	51 07       	cpc	r21, r17
     b30:	62 07       	cpc	r22, r18
     b32:	73 07       	cpc	r23, r19
     b34:	5c f7       	brge	.-42     	; 0xb0c <enqueueByDeadline+0x18>
     b36:	11 96       	adiw	r26, 0x01	; 1
     b38:	fc 93       	st	X, r31
     b3a:	ee 93       	st	-X, r30
     b3c:	20 97       	sbiw	r28, 0x00	; 0
     b3e:	21 f4       	brne	.+8      	; 0xb48 <enqueueByDeadline+0x54>
     b40:	fc 01       	movw	r30, r24
     b42:	b1 83       	std	Z+1, r27	; 0x01
     b44:	a0 83       	st	Z, r26
     b46:	02 c0       	rjmp	.+4      	; 0xb4c <enqueueByDeadline+0x58>
     b48:	b9 83       	std	Y+1, r27	; 0x01
     b4a:	a8 83       	st	Y, r26
     b4c:	df 91       	pop	r29
     b4e:	cf 91       	pop	r28
     b50:	1f 91       	pop	r17
     b52:	0f 91       	pop	r16
     b54:	08 95       	ret

00000b56 <enqueueByBaseline>:
     b56:	0f 93       	push	r16
     b58:	1f 93       	push	r17
     b5a:	cf 93       	push	r28
     b5c:	df 93       	push	r29
     b5e:	dc 01       	movw	r26, r24
     b60:	cb 01       	movw	r24, r22
     b62:	eb 01       	movw	r28, r22
     b64:	e8 81       	ld	r30, Y
     b66:	f9 81       	ldd	r31, Y+1	; 0x01
     b68:	c0 e0       	ldi	r28, 0x00	; 0
     b6a:	d0 e0       	ldi	r29, 0x00	; 0
     b6c:	04 c0       	rjmp	.+8      	; 0xb76 <enqueueByBaseline+0x20>
     b6e:	ef 01       	movw	r28, r30
     b70:	01 90       	ld	r0, Z+
     b72:	f0 81       	ld	r31, Z
     b74:	e0 2d       	mov	r30, r0
     b76:	30 97       	sbiw	r30, 0x00	; 0
     b78:	79 f0       	breq	.+30     	; 0xb98 <enqueueByBaseline+0x42>
     b7a:	02 81       	ldd	r16, Z+2	; 0x02
     b7c:	13 81       	ldd	r17, Z+3	; 0x03
     b7e:	24 81       	ldd	r18, Z+4	; 0x04
     b80:	35 81       	ldd	r19, Z+5	; 0x05
     b82:	12 96       	adiw	r26, 0x02	; 2
     b84:	4d 91       	ld	r20, X+
     b86:	5d 91       	ld	r21, X+
     b88:	6d 91       	ld	r22, X+
     b8a:	7c 91       	ld	r23, X
     b8c:	15 97       	sbiw	r26, 0x05	; 5
     b8e:	40 17       	cp	r20, r16
     b90:	51 07       	cpc	r21, r17
     b92:	62 07       	cpc	r22, r18
     b94:	73 07       	cpc	r23, r19
     b96:	5c f7       	brge	.-42     	; 0xb6e <enqueueByBaseline+0x18>
     b98:	11 96       	adiw	r26, 0x01	; 1
     b9a:	fc 93       	st	X, r31
     b9c:	ee 93       	st	-X, r30
     b9e:	20 97       	sbiw	r28, 0x00	; 0
     ba0:	21 f4       	brne	.+8      	; 0xbaa <enqueueByBaseline+0x54>
     ba2:	fc 01       	movw	r30, r24
     ba4:	b1 83       	std	Z+1, r27	; 0x01
     ba6:	a0 83       	st	Z, r26
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <enqueueByBaseline+0x58>
     baa:	b9 83       	std	Y+1, r27	; 0x01
     bac:	a8 83       	st	Y, r26
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	1f 91       	pop	r17
     bb4:	0f 91       	pop	r16
     bb6:	08 95       	ret

00000bb8 <dequeue>:
     bb8:	dc 01       	movw	r26, r24
     bba:	ed 91       	ld	r30, X+
     bbc:	fc 91       	ld	r31, X
     bbe:	11 97       	sbiw	r26, 0x01	; 1
     bc0:	30 97       	sbiw	r30, 0x00	; 0
     bc2:	59 f4       	brne	.+22     	; 0xbda <dequeue+0x22>
     bc4:	8f ef       	ldi	r24, 0xFF	; 255
     bc6:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     bca:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     bce:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	83 bf       	out	0x33, r24	; 51
     bd6:	88 95       	sleep
     bd8:	fc cf       	rjmp	.-8      	; 0xbd2 <dequeue+0x1a>
     bda:	20 81       	ld	r18, Z
     bdc:	31 81       	ldd	r19, Z+1	; 0x01
     bde:	2d 93       	st	X+, r18
     be0:	3c 93       	st	X, r19
     be2:	cf 01       	movw	r24, r30
     be4:	08 95       	ret

00000be6 <insert>:
     be6:	fb 01       	movw	r30, r22
     be8:	20 81       	ld	r18, Z
     bea:	31 81       	ldd	r19, Z+1	; 0x01
     bec:	fc 01       	movw	r30, r24
     bee:	31 83       	std	Z+1, r19	; 0x01
     bf0:	20 83       	st	Z, r18
     bf2:	fb 01       	movw	r30, r22
     bf4:	91 83       	std	Z+1, r25	; 0x01
     bf6:	80 83       	st	Z, r24
     bf8:	08 95       	ret

00000bfa <push>:
     bfa:	fb 01       	movw	r30, r22
     bfc:	20 81       	ld	r18, Z
     bfe:	31 81       	ldd	r19, Z+1	; 0x01
     c00:	fc 01       	movw	r30, r24
     c02:	31 83       	std	Z+1, r19	; 0x01
     c04:	20 83       	st	Z, r18
     c06:	fb 01       	movw	r30, r22
     c08:	91 83       	std	Z+1, r25	; 0x01
     c0a:	80 83       	st	Z, r24
     c0c:	08 95       	ret

00000c0e <pop>:
     c0e:	dc 01       	movw	r26, r24
     c10:	ed 91       	ld	r30, X+
     c12:	fc 91       	ld	r31, X
     c14:	11 97       	sbiw	r26, 0x01	; 1
     c16:	20 81       	ld	r18, Z
     c18:	31 81       	ldd	r19, Z+1	; 0x01
     c1a:	2d 93       	st	X+, r18
     c1c:	3c 93       	st	X, r19
     c1e:	cf 01       	movw	r24, r30
     c20:	08 95       	ret

00000c22 <schedule>:
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     c2a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     c2e:	c2 81       	ldd	r28, Z+2	; 0x02
     c30:	d3 81       	ldd	r29, Z+3	; 0x03
     c32:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
     c36:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
     c3a:	30 97       	sbiw	r30, 0x00	; 0
     c3c:	19 f1       	breq	.+70     	; 0xc84 <schedule+0x62>
     c3e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     c42:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     c46:	89 2b       	or	r24, r25
     c48:	e9 f0       	breq	.+58     	; 0xc84 <schedule+0x62>
     c4a:	20 97       	sbiw	r28, 0x00	; 0
     c4c:	69 f0       	breq	.+26     	; 0xc68 <schedule+0x46>
     c4e:	86 81       	ldd	r24, Z+6	; 0x06
     c50:	97 81       	ldd	r25, Z+7	; 0x07
     c52:	a0 85       	ldd	r26, Z+8	; 0x08
     c54:	b1 85       	ldd	r27, Z+9	; 0x09
     c56:	4e 81       	ldd	r20, Y+6	; 0x06
     c58:	5f 81       	ldd	r21, Y+7	; 0x07
     c5a:	68 85       	ldd	r22, Y+8	; 0x08
     c5c:	79 85       	ldd	r23, Y+9	; 0x09
     c5e:	84 1b       	sub	r24, r20
     c60:	95 0b       	sbc	r25, r21
     c62:	a6 0b       	sbc	r26, r22
     c64:	b7 0b       	sbc	r27, r23
     c66:	72 f4       	brpl	.+28     	; 0xc84 <schedule+0x62>
     c68:	84 e0       	ldi	r24, 0x04	; 4
     c6a:	91 e0       	ldi	r25, 0x01	; 1
     c6c:	0e 94 07 06 	call	0xc0e	; 0xc0e <pop>
     c70:	62 e0       	ldi	r22, 0x02	; 2
     c72:	71 e0       	ldi	r23, 0x01	; 1
     c74:	0e 94 fd 05 	call	0xbfa	; 0xbfa <push>
     c78:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     c7c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     c80:	0e 94 5a 05 	call	0xab4	; 0xab4 <dispatch>
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <__vector_1>:
     c8a:	1f 92       	push	r1
     c8c:	0f 92       	push	r0
     c8e:	0f b6       	in	r0, 0x3f	; 63
     c90:	0f 92       	push	r0
     c92:	11 24       	eor	r1, r1
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	2f 93       	push	r18
     c9a:	3f 93       	push	r19
     c9c:	4f 93       	push	r20
     c9e:	5f 93       	push	r21
     ca0:	6f 93       	push	r22
     ca2:	7f 93       	push	r23
     ca4:	8f 93       	push	r24
     ca6:	9f 93       	push	r25
     ca8:	af 93       	push	r26
     caa:	bf 93       	push	r27
     cac:	ef 93       	push	r30
     cae:	ff 93       	push	r31
     cb0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     cb4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     cb8:	ac 01       	movw	r20, r24
     cba:	09 2e       	mov	r0, r25
     cbc:	00 0c       	add	r0, r0
     cbe:	66 0b       	sbc	r22, r22
     cc0:	77 0b       	sbc	r23, r23
     cc2:	9a 01       	movw	r18, r20
     cc4:	11 27       	eor	r17, r17
     cc6:	00 27       	eor	r16, r16
     cc8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ccc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	40 2b       	or	r20, r16
     cd6:	51 2b       	or	r21, r17
     cd8:	62 2b       	or	r22, r18
     cda:	73 2b       	or	r23, r19
     cdc:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     ce0:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     ce4:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     ce8:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     cec:	b0 9b       	sbis	0x16, 0	; 22
     cee:	1a c0       	rjmp	.+52     	; 0xd24 <__vector_1+0x9a>
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	09 2e       	mov	r0, r25
     cf4:	00 0c       	add	r0, r0
     cf6:	aa 0b       	sbc	r26, r26
     cf8:	bb 0b       	sbc	r27, r27
     cfa:	bc 01       	movw	r22, r24
     cfc:	55 27       	eor	r21, r21
     cfe:	44 27       	eor	r20, r20
     d00:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d04:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d08:	a0 e0       	ldi	r26, 0x00	; 0
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	84 2b       	or	r24, r20
     d0e:	95 2b       	or	r25, r21
     d10:	a6 2b       	or	r26, r22
     d12:	b7 2b       	or	r27, r23
     d14:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     d18:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     d1c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     d20:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     d24:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     d28:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     d2c:	30 97       	sbiw	r30, 0x00	; 0
     d2e:	39 f0       	breq	.+14     	; 0xd3e <__vector_1+0xb4>
     d30:	60 e0       	ldi	r22, 0x00	; 0
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     d38:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     d3c:	09 95       	icall
     d3e:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
     d42:	ff 91       	pop	r31
     d44:	ef 91       	pop	r30
     d46:	bf 91       	pop	r27
     d48:	af 91       	pop	r26
     d4a:	9f 91       	pop	r25
     d4c:	8f 91       	pop	r24
     d4e:	7f 91       	pop	r23
     d50:	6f 91       	pop	r22
     d52:	5f 91       	pop	r21
     d54:	4f 91       	pop	r20
     d56:	3f 91       	pop	r19
     d58:	2f 91       	pop	r18
     d5a:	1f 91       	pop	r17
     d5c:	0f 91       	pop	r16
     d5e:	0f 90       	pop	r0
     d60:	0f be       	out	0x3f, r0	; 63
     d62:	0f 90       	pop	r0
     d64:	1f 90       	pop	r1
     d66:	18 95       	reti

00000d68 <__vector_2>:
     d68:	1f 92       	push	r1
     d6a:	0f 92       	push	r0
     d6c:	0f b6       	in	r0, 0x3f	; 63
     d6e:	0f 92       	push	r0
     d70:	11 24       	eor	r1, r1
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	2f 93       	push	r18
     d78:	3f 93       	push	r19
     d7a:	4f 93       	push	r20
     d7c:	5f 93       	push	r21
     d7e:	6f 93       	push	r22
     d80:	7f 93       	push	r23
     d82:	8f 93       	push	r24
     d84:	9f 93       	push	r25
     d86:	af 93       	push	r26
     d88:	bf 93       	push	r27
     d8a:	ef 93       	push	r30
     d8c:	ff 93       	push	r31
     d8e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     d92:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     d96:	ac 01       	movw	r20, r24
     d98:	09 2e       	mov	r0, r25
     d9a:	00 0c       	add	r0, r0
     d9c:	66 0b       	sbc	r22, r22
     d9e:	77 0b       	sbc	r23, r23
     da0:	9a 01       	movw	r18, r20
     da2:	11 27       	eor	r17, r17
     da4:	00 27       	eor	r16, r16
     da6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     daa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	40 2b       	or	r20, r16
     db4:	51 2b       	or	r21, r17
     db6:	62 2b       	or	r22, r18
     db8:	73 2b       	or	r23, r19
     dba:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     dbe:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     dc2:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     dc6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     dca:	b0 9b       	sbis	0x16, 0	; 22
     dcc:	1a c0       	rjmp	.+52     	; 0xe02 <__vector_2+0x9a>
     dce:	01 96       	adiw	r24, 0x01	; 1
     dd0:	09 2e       	mov	r0, r25
     dd2:	00 0c       	add	r0, r0
     dd4:	aa 0b       	sbc	r26, r26
     dd6:	bb 0b       	sbc	r27, r27
     dd8:	bc 01       	movw	r22, r24
     dda:	55 27       	eor	r21, r21
     ddc:	44 27       	eor	r20, r20
     dde:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     de2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     de6:	a0 e0       	ldi	r26, 0x00	; 0
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	84 2b       	or	r24, r20
     dec:	95 2b       	or	r25, r21
     dee:	a6 2b       	or	r26, r22
     df0:	b7 2b       	or	r27, r23
     df2:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     df6:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     dfa:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     dfe:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     e02:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     e06:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     e0a:	30 97       	sbiw	r30, 0x00	; 0
     e0c:	39 f0       	breq	.+14     	; 0xe1c <__vector_2+0xb4>
     e0e:	61 e0       	ldi	r22, 0x01	; 1
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     e16:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     e1a:	09 95       	icall
     e1c:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
     e20:	ff 91       	pop	r31
     e22:	ef 91       	pop	r30
     e24:	bf 91       	pop	r27
     e26:	af 91       	pop	r26
     e28:	9f 91       	pop	r25
     e2a:	8f 91       	pop	r24
     e2c:	7f 91       	pop	r23
     e2e:	6f 91       	pop	r22
     e30:	5f 91       	pop	r21
     e32:	4f 91       	pop	r20
     e34:	3f 91       	pop	r19
     e36:	2f 91       	pop	r18
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	0f 90       	pop	r0
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	0f 90       	pop	r0
     e42:	1f 90       	pop	r1
     e44:	18 95       	reti

00000e46 <__vector_3>:
     e46:	1f 92       	push	r1
     e48:	0f 92       	push	r0
     e4a:	0f b6       	in	r0, 0x3f	; 63
     e4c:	0f 92       	push	r0
     e4e:	11 24       	eor	r1, r1
     e50:	0f 93       	push	r16
     e52:	1f 93       	push	r17
     e54:	2f 93       	push	r18
     e56:	3f 93       	push	r19
     e58:	4f 93       	push	r20
     e5a:	5f 93       	push	r21
     e5c:	6f 93       	push	r22
     e5e:	7f 93       	push	r23
     e60:	8f 93       	push	r24
     e62:	9f 93       	push	r25
     e64:	af 93       	push	r26
     e66:	bf 93       	push	r27
     e68:	ef 93       	push	r30
     e6a:	ff 93       	push	r31
     e6c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     e70:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     e74:	ac 01       	movw	r20, r24
     e76:	09 2e       	mov	r0, r25
     e78:	00 0c       	add	r0, r0
     e7a:	66 0b       	sbc	r22, r22
     e7c:	77 0b       	sbc	r23, r23
     e7e:	9a 01       	movw	r18, r20
     e80:	11 27       	eor	r17, r17
     e82:	00 27       	eor	r16, r16
     e84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8c:	60 e0       	ldi	r22, 0x00	; 0
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	40 2b       	or	r20, r16
     e92:	51 2b       	or	r21, r17
     e94:	62 2b       	or	r22, r18
     e96:	73 2b       	or	r23, r19
     e98:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     e9c:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     ea0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     ea4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     ea8:	b0 9b       	sbis	0x16, 0	; 22
     eaa:	1a c0       	rjmp	.+52     	; 0xee0 <__vector_3+0x9a>
     eac:	01 96       	adiw	r24, 0x01	; 1
     eae:	09 2e       	mov	r0, r25
     eb0:	00 0c       	add	r0, r0
     eb2:	aa 0b       	sbc	r26, r26
     eb4:	bb 0b       	sbc	r27, r27
     eb6:	bc 01       	movw	r22, r24
     eb8:	55 27       	eor	r21, r21
     eba:	44 27       	eor	r20, r20
     ebc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ec0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ec4:	a0 e0       	ldi	r26, 0x00	; 0
     ec6:	b0 e0       	ldi	r27, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     ed4:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     ed8:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     edc:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     ee0:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     ee4:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     ee8:	30 97       	sbiw	r30, 0x00	; 0
     eea:	39 f0       	breq	.+14     	; 0xefa <__vector_3+0xb4>
     eec:	62 e0       	ldi	r22, 0x02	; 2
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     ef4:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     ef8:	09 95       	icall
     efa:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
     efe:	ff 91       	pop	r31
     f00:	ef 91       	pop	r30
     f02:	bf 91       	pop	r27
     f04:	af 91       	pop	r26
     f06:	9f 91       	pop	r25
     f08:	8f 91       	pop	r24
     f0a:	7f 91       	pop	r23
     f0c:	6f 91       	pop	r22
     f0e:	5f 91       	pop	r21
     f10:	4f 91       	pop	r20
     f12:	3f 91       	pop	r19
     f14:	2f 91       	pop	r18
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	0f 90       	pop	r0
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	0f 90       	pop	r0
     f20:	1f 90       	pop	r1
     f22:	18 95       	reti

00000f24 <__vector_4>:
     f24:	1f 92       	push	r1
     f26:	0f 92       	push	r0
     f28:	0f b6       	in	r0, 0x3f	; 63
     f2a:	0f 92       	push	r0
     f2c:	11 24       	eor	r1, r1
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	2f 93       	push	r18
     f34:	3f 93       	push	r19
     f36:	4f 93       	push	r20
     f38:	5f 93       	push	r21
     f3a:	6f 93       	push	r22
     f3c:	7f 93       	push	r23
     f3e:	8f 93       	push	r24
     f40:	9f 93       	push	r25
     f42:	af 93       	push	r26
     f44:	bf 93       	push	r27
     f46:	ef 93       	push	r30
     f48:	ff 93       	push	r31
     f4a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     f4e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     f52:	ac 01       	movw	r20, r24
     f54:	09 2e       	mov	r0, r25
     f56:	00 0c       	add	r0, r0
     f58:	66 0b       	sbc	r22, r22
     f5a:	77 0b       	sbc	r23, r23
     f5c:	9a 01       	movw	r18, r20
     f5e:	11 27       	eor	r17, r17
     f60:	00 27       	eor	r16, r16
     f62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	40 2b       	or	r20, r16
     f70:	51 2b       	or	r21, r17
     f72:	62 2b       	or	r22, r18
     f74:	73 2b       	or	r23, r19
     f76:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     f7a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     f7e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     f82:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     f86:	b0 9b       	sbis	0x16, 0	; 22
     f88:	1a c0       	rjmp	.+52     	; 0xfbe <__vector_4+0x9a>
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	09 2e       	mov	r0, r25
     f8e:	00 0c       	add	r0, r0
     f90:	aa 0b       	sbc	r26, r26
     f92:	bb 0b       	sbc	r27, r27
     f94:	bc 01       	movw	r22, r24
     f96:	55 27       	eor	r21, r21
     f98:	44 27       	eor	r20, r20
     f9a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f9e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fa2:	a0 e0       	ldi	r26, 0x00	; 0
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	84 2b       	or	r24, r20
     fa8:	95 2b       	or	r25, r21
     faa:	a6 2b       	or	r26, r22
     fac:	b7 2b       	or	r27, r23
     fae:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     fb2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     fb6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     fba:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     fbe:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     fc2:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     fc6:	30 97       	sbiw	r30, 0x00	; 0
     fc8:	39 f0       	breq	.+14     	; 0xfd8 <__vector_4+0xb4>
     fca:	63 e0       	ldi	r22, 0x03	; 3
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     fd2:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     fd6:	09 95       	icall
     fd8:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
     fdc:	ff 91       	pop	r31
     fde:	ef 91       	pop	r30
     fe0:	bf 91       	pop	r27
     fe2:	af 91       	pop	r26
     fe4:	9f 91       	pop	r25
     fe6:	8f 91       	pop	r24
     fe8:	7f 91       	pop	r23
     fea:	6f 91       	pop	r22
     fec:	5f 91       	pop	r21
     fee:	4f 91       	pop	r20
     ff0:	3f 91       	pop	r19
     ff2:	2f 91       	pop	r18
     ff4:	1f 91       	pop	r17
     ff6:	0f 91       	pop	r16
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 90       	pop	r0
     ffe:	1f 90       	pop	r1
    1000:	18 95       	reti

00001002 <__vector_5>:
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	2f 93       	push	r18
    1012:	3f 93       	push	r19
    1014:	4f 93       	push	r20
    1016:	5f 93       	push	r21
    1018:	6f 93       	push	r22
    101a:	7f 93       	push	r23
    101c:	8f 93       	push	r24
    101e:	9f 93       	push	r25
    1020:	af 93       	push	r26
    1022:	bf 93       	push	r27
    1024:	ef 93       	push	r30
    1026:	ff 93       	push	r31
    1028:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    102c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1030:	ac 01       	movw	r20, r24
    1032:	09 2e       	mov	r0, r25
    1034:	00 0c       	add	r0, r0
    1036:	66 0b       	sbc	r22, r22
    1038:	77 0b       	sbc	r23, r23
    103a:	9a 01       	movw	r18, r20
    103c:	11 27       	eor	r17, r17
    103e:	00 27       	eor	r16, r16
    1040:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1044:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1048:	60 e0       	ldi	r22, 0x00	; 0
    104a:	70 e0       	ldi	r23, 0x00	; 0
    104c:	40 2b       	or	r20, r16
    104e:	51 2b       	or	r21, r17
    1050:	62 2b       	or	r22, r18
    1052:	73 2b       	or	r23, r19
    1054:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1058:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    105c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1060:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1064:	b0 9b       	sbis	0x16, 0	; 22
    1066:	1a c0       	rjmp	.+52     	; 0x109c <__vector_5+0x9a>
    1068:	01 96       	adiw	r24, 0x01	; 1
    106a:	09 2e       	mov	r0, r25
    106c:	00 0c       	add	r0, r0
    106e:	aa 0b       	sbc	r26, r26
    1070:	bb 0b       	sbc	r27, r27
    1072:	bc 01       	movw	r22, r24
    1074:	55 27       	eor	r21, r21
    1076:	44 27       	eor	r20, r20
    1078:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    107c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1080:	a0 e0       	ldi	r26, 0x00	; 0
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	84 2b       	or	r24, r20
    1086:	95 2b       	or	r25, r21
    1088:	a6 2b       	or	r26, r22
    108a:	b7 2b       	or	r27, r23
    108c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1090:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1094:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1098:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    109c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
    10a0:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
    10a4:	30 97       	sbiw	r30, 0x00	; 0
    10a6:	39 f0       	breq	.+14     	; 0x10b6 <__vector_5+0xb4>
    10a8:	64 e0       	ldi	r22, 0x04	; 4
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
    10b0:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
    10b4:	09 95       	icall
    10b6:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	bf 91       	pop	r27
    10c0:	af 91       	pop	r26
    10c2:	9f 91       	pop	r25
    10c4:	8f 91       	pop	r24
    10c6:	7f 91       	pop	r23
    10c8:	6f 91       	pop	r22
    10ca:	5f 91       	pop	r21
    10cc:	4f 91       	pop	r20
    10ce:	3f 91       	pop	r19
    10d0:	2f 91       	pop	r18
    10d2:	1f 91       	pop	r17
    10d4:	0f 91       	pop	r16
    10d6:	0f 90       	pop	r0
    10d8:	0f be       	out	0x3f, r0	; 63
    10da:	0f 90       	pop	r0
    10dc:	1f 90       	pop	r1
    10de:	18 95       	reti

000010e0 <__vector_10>:
    10e0:	1f 92       	push	r1
    10e2:	0f 92       	push	r0
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	0f 92       	push	r0
    10e8:	11 24       	eor	r1, r1
    10ea:	0f 93       	push	r16
    10ec:	1f 93       	push	r17
    10ee:	2f 93       	push	r18
    10f0:	3f 93       	push	r19
    10f2:	4f 93       	push	r20
    10f4:	5f 93       	push	r21
    10f6:	6f 93       	push	r22
    10f8:	7f 93       	push	r23
    10fa:	8f 93       	push	r24
    10fc:	9f 93       	push	r25
    10fe:	af 93       	push	r26
    1100:	bf 93       	push	r27
    1102:	ef 93       	push	r30
    1104:	ff 93       	push	r31
    1106:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    110a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    110e:	ac 01       	movw	r20, r24
    1110:	09 2e       	mov	r0, r25
    1112:	00 0c       	add	r0, r0
    1114:	66 0b       	sbc	r22, r22
    1116:	77 0b       	sbc	r23, r23
    1118:	9a 01       	movw	r18, r20
    111a:	11 27       	eor	r17, r17
    111c:	00 27       	eor	r16, r16
    111e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1122:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	40 2b       	or	r20, r16
    112c:	51 2b       	or	r21, r17
    112e:	62 2b       	or	r22, r18
    1130:	73 2b       	or	r23, r19
    1132:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1136:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    113a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    113e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1142:	b0 9b       	sbis	0x16, 0	; 22
    1144:	1a c0       	rjmp	.+52     	; 0x117a <__vector_10+0x9a>
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	09 2e       	mov	r0, r25
    114a:	00 0c       	add	r0, r0
    114c:	aa 0b       	sbc	r26, r26
    114e:	bb 0b       	sbc	r27, r27
    1150:	bc 01       	movw	r22, r24
    1152:	55 27       	eor	r21, r21
    1154:	44 27       	eor	r20, r20
    1156:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    115a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    115e:	a0 e0       	ldi	r26, 0x00	; 0
    1160:	b0 e0       	ldi	r27, 0x00	; 0
    1162:	84 2b       	or	r24, r20
    1164:	95 2b       	or	r25, r21
    1166:	a6 2b       	or	r26, r22
    1168:	b7 2b       	or	r27, r23
    116a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    116e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1172:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1176:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    117a:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
    117e:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
    1182:	30 97       	sbiw	r30, 0x00	; 0
    1184:	39 f0       	breq	.+14     	; 0x1194 <__vector_10+0xb4>
    1186:	65 e0       	ldi	r22, 0x05	; 5
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
    118e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
    1192:	09 95       	icall
    1194:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1198:	ff 91       	pop	r31
    119a:	ef 91       	pop	r30
    119c:	bf 91       	pop	r27
    119e:	af 91       	pop	r26
    11a0:	9f 91       	pop	r25
    11a2:	8f 91       	pop	r24
    11a4:	7f 91       	pop	r23
    11a6:	6f 91       	pop	r22
    11a8:	5f 91       	pop	r21
    11aa:	4f 91       	pop	r20
    11ac:	3f 91       	pop	r19
    11ae:	2f 91       	pop	r18
    11b0:	1f 91       	pop	r17
    11b2:	0f 91       	pop	r16
    11b4:	0f 90       	pop	r0
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	0f 90       	pop	r0
    11ba:	1f 90       	pop	r1
    11bc:	18 95       	reti

000011be <__vector_11>:
    11be:	1f 92       	push	r1
    11c0:	0f 92       	push	r0
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	0f 92       	push	r0
    11c6:	11 24       	eor	r1, r1
    11c8:	0f 93       	push	r16
    11ca:	1f 93       	push	r17
    11cc:	2f 93       	push	r18
    11ce:	3f 93       	push	r19
    11d0:	4f 93       	push	r20
    11d2:	5f 93       	push	r21
    11d4:	6f 93       	push	r22
    11d6:	7f 93       	push	r23
    11d8:	8f 93       	push	r24
    11da:	9f 93       	push	r25
    11dc:	af 93       	push	r26
    11de:	bf 93       	push	r27
    11e0:	ef 93       	push	r30
    11e2:	ff 93       	push	r31
    11e4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    11e8:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    11ec:	ac 01       	movw	r20, r24
    11ee:	09 2e       	mov	r0, r25
    11f0:	00 0c       	add	r0, r0
    11f2:	66 0b       	sbc	r22, r22
    11f4:	77 0b       	sbc	r23, r23
    11f6:	9a 01       	movw	r18, r20
    11f8:	11 27       	eor	r17, r17
    11fa:	00 27       	eor	r16, r16
    11fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1200:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	40 2b       	or	r20, r16
    120a:	51 2b       	or	r21, r17
    120c:	62 2b       	or	r22, r18
    120e:	73 2b       	or	r23, r19
    1210:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1214:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1218:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    121c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1220:	b0 9b       	sbis	0x16, 0	; 22
    1222:	1a c0       	rjmp	.+52     	; 0x1258 <__vector_11+0x9a>
    1224:	01 96       	adiw	r24, 0x01	; 1
    1226:	09 2e       	mov	r0, r25
    1228:	00 0c       	add	r0, r0
    122a:	aa 0b       	sbc	r26, r26
    122c:	bb 0b       	sbc	r27, r27
    122e:	bc 01       	movw	r22, r24
    1230:	55 27       	eor	r21, r21
    1232:	44 27       	eor	r20, r20
    1234:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1238:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    123c:	a0 e0       	ldi	r26, 0x00	; 0
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	84 2b       	or	r24, r20
    1242:	95 2b       	or	r25, r21
    1244:	a6 2b       	or	r26, r22
    1246:	b7 2b       	or	r27, r23
    1248:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    124c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1250:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1254:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1258:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
    125c:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
    1260:	30 97       	sbiw	r30, 0x00	; 0
    1262:	39 f0       	breq	.+14     	; 0x1272 <__vector_11+0xb4>
    1264:	66 e0       	ldi	r22, 0x06	; 6
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
    126c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
    1270:	09 95       	icall
    1272:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1276:	ff 91       	pop	r31
    1278:	ef 91       	pop	r30
    127a:	bf 91       	pop	r27
    127c:	af 91       	pop	r26
    127e:	9f 91       	pop	r25
    1280:	8f 91       	pop	r24
    1282:	7f 91       	pop	r23
    1284:	6f 91       	pop	r22
    1286:	5f 91       	pop	r21
    1288:	4f 91       	pop	r20
    128a:	3f 91       	pop	r19
    128c:	2f 91       	pop	r18
    128e:	1f 91       	pop	r17
    1290:	0f 91       	pop	r16
    1292:	0f 90       	pop	r0
    1294:	0f be       	out	0x3f, r0	; 63
    1296:	0f 90       	pop	r0
    1298:	1f 90       	pop	r1
    129a:	18 95       	reti

0000129c <__vector_12>:
    129c:	1f 92       	push	r1
    129e:	0f 92       	push	r0
    12a0:	0f b6       	in	r0, 0x3f	; 63
    12a2:	0f 92       	push	r0
    12a4:	11 24       	eor	r1, r1
    12a6:	0f 93       	push	r16
    12a8:	1f 93       	push	r17
    12aa:	2f 93       	push	r18
    12ac:	3f 93       	push	r19
    12ae:	4f 93       	push	r20
    12b0:	5f 93       	push	r21
    12b2:	6f 93       	push	r22
    12b4:	7f 93       	push	r23
    12b6:	8f 93       	push	r24
    12b8:	9f 93       	push	r25
    12ba:	af 93       	push	r26
    12bc:	bf 93       	push	r27
    12be:	ef 93       	push	r30
    12c0:	ff 93       	push	r31
    12c2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    12c6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    12ca:	ac 01       	movw	r20, r24
    12cc:	09 2e       	mov	r0, r25
    12ce:	00 0c       	add	r0, r0
    12d0:	66 0b       	sbc	r22, r22
    12d2:	77 0b       	sbc	r23, r23
    12d4:	9a 01       	movw	r18, r20
    12d6:	11 27       	eor	r17, r17
    12d8:	00 27       	eor	r16, r16
    12da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	70 e0       	ldi	r23, 0x00	; 0
    12e6:	40 2b       	or	r20, r16
    12e8:	51 2b       	or	r21, r17
    12ea:	62 2b       	or	r22, r18
    12ec:	73 2b       	or	r23, r19
    12ee:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    12f2:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    12f6:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    12fa:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    12fe:	b0 9b       	sbis	0x16, 0	; 22
    1300:	1a c0       	rjmp	.+52     	; 0x1336 <__vector_12+0x9a>
    1302:	01 96       	adiw	r24, 0x01	; 1
    1304:	09 2e       	mov	r0, r25
    1306:	00 0c       	add	r0, r0
    1308:	aa 0b       	sbc	r26, r26
    130a:	bb 0b       	sbc	r27, r27
    130c:	bc 01       	movw	r22, r24
    130e:	55 27       	eor	r21, r21
    1310:	44 27       	eor	r20, r20
    1312:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1316:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    131a:	a0 e0       	ldi	r26, 0x00	; 0
    131c:	b0 e0       	ldi	r27, 0x00	; 0
    131e:	84 2b       	or	r24, r20
    1320:	95 2b       	or	r25, r21
    1322:	a6 2b       	or	r26, r22
    1324:	b7 2b       	or	r27, r23
    1326:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    132a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    132e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1332:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1336:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
    133a:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
    133e:	30 97       	sbiw	r30, 0x00	; 0
    1340:	39 f0       	breq	.+14     	; 0x1350 <__vector_12+0xb4>
    1342:	67 e0       	ldi	r22, 0x07	; 7
    1344:	70 e0       	ldi	r23, 0x00	; 0
    1346:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
    134a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
    134e:	09 95       	icall
    1350:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	1f 91       	pop	r17
    136e:	0f 91       	pop	r16
    1370:	0f 90       	pop	r0
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	0f 90       	pop	r0
    1376:	1f 90       	pop	r1
    1378:	18 95       	reti

0000137a <__vector_13>:
    137a:	1f 92       	push	r1
    137c:	0f 92       	push	r0
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	0f 92       	push	r0
    1382:	11 24       	eor	r1, r1
    1384:	0f 93       	push	r16
    1386:	1f 93       	push	r17
    1388:	2f 93       	push	r18
    138a:	3f 93       	push	r19
    138c:	4f 93       	push	r20
    138e:	5f 93       	push	r21
    1390:	6f 93       	push	r22
    1392:	7f 93       	push	r23
    1394:	8f 93       	push	r24
    1396:	9f 93       	push	r25
    1398:	af 93       	push	r26
    139a:	bf 93       	push	r27
    139c:	ef 93       	push	r30
    139e:	ff 93       	push	r31
    13a0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    13a4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    13a8:	ac 01       	movw	r20, r24
    13aa:	09 2e       	mov	r0, r25
    13ac:	00 0c       	add	r0, r0
    13ae:	66 0b       	sbc	r22, r22
    13b0:	77 0b       	sbc	r23, r23
    13b2:	9a 01       	movw	r18, r20
    13b4:	11 27       	eor	r17, r17
    13b6:	00 27       	eor	r16, r16
    13b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	40 2b       	or	r20, r16
    13c6:	51 2b       	or	r21, r17
    13c8:	62 2b       	or	r22, r18
    13ca:	73 2b       	or	r23, r19
    13cc:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    13d0:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    13d4:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    13d8:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    13dc:	b0 9b       	sbis	0x16, 0	; 22
    13de:	1a c0       	rjmp	.+52     	; 0x1414 <__vector_13+0x9a>
    13e0:	01 96       	adiw	r24, 0x01	; 1
    13e2:	09 2e       	mov	r0, r25
    13e4:	00 0c       	add	r0, r0
    13e6:	aa 0b       	sbc	r26, r26
    13e8:	bb 0b       	sbc	r27, r27
    13ea:	bc 01       	movw	r22, r24
    13ec:	55 27       	eor	r21, r21
    13ee:	44 27       	eor	r20, r20
    13f0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13f4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13f8:	a0 e0       	ldi	r26, 0x00	; 0
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	84 2b       	or	r24, r20
    13fe:	95 2b       	or	r25, r21
    1400:	a6 2b       	or	r26, r22
    1402:	b7 2b       	or	r27, r23
    1404:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1408:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    140c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1410:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1414:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    1418:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    141c:	30 97       	sbiw	r30, 0x00	; 0
    141e:	39 f0       	breq	.+14     	; 0x142e <__vector_13+0xb4>
    1420:	68 e0       	ldi	r22, 0x08	; 8
    1422:	70 e0       	ldi	r23, 0x00	; 0
    1424:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    1428:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    142c:	09 95       	icall
    142e:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1432:	ff 91       	pop	r31
    1434:	ef 91       	pop	r30
    1436:	bf 91       	pop	r27
    1438:	af 91       	pop	r26
    143a:	9f 91       	pop	r25
    143c:	8f 91       	pop	r24
    143e:	7f 91       	pop	r23
    1440:	6f 91       	pop	r22
    1442:	5f 91       	pop	r21
    1444:	4f 91       	pop	r20
    1446:	3f 91       	pop	r19
    1448:	2f 91       	pop	r18
    144a:	1f 91       	pop	r17
    144c:	0f 91       	pop	r16
    144e:	0f 90       	pop	r0
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	0f 90       	pop	r0
    1454:	1f 90       	pop	r1
    1456:	18 95       	reti

00001458 <__vector_14>:
    1458:	1f 92       	push	r1
    145a:	0f 92       	push	r0
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	0f 92       	push	r0
    1460:	11 24       	eor	r1, r1
    1462:	0f 93       	push	r16
    1464:	1f 93       	push	r17
    1466:	2f 93       	push	r18
    1468:	3f 93       	push	r19
    146a:	4f 93       	push	r20
    146c:	5f 93       	push	r21
    146e:	6f 93       	push	r22
    1470:	7f 93       	push	r23
    1472:	8f 93       	push	r24
    1474:	9f 93       	push	r25
    1476:	af 93       	push	r26
    1478:	bf 93       	push	r27
    147a:	ef 93       	push	r30
    147c:	ff 93       	push	r31
    147e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1482:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1486:	ac 01       	movw	r20, r24
    1488:	09 2e       	mov	r0, r25
    148a:	00 0c       	add	r0, r0
    148c:	66 0b       	sbc	r22, r22
    148e:	77 0b       	sbc	r23, r23
    1490:	9a 01       	movw	r18, r20
    1492:	11 27       	eor	r17, r17
    1494:	00 27       	eor	r16, r16
    1496:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    149a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    149e:	60 e0       	ldi	r22, 0x00	; 0
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	40 2b       	or	r20, r16
    14a4:	51 2b       	or	r21, r17
    14a6:	62 2b       	or	r22, r18
    14a8:	73 2b       	or	r23, r19
    14aa:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    14ae:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    14b2:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    14b6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    14ba:	b0 9b       	sbis	0x16, 0	; 22
    14bc:	1a c0       	rjmp	.+52     	; 0x14f2 <__vector_14+0x9a>
    14be:	01 96       	adiw	r24, 0x01	; 1
    14c0:	09 2e       	mov	r0, r25
    14c2:	00 0c       	add	r0, r0
    14c4:	aa 0b       	sbc	r26, r26
    14c6:	bb 0b       	sbc	r27, r27
    14c8:	bc 01       	movw	r22, r24
    14ca:	55 27       	eor	r21, r21
    14cc:	44 27       	eor	r20, r20
    14ce:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14d2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14d6:	a0 e0       	ldi	r26, 0x00	; 0
    14d8:	b0 e0       	ldi	r27, 0x00	; 0
    14da:	84 2b       	or	r24, r20
    14dc:	95 2b       	or	r25, r21
    14de:	a6 2b       	or	r26, r22
    14e0:	b7 2b       	or	r27, r23
    14e2:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    14e6:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    14ea:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    14ee:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    14f2:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    14f6:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    14fa:	30 97       	sbiw	r30, 0x00	; 0
    14fc:	39 f0       	breq	.+14     	; 0x150c <__vector_14+0xb4>
    14fe:	69 e0       	ldi	r22, 0x09	; 9
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    1506:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    150a:	09 95       	icall
    150c:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1510:	ff 91       	pop	r31
    1512:	ef 91       	pop	r30
    1514:	bf 91       	pop	r27
    1516:	af 91       	pop	r26
    1518:	9f 91       	pop	r25
    151a:	8f 91       	pop	r24
    151c:	7f 91       	pop	r23
    151e:	6f 91       	pop	r22
    1520:	5f 91       	pop	r21
    1522:	4f 91       	pop	r20
    1524:	3f 91       	pop	r19
    1526:	2f 91       	pop	r18
    1528:	1f 91       	pop	r17
    152a:	0f 91       	pop	r16
    152c:	0f 90       	pop	r0
    152e:	0f be       	out	0x3f, r0	; 63
    1530:	0f 90       	pop	r0
    1532:	1f 90       	pop	r1
    1534:	18 95       	reti

00001536 <__vector_15>:
    1536:	1f 92       	push	r1
    1538:	0f 92       	push	r0
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	0f 92       	push	r0
    153e:	11 24       	eor	r1, r1
    1540:	0f 93       	push	r16
    1542:	1f 93       	push	r17
    1544:	2f 93       	push	r18
    1546:	3f 93       	push	r19
    1548:	4f 93       	push	r20
    154a:	5f 93       	push	r21
    154c:	6f 93       	push	r22
    154e:	7f 93       	push	r23
    1550:	8f 93       	push	r24
    1552:	9f 93       	push	r25
    1554:	af 93       	push	r26
    1556:	bf 93       	push	r27
    1558:	ef 93       	push	r30
    155a:	ff 93       	push	r31
    155c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1560:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1564:	ac 01       	movw	r20, r24
    1566:	09 2e       	mov	r0, r25
    1568:	00 0c       	add	r0, r0
    156a:	66 0b       	sbc	r22, r22
    156c:	77 0b       	sbc	r23, r23
    156e:	9a 01       	movw	r18, r20
    1570:	11 27       	eor	r17, r17
    1572:	00 27       	eor	r16, r16
    1574:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1578:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	40 2b       	or	r20, r16
    1582:	51 2b       	or	r21, r17
    1584:	62 2b       	or	r22, r18
    1586:	73 2b       	or	r23, r19
    1588:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    158c:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1590:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1594:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1598:	b0 9b       	sbis	0x16, 0	; 22
    159a:	1a c0       	rjmp	.+52     	; 0x15d0 <__vector_15+0x9a>
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	09 2e       	mov	r0, r25
    15a0:	00 0c       	add	r0, r0
    15a2:	aa 0b       	sbc	r26, r26
    15a4:	bb 0b       	sbc	r27, r27
    15a6:	bc 01       	movw	r22, r24
    15a8:	55 27       	eor	r21, r21
    15aa:	44 27       	eor	r20, r20
    15ac:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b4:	a0 e0       	ldi	r26, 0x00	; 0
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	84 2b       	or	r24, r20
    15ba:	95 2b       	or	r25, r21
    15bc:	a6 2b       	or	r26, r22
    15be:	b7 2b       	or	r27, r23
    15c0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    15c4:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    15c8:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    15cc:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    15d0:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    15d4:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    15d8:	30 97       	sbiw	r30, 0x00	; 0
    15da:	39 f0       	breq	.+14     	; 0x15ea <__vector_15+0xb4>
    15dc:	6a e0       	ldi	r22, 0x0A	; 10
    15de:	70 e0       	ldi	r23, 0x00	; 0
    15e0:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    15e4:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    15e8:	09 95       	icall
    15ea:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    15ee:	ff 91       	pop	r31
    15f0:	ef 91       	pop	r30
    15f2:	bf 91       	pop	r27
    15f4:	af 91       	pop	r26
    15f6:	9f 91       	pop	r25
    15f8:	8f 91       	pop	r24
    15fa:	7f 91       	pop	r23
    15fc:	6f 91       	pop	r22
    15fe:	5f 91       	pop	r21
    1600:	4f 91       	pop	r20
    1602:	3f 91       	pop	r19
    1604:	2f 91       	pop	r18
    1606:	1f 91       	pop	r17
    1608:	0f 91       	pop	r16
    160a:	0f 90       	pop	r0
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	0f 90       	pop	r0
    1610:	1f 90       	pop	r1
    1612:	18 95       	reti

00001614 <__vector_16>:
    1614:	1f 92       	push	r1
    1616:	0f 92       	push	r0
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	0f 92       	push	r0
    161c:	11 24       	eor	r1, r1
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	2f 93       	push	r18
    1624:	3f 93       	push	r19
    1626:	4f 93       	push	r20
    1628:	5f 93       	push	r21
    162a:	6f 93       	push	r22
    162c:	7f 93       	push	r23
    162e:	8f 93       	push	r24
    1630:	9f 93       	push	r25
    1632:	af 93       	push	r26
    1634:	bf 93       	push	r27
    1636:	ef 93       	push	r30
    1638:	ff 93       	push	r31
    163a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    163e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1642:	ac 01       	movw	r20, r24
    1644:	09 2e       	mov	r0, r25
    1646:	00 0c       	add	r0, r0
    1648:	66 0b       	sbc	r22, r22
    164a:	77 0b       	sbc	r23, r23
    164c:	9a 01       	movw	r18, r20
    164e:	11 27       	eor	r17, r17
    1650:	00 27       	eor	r16, r16
    1652:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1656:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    165a:	60 e0       	ldi	r22, 0x00	; 0
    165c:	70 e0       	ldi	r23, 0x00	; 0
    165e:	40 2b       	or	r20, r16
    1660:	51 2b       	or	r21, r17
    1662:	62 2b       	or	r22, r18
    1664:	73 2b       	or	r23, r19
    1666:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    166a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    166e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1672:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1676:	b0 9b       	sbis	0x16, 0	; 22
    1678:	1a c0       	rjmp	.+52     	; 0x16ae <__vector_16+0x9a>
    167a:	01 96       	adiw	r24, 0x01	; 1
    167c:	09 2e       	mov	r0, r25
    167e:	00 0c       	add	r0, r0
    1680:	aa 0b       	sbc	r26, r26
    1682:	bb 0b       	sbc	r27, r27
    1684:	bc 01       	movw	r22, r24
    1686:	55 27       	eor	r21, r21
    1688:	44 27       	eor	r20, r20
    168a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    168e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1692:	a0 e0       	ldi	r26, 0x00	; 0
    1694:	b0 e0       	ldi	r27, 0x00	; 0
    1696:	84 2b       	or	r24, r20
    1698:	95 2b       	or	r25, r21
    169a:	a6 2b       	or	r26, r22
    169c:	b7 2b       	or	r27, r23
    169e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    16a2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    16a6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    16aa:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    16ae:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    16b2:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    16b6:	30 97       	sbiw	r30, 0x00	; 0
    16b8:	39 f0       	breq	.+14     	; 0x16c8 <__vector_16+0xb4>
    16ba:	6b e0       	ldi	r22, 0x0B	; 11
    16bc:	70 e0       	ldi	r23, 0x00	; 0
    16be:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    16c2:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    16c6:	09 95       	icall
    16c8:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    16cc:	ff 91       	pop	r31
    16ce:	ef 91       	pop	r30
    16d0:	bf 91       	pop	r27
    16d2:	af 91       	pop	r26
    16d4:	9f 91       	pop	r25
    16d6:	8f 91       	pop	r24
    16d8:	7f 91       	pop	r23
    16da:	6f 91       	pop	r22
    16dc:	5f 91       	pop	r21
    16de:	4f 91       	pop	r20
    16e0:	3f 91       	pop	r19
    16e2:	2f 91       	pop	r18
    16e4:	1f 91       	pop	r17
    16e6:	0f 91       	pop	r16
    16e8:	0f 90       	pop	r0
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <__vector_17>:
    16f2:	1f 92       	push	r1
    16f4:	0f 92       	push	r0
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	0f 92       	push	r0
    16fa:	11 24       	eor	r1, r1
    16fc:	0f 93       	push	r16
    16fe:	1f 93       	push	r17
    1700:	2f 93       	push	r18
    1702:	3f 93       	push	r19
    1704:	4f 93       	push	r20
    1706:	5f 93       	push	r21
    1708:	6f 93       	push	r22
    170a:	7f 93       	push	r23
    170c:	8f 93       	push	r24
    170e:	9f 93       	push	r25
    1710:	af 93       	push	r26
    1712:	bf 93       	push	r27
    1714:	ef 93       	push	r30
    1716:	ff 93       	push	r31
    1718:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    171c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1720:	ac 01       	movw	r20, r24
    1722:	09 2e       	mov	r0, r25
    1724:	00 0c       	add	r0, r0
    1726:	66 0b       	sbc	r22, r22
    1728:	77 0b       	sbc	r23, r23
    172a:	9a 01       	movw	r18, r20
    172c:	11 27       	eor	r17, r17
    172e:	00 27       	eor	r16, r16
    1730:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1734:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1738:	60 e0       	ldi	r22, 0x00	; 0
    173a:	70 e0       	ldi	r23, 0x00	; 0
    173c:	40 2b       	or	r20, r16
    173e:	51 2b       	or	r21, r17
    1740:	62 2b       	or	r22, r18
    1742:	73 2b       	or	r23, r19
    1744:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1748:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    174c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1750:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1754:	b0 9b       	sbis	0x16, 0	; 22
    1756:	1a c0       	rjmp	.+52     	; 0x178c <__vector_17+0x9a>
    1758:	01 96       	adiw	r24, 0x01	; 1
    175a:	09 2e       	mov	r0, r25
    175c:	00 0c       	add	r0, r0
    175e:	aa 0b       	sbc	r26, r26
    1760:	bb 0b       	sbc	r27, r27
    1762:	bc 01       	movw	r22, r24
    1764:	55 27       	eor	r21, r21
    1766:	44 27       	eor	r20, r20
    1768:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    176c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1770:	a0 e0       	ldi	r26, 0x00	; 0
    1772:	b0 e0       	ldi	r27, 0x00	; 0
    1774:	84 2b       	or	r24, r20
    1776:	95 2b       	or	r25, r21
    1778:	a6 2b       	or	r26, r22
    177a:	b7 2b       	or	r27, r23
    177c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1780:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1784:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1788:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    178c:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    1790:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    1794:	30 97       	sbiw	r30, 0x00	; 0
    1796:	39 f0       	breq	.+14     	; 0x17a6 <__vector_17+0xb4>
    1798:	6c e0       	ldi	r22, 0x0C	; 12
    179a:	70 e0       	ldi	r23, 0x00	; 0
    179c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    17a0:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    17a4:	09 95       	icall
    17a6:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    17aa:	ff 91       	pop	r31
    17ac:	ef 91       	pop	r30
    17ae:	bf 91       	pop	r27
    17b0:	af 91       	pop	r26
    17b2:	9f 91       	pop	r25
    17b4:	8f 91       	pop	r24
    17b6:	7f 91       	pop	r23
    17b8:	6f 91       	pop	r22
    17ba:	5f 91       	pop	r21
    17bc:	4f 91       	pop	r20
    17be:	3f 91       	pop	r19
    17c0:	2f 91       	pop	r18
    17c2:	1f 91       	pop	r17
    17c4:	0f 91       	pop	r16
    17c6:	0f 90       	pop	r0
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	0f 90       	pop	r0
    17cc:	1f 90       	pop	r1
    17ce:	18 95       	reti

000017d0 <__vector_18>:
    17d0:	1f 92       	push	r1
    17d2:	0f 92       	push	r0
    17d4:	0f b6       	in	r0, 0x3f	; 63
    17d6:	0f 92       	push	r0
    17d8:	11 24       	eor	r1, r1
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	2f 93       	push	r18
    17e0:	3f 93       	push	r19
    17e2:	4f 93       	push	r20
    17e4:	5f 93       	push	r21
    17e6:	6f 93       	push	r22
    17e8:	7f 93       	push	r23
    17ea:	8f 93       	push	r24
    17ec:	9f 93       	push	r25
    17ee:	af 93       	push	r26
    17f0:	bf 93       	push	r27
    17f2:	ef 93       	push	r30
    17f4:	ff 93       	push	r31
    17f6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    17fa:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    17fe:	ac 01       	movw	r20, r24
    1800:	09 2e       	mov	r0, r25
    1802:	00 0c       	add	r0, r0
    1804:	66 0b       	sbc	r22, r22
    1806:	77 0b       	sbc	r23, r23
    1808:	9a 01       	movw	r18, r20
    180a:	11 27       	eor	r17, r17
    180c:	00 27       	eor	r16, r16
    180e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1812:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1816:	60 e0       	ldi	r22, 0x00	; 0
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	40 2b       	or	r20, r16
    181c:	51 2b       	or	r21, r17
    181e:	62 2b       	or	r22, r18
    1820:	73 2b       	or	r23, r19
    1822:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1826:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    182a:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    182e:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1832:	b0 9b       	sbis	0x16, 0	; 22
    1834:	1a c0       	rjmp	.+52     	; 0x186a <__vector_18+0x9a>
    1836:	01 96       	adiw	r24, 0x01	; 1
    1838:	09 2e       	mov	r0, r25
    183a:	00 0c       	add	r0, r0
    183c:	aa 0b       	sbc	r26, r26
    183e:	bb 0b       	sbc	r27, r27
    1840:	bc 01       	movw	r22, r24
    1842:	55 27       	eor	r21, r21
    1844:	44 27       	eor	r20, r20
    1846:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    184a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    184e:	a0 e0       	ldi	r26, 0x00	; 0
    1850:	b0 e0       	ldi	r27, 0x00	; 0
    1852:	84 2b       	or	r24, r20
    1854:	95 2b       	or	r25, r21
    1856:	a6 2b       	or	r26, r22
    1858:	b7 2b       	or	r27, r23
    185a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    185e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1862:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1866:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    186a:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    186e:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    1872:	30 97       	sbiw	r30, 0x00	; 0
    1874:	39 f0       	breq	.+14     	; 0x1884 <__vector_18+0xb4>
    1876:	6d e0       	ldi	r22, 0x0D	; 13
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    187e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    1882:	09 95       	icall
    1884:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1888:	ff 91       	pop	r31
    188a:	ef 91       	pop	r30
    188c:	bf 91       	pop	r27
    188e:	af 91       	pop	r26
    1890:	9f 91       	pop	r25
    1892:	8f 91       	pop	r24
    1894:	7f 91       	pop	r23
    1896:	6f 91       	pop	r22
    1898:	5f 91       	pop	r21
    189a:	4f 91       	pop	r20
    189c:	3f 91       	pop	r19
    189e:	2f 91       	pop	r18
    18a0:	1f 91       	pop	r17
    18a2:	0f 91       	pop	r16
    18a4:	0f 90       	pop	r0
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	0f 90       	pop	r0
    18aa:	1f 90       	pop	r1
    18ac:	18 95       	reti

000018ae <__vector_19>:
    18ae:	1f 92       	push	r1
    18b0:	0f 92       	push	r0
    18b2:	0f b6       	in	r0, 0x3f	; 63
    18b4:	0f 92       	push	r0
    18b6:	11 24       	eor	r1, r1
    18b8:	0f 93       	push	r16
    18ba:	1f 93       	push	r17
    18bc:	2f 93       	push	r18
    18be:	3f 93       	push	r19
    18c0:	4f 93       	push	r20
    18c2:	5f 93       	push	r21
    18c4:	6f 93       	push	r22
    18c6:	7f 93       	push	r23
    18c8:	8f 93       	push	r24
    18ca:	9f 93       	push	r25
    18cc:	af 93       	push	r26
    18ce:	bf 93       	push	r27
    18d0:	ef 93       	push	r30
    18d2:	ff 93       	push	r31
    18d4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    18d8:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    18dc:	ac 01       	movw	r20, r24
    18de:	09 2e       	mov	r0, r25
    18e0:	00 0c       	add	r0, r0
    18e2:	66 0b       	sbc	r22, r22
    18e4:	77 0b       	sbc	r23, r23
    18e6:	9a 01       	movw	r18, r20
    18e8:	11 27       	eor	r17, r17
    18ea:	00 27       	eor	r16, r16
    18ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f4:	60 e0       	ldi	r22, 0x00	; 0
    18f6:	70 e0       	ldi	r23, 0x00	; 0
    18f8:	40 2b       	or	r20, r16
    18fa:	51 2b       	or	r21, r17
    18fc:	62 2b       	or	r22, r18
    18fe:	73 2b       	or	r23, r19
    1900:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1904:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1908:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    190c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1910:	b0 9b       	sbis	0x16, 0	; 22
    1912:	1a c0       	rjmp	.+52     	; 0x1948 <__vector_19+0x9a>
    1914:	01 96       	adiw	r24, 0x01	; 1
    1916:	09 2e       	mov	r0, r25
    1918:	00 0c       	add	r0, r0
    191a:	aa 0b       	sbc	r26, r26
    191c:	bb 0b       	sbc	r27, r27
    191e:	bc 01       	movw	r22, r24
    1920:	55 27       	eor	r21, r21
    1922:	44 27       	eor	r20, r20
    1924:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1928:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    192c:	a0 e0       	ldi	r26, 0x00	; 0
    192e:	b0 e0       	ldi	r27, 0x00	; 0
    1930:	84 2b       	or	r24, r20
    1932:	95 2b       	or	r25, r21
    1934:	a6 2b       	or	r26, r22
    1936:	b7 2b       	or	r27, r23
    1938:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    193c:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1940:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1944:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1948:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    194c:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1950:	30 97       	sbiw	r30, 0x00	; 0
    1952:	39 f0       	breq	.+14     	; 0x1962 <__vector_19+0xb4>
    1954:	6e e0       	ldi	r22, 0x0E	; 14
    1956:	70 e0       	ldi	r23, 0x00	; 0
    1958:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    195c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1960:	09 95       	icall
    1962:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1966:	ff 91       	pop	r31
    1968:	ef 91       	pop	r30
    196a:	bf 91       	pop	r27
    196c:	af 91       	pop	r26
    196e:	9f 91       	pop	r25
    1970:	8f 91       	pop	r24
    1972:	7f 91       	pop	r23
    1974:	6f 91       	pop	r22
    1976:	5f 91       	pop	r21
    1978:	4f 91       	pop	r20
    197a:	3f 91       	pop	r19
    197c:	2f 91       	pop	r18
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	0f 90       	pop	r0
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	0f 90       	pop	r0
    1988:	1f 90       	pop	r1
    198a:	18 95       	reti

0000198c <__vector_20>:
    198c:	1f 92       	push	r1
    198e:	0f 92       	push	r0
    1990:	0f b6       	in	r0, 0x3f	; 63
    1992:	0f 92       	push	r0
    1994:	11 24       	eor	r1, r1
    1996:	0f 93       	push	r16
    1998:	1f 93       	push	r17
    199a:	2f 93       	push	r18
    199c:	3f 93       	push	r19
    199e:	4f 93       	push	r20
    19a0:	5f 93       	push	r21
    19a2:	6f 93       	push	r22
    19a4:	7f 93       	push	r23
    19a6:	8f 93       	push	r24
    19a8:	9f 93       	push	r25
    19aa:	af 93       	push	r26
    19ac:	bf 93       	push	r27
    19ae:	ef 93       	push	r30
    19b0:	ff 93       	push	r31
    19b2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    19b6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    19ba:	ac 01       	movw	r20, r24
    19bc:	09 2e       	mov	r0, r25
    19be:	00 0c       	add	r0, r0
    19c0:	66 0b       	sbc	r22, r22
    19c2:	77 0b       	sbc	r23, r23
    19c4:	9a 01       	movw	r18, r20
    19c6:	11 27       	eor	r17, r17
    19c8:	00 27       	eor	r16, r16
    19ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	40 2b       	or	r20, r16
    19d8:	51 2b       	or	r21, r17
    19da:	62 2b       	or	r22, r18
    19dc:	73 2b       	or	r23, r19
    19de:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    19e2:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    19e6:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    19ea:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    19ee:	b0 9b       	sbis	0x16, 0	; 22
    19f0:	1a c0       	rjmp	.+52     	; 0x1a26 <__vector_20+0x9a>
    19f2:	01 96       	adiw	r24, 0x01	; 1
    19f4:	09 2e       	mov	r0, r25
    19f6:	00 0c       	add	r0, r0
    19f8:	aa 0b       	sbc	r26, r26
    19fa:	bb 0b       	sbc	r27, r27
    19fc:	bc 01       	movw	r22, r24
    19fe:	55 27       	eor	r21, r21
    1a00:	44 27       	eor	r20, r20
    1a02:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a06:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a0a:	a0 e0       	ldi	r26, 0x00	; 0
    1a0c:	b0 e0       	ldi	r27, 0x00	; 0
    1a0e:	84 2b       	or	r24, r20
    1a10:	95 2b       	or	r25, r21
    1a12:	a6 2b       	or	r26, r22
    1a14:	b7 2b       	or	r27, r23
    1a16:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1a1a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1a1e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1a22:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1a26:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1a2a:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    1a2e:	30 97       	sbiw	r30, 0x00	; 0
    1a30:	39 f0       	breq	.+14     	; 0x1a40 <__vector_20+0xb4>
    1a32:	6f e0       	ldi	r22, 0x0F	; 15
    1a34:	70 e0       	ldi	r23, 0x00	; 0
    1a36:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1a3a:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    1a3e:	09 95       	icall
    1a40:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1a44:	ff 91       	pop	r31
    1a46:	ef 91       	pop	r30
    1a48:	bf 91       	pop	r27
    1a4a:	af 91       	pop	r26
    1a4c:	9f 91       	pop	r25
    1a4e:	8f 91       	pop	r24
    1a50:	7f 91       	pop	r23
    1a52:	6f 91       	pop	r22
    1a54:	5f 91       	pop	r21
    1a56:	4f 91       	pop	r20
    1a58:	3f 91       	pop	r19
    1a5a:	2f 91       	pop	r18
    1a5c:	1f 91       	pop	r17
    1a5e:	0f 91       	pop	r16
    1a60:	0f 90       	pop	r0
    1a62:	0f be       	out	0x3f, r0	; 63
    1a64:	0f 90       	pop	r0
    1a66:	1f 90       	pop	r1
    1a68:	18 95       	reti

00001a6a <__vector_21>:
    1a6a:	1f 92       	push	r1
    1a6c:	0f 92       	push	r0
    1a6e:	0f b6       	in	r0, 0x3f	; 63
    1a70:	0f 92       	push	r0
    1a72:	11 24       	eor	r1, r1
    1a74:	0f 93       	push	r16
    1a76:	1f 93       	push	r17
    1a78:	2f 93       	push	r18
    1a7a:	3f 93       	push	r19
    1a7c:	4f 93       	push	r20
    1a7e:	5f 93       	push	r21
    1a80:	6f 93       	push	r22
    1a82:	7f 93       	push	r23
    1a84:	8f 93       	push	r24
    1a86:	9f 93       	push	r25
    1a88:	af 93       	push	r26
    1a8a:	bf 93       	push	r27
    1a8c:	ef 93       	push	r30
    1a8e:	ff 93       	push	r31
    1a90:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1a94:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1a98:	ac 01       	movw	r20, r24
    1a9a:	09 2e       	mov	r0, r25
    1a9c:	00 0c       	add	r0, r0
    1a9e:	66 0b       	sbc	r22, r22
    1aa0:	77 0b       	sbc	r23, r23
    1aa2:	9a 01       	movw	r18, r20
    1aa4:	11 27       	eor	r17, r17
    1aa6:	00 27       	eor	r16, r16
    1aa8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	70 e0       	ldi	r23, 0x00	; 0
    1ab4:	40 2b       	or	r20, r16
    1ab6:	51 2b       	or	r21, r17
    1ab8:	62 2b       	or	r22, r18
    1aba:	73 2b       	or	r23, r19
    1abc:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1ac0:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1ac4:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1ac8:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1acc:	b0 9b       	sbis	0x16, 0	; 22
    1ace:	1a c0       	rjmp	.+52     	; 0x1b04 <__vector_21+0x9a>
    1ad0:	01 96       	adiw	r24, 0x01	; 1
    1ad2:	09 2e       	mov	r0, r25
    1ad4:	00 0c       	add	r0, r0
    1ad6:	aa 0b       	sbc	r26, r26
    1ad8:	bb 0b       	sbc	r27, r27
    1ada:	bc 01       	movw	r22, r24
    1adc:	55 27       	eor	r21, r21
    1ade:	44 27       	eor	r20, r20
    1ae0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ae4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ae8:	a0 e0       	ldi	r26, 0x00	; 0
    1aea:	b0 e0       	ldi	r27, 0x00	; 0
    1aec:	84 2b       	or	r24, r20
    1aee:	95 2b       	or	r25, r21
    1af0:	a6 2b       	or	r26, r22
    1af2:	b7 2b       	or	r27, r23
    1af4:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1af8:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1afc:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1b00:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1b04:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    1b08:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    1b0c:	30 97       	sbiw	r30, 0x00	; 0
    1b0e:	39 f0       	breq	.+14     	; 0x1b1e <__vector_21+0xb4>
    1b10:	60 e1       	ldi	r22, 0x10	; 16
    1b12:	70 e0       	ldi	r23, 0x00	; 0
    1b14:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    1b18:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1b1c:	09 95       	icall
    1b1e:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1b22:	ff 91       	pop	r31
    1b24:	ef 91       	pop	r30
    1b26:	bf 91       	pop	r27
    1b28:	af 91       	pop	r26
    1b2a:	9f 91       	pop	r25
    1b2c:	8f 91       	pop	r24
    1b2e:	7f 91       	pop	r23
    1b30:	6f 91       	pop	r22
    1b32:	5f 91       	pop	r21
    1b34:	4f 91       	pop	r20
    1b36:	3f 91       	pop	r19
    1b38:	2f 91       	pop	r18
    1b3a:	1f 91       	pop	r17
    1b3c:	0f 91       	pop	r16
    1b3e:	0f 90       	pop	r0
    1b40:	0f be       	out	0x3f, r0	; 63
    1b42:	0f 90       	pop	r0
    1b44:	1f 90       	pop	r1
    1b46:	18 95       	reti

00001b48 <__vector_22>:
    1b48:	1f 92       	push	r1
    1b4a:	0f 92       	push	r0
    1b4c:	0f b6       	in	r0, 0x3f	; 63
    1b4e:	0f 92       	push	r0
    1b50:	11 24       	eor	r1, r1
    1b52:	0f 93       	push	r16
    1b54:	1f 93       	push	r17
    1b56:	2f 93       	push	r18
    1b58:	3f 93       	push	r19
    1b5a:	4f 93       	push	r20
    1b5c:	5f 93       	push	r21
    1b5e:	6f 93       	push	r22
    1b60:	7f 93       	push	r23
    1b62:	8f 93       	push	r24
    1b64:	9f 93       	push	r25
    1b66:	af 93       	push	r26
    1b68:	bf 93       	push	r27
    1b6a:	ef 93       	push	r30
    1b6c:	ff 93       	push	r31
    1b6e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1b72:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1b76:	ac 01       	movw	r20, r24
    1b78:	09 2e       	mov	r0, r25
    1b7a:	00 0c       	add	r0, r0
    1b7c:	66 0b       	sbc	r22, r22
    1b7e:	77 0b       	sbc	r23, r23
    1b80:	9a 01       	movw	r18, r20
    1b82:	11 27       	eor	r17, r17
    1b84:	00 27       	eor	r16, r16
    1b86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b8e:	60 e0       	ldi	r22, 0x00	; 0
    1b90:	70 e0       	ldi	r23, 0x00	; 0
    1b92:	40 2b       	or	r20, r16
    1b94:	51 2b       	or	r21, r17
    1b96:	62 2b       	or	r22, r18
    1b98:	73 2b       	or	r23, r19
    1b9a:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1b9e:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1ba2:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1ba6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1baa:	b0 9b       	sbis	0x16, 0	; 22
    1bac:	1a c0       	rjmp	.+52     	; 0x1be2 <__vector_22+0x9a>
    1bae:	01 96       	adiw	r24, 0x01	; 1
    1bb0:	09 2e       	mov	r0, r25
    1bb2:	00 0c       	add	r0, r0
    1bb4:	aa 0b       	sbc	r26, r26
    1bb6:	bb 0b       	sbc	r27, r27
    1bb8:	bc 01       	movw	r22, r24
    1bba:	55 27       	eor	r21, r21
    1bbc:	44 27       	eor	r20, r20
    1bbe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bc2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bc6:	a0 e0       	ldi	r26, 0x00	; 0
    1bc8:	b0 e0       	ldi	r27, 0x00	; 0
    1bca:	84 2b       	or	r24, r20
    1bcc:	95 2b       	or	r25, r21
    1bce:	a6 2b       	or	r26, r22
    1bd0:	b7 2b       	or	r27, r23
    1bd2:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1bd6:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1bda:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1bde:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1be2:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    1be6:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1bea:	30 97       	sbiw	r30, 0x00	; 0
    1bec:	39 f0       	breq	.+14     	; 0x1bfc <__vector_22+0xb4>
    1bee:	61 e1       	ldi	r22, 0x11	; 17
    1bf0:	70 e0       	ldi	r23, 0x00	; 0
    1bf2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    1bf6:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    1bfa:	09 95       	icall
    1bfc:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1c00:	ff 91       	pop	r31
    1c02:	ef 91       	pop	r30
    1c04:	bf 91       	pop	r27
    1c06:	af 91       	pop	r26
    1c08:	9f 91       	pop	r25
    1c0a:	8f 91       	pop	r24
    1c0c:	7f 91       	pop	r23
    1c0e:	6f 91       	pop	r22
    1c10:	5f 91       	pop	r21
    1c12:	4f 91       	pop	r20
    1c14:	3f 91       	pop	r19
    1c16:	2f 91       	pop	r18
    1c18:	1f 91       	pop	r17
    1c1a:	0f 91       	pop	r16
    1c1c:	0f 90       	pop	r0
    1c1e:	0f be       	out	0x3f, r0	; 63
    1c20:	0f 90       	pop	r0
    1c22:	1f 90       	pop	r1
    1c24:	18 95       	reti

00001c26 <idle>:
    1c26:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1c2a:	78 94       	sei
    1c2c:	81 e0       	ldi	r24, 0x01	; 1
    1c2e:	83 bf       	out	0x33, r24	; 51
    1c30:	88 95       	sleep
    1c32:	fc cf       	rjmp	.-8      	; 0x1c2c <idle+0x6>

00001c34 <__vector_9>:
    1c34:	1f 92       	push	r1
    1c36:	0f 92       	push	r0
    1c38:	0f b6       	in	r0, 0x3f	; 63
    1c3a:	0f 92       	push	r0
    1c3c:	11 24       	eor	r1, r1
    1c3e:	2f 93       	push	r18
    1c40:	3f 93       	push	r19
    1c42:	4f 93       	push	r20
    1c44:	5f 93       	push	r21
    1c46:	6f 93       	push	r22
    1c48:	7f 93       	push	r23
    1c4a:	8f 93       	push	r24
    1c4c:	9f 93       	push	r25
    1c4e:	ef 93       	push	r30
    1c50:	ff 93       	push	r31
    1c52:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1c56:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1c5a:	01 96       	adiw	r24, 0x01	; 1
    1c5c:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
    1c60:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
    1c64:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1c68:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1c6c:	30 97       	sbiw	r30, 0x00	; 0
    1c6e:	01 f1       	breq	.+64     	; 0x1cb0 <__vector_9+0x7c>
    1c70:	42 81       	ldd	r20, Z+2	; 0x02
    1c72:	53 81       	ldd	r21, Z+3	; 0x03
    1c74:	64 81       	ldd	r22, Z+4	; 0x04
    1c76:	75 81       	ldd	r23, Z+5	; 0x05
    1c78:	86 17       	cp	r24, r22
    1c7a:	97 07       	cpc	r25, r23
    1c7c:	c9 f4       	brne	.+50     	; 0x1cb0 <__vector_9+0x7c>
    1c7e:	ca 01       	movw	r24, r20
    1c80:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c84:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c88:	42 1b       	sub	r20, r18
    1c8a:	53 0b       	sbc	r21, r19
    1c8c:	41 30       	cpi	r20, 0x01	; 1
    1c8e:	51 05       	cpc	r21, r1
    1c90:	29 f4       	brne	.+10     	; 0x1c9c <__vector_9+0x68>
    1c92:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c96:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9a:	01 96       	adiw	r24, 0x01	; 1
    1c9c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ca0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ca4:	ef e6       	ldi	r30, 0x6F	; 111
    1ca6:	f0 e0       	ldi	r31, 0x00	; 0
    1ca8:	80 81       	ld	r24, Z
    1caa:	82 60       	ori	r24, 0x02	; 2
    1cac:	80 83       	st	Z, r24
    1cae:	05 c0       	rjmp	.+10     	; 0x1cba <__vector_9+0x86>
    1cb0:	ef e6       	ldi	r30, 0x6F	; 111
    1cb2:	f0 e0       	ldi	r31, 0x00	; 0
    1cb4:	80 81       	ld	r24, Z
    1cb6:	8d 7f       	andi	r24, 0xFD	; 253
    1cb8:	80 83       	st	Z, r24
    1cba:	ff 91       	pop	r31
    1cbc:	ef 91       	pop	r30
    1cbe:	9f 91       	pop	r25
    1cc0:	8f 91       	pop	r24
    1cc2:	7f 91       	pop	r23
    1cc4:	6f 91       	pop	r22
    1cc6:	5f 91       	pop	r21
    1cc8:	4f 91       	pop	r20
    1cca:	3f 91       	pop	r19
    1ccc:	2f 91       	pop	r18
    1cce:	0f 90       	pop	r0
    1cd0:	0f be       	out	0x3f, r0	; 63
    1cd2:	0f 90       	pop	r0
    1cd4:	1f 90       	pop	r1
    1cd6:	18 95       	reti

00001cd8 <__vector_7>:
    1cd8:	1f 92       	push	r1
    1cda:	0f 92       	push	r0
    1cdc:	0f b6       	in	r0, 0x3f	; 63
    1cde:	0f 92       	push	r0
    1ce0:	11 24       	eor	r1, r1
    1ce2:	cf 92       	push	r12
    1ce4:	df 92       	push	r13
    1ce6:	ef 92       	push	r14
    1ce8:	ff 92       	push	r15
    1cea:	2f 93       	push	r18
    1cec:	3f 93       	push	r19
    1cee:	4f 93       	push	r20
    1cf0:	5f 93       	push	r21
    1cf2:	6f 93       	push	r22
    1cf4:	7f 93       	push	r23
    1cf6:	8f 93       	push	r24
    1cf8:	9f 93       	push	r25
    1cfa:	af 93       	push	r26
    1cfc:	bf 93       	push	r27
    1cfe:	ef 93       	push	r30
    1d00:	ff 93       	push	r31
    1d02:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
    1d06:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
    1d0a:	6c 01       	movw	r12, r24
    1d0c:	09 2e       	mov	r0, r25
    1d0e:	00 0c       	add	r0, r0
    1d10:	ee 08       	sbc	r14, r14
    1d12:	ff 08       	sbc	r15, r15
    1d14:	76 01       	movw	r14, r12
    1d16:	dd 24       	eor	r13, r13
    1d18:	cc 24       	eor	r12, r12
    1d1a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d1e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d22:	60 e0       	ldi	r22, 0x00	; 0
    1d24:	70 e0       	ldi	r23, 0x00	; 0
    1d26:	c4 2a       	or	r12, r20
    1d28:	d5 2a       	or	r13, r21
    1d2a:	e6 2a       	or	r14, r22
    1d2c:	f7 2a       	or	r15, r23
    1d2e:	b0 9b       	sbis	0x16, 0	; 22
    1d30:	1e c0       	rjmp	.+60     	; 0x1d6e <__vector_7+0x96>
    1d32:	6c 01       	movw	r12, r24
    1d34:	2f ef       	ldi	r18, 0xFF	; 255
    1d36:	c2 1a       	sub	r12, r18
    1d38:	d2 0a       	sbc	r13, r18
    1d3a:	0d 2c       	mov	r0, r13
    1d3c:	00 0c       	add	r0, r0
    1d3e:	ee 08       	sbc	r14, r14
    1d40:	ff 08       	sbc	r15, r15
    1d42:	d6 01       	movw	r26, r12
    1d44:	99 27       	eor	r25, r25
    1d46:	88 27       	eor	r24, r24
    1d48:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d4c:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d50:	e1 2c       	mov	r14, r1
    1d52:	f1 2c       	mov	r15, r1
    1d54:	c8 2a       	or	r12, r24
    1d56:	d9 2a       	or	r13, r25
    1d58:	ea 2a       	or	r14, r26
    1d5a:	fb 2a       	or	r15, r27
    1d5c:	08 c0       	rjmp	.+16     	; 0x1d6e <__vector_7+0x96>
    1d5e:	8e e3       	ldi	r24, 0x3E	; 62
    1d60:	91 e0       	ldi	r25, 0x01	; 1
    1d62:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <dequeue>
    1d66:	60 e4       	ldi	r22, 0x40	; 64
    1d68:	71 e0       	ldi	r23, 0x01	; 1
    1d6a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <enqueueByDeadline>
    1d6e:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1d72:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1d76:	30 97       	sbiw	r30, 0x00	; 0
    1d78:	69 f0       	breq	.+26     	; 0x1d94 <__vector_7+0xbc>
    1d7a:	82 81       	ldd	r24, Z+2	; 0x02
    1d7c:	93 81       	ldd	r25, Z+3	; 0x03
    1d7e:	a4 81       	ldd	r26, Z+4	; 0x04
    1d80:	b5 81       	ldd	r27, Z+5	; 0x05
    1d82:	8c 19       	sub	r24, r12
    1d84:	9d 09       	sbc	r25, r13
    1d86:	ae 09       	sbc	r26, r14
    1d88:	bf 09       	sbc	r27, r15
    1d8a:	18 16       	cp	r1, r24
    1d8c:	19 06       	cpc	r1, r25
    1d8e:	1a 06       	cpc	r1, r26
    1d90:	1b 06       	cpc	r1, r27
    1d92:	2c f7       	brge	.-54     	; 0x1d5e <__vector_7+0x86>
    1d94:	30 97       	sbiw	r30, 0x00	; 0
    1d96:	21 f1       	breq	.+72     	; 0x1de0 <__vector_7+0x108>
    1d98:	82 81       	ldd	r24, Z+2	; 0x02
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	a4 81       	ldd	r26, Z+4	; 0x04
    1d9e:	b5 81       	ldd	r27, Z+5	; 0x05
    1da0:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1da4:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1da8:	2a 17       	cp	r18, r26
    1daa:	3b 07       	cpc	r19, r27
    1dac:	c9 f4       	brne	.+50     	; 0x1de0 <__vector_7+0x108>
    1dae:	9c 01       	movw	r18, r24
    1db0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1db4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1db8:	84 1b       	sub	r24, r20
    1dba:	95 0b       	sbc	r25, r21
    1dbc:	01 97       	sbiw	r24, 0x01	; 1
    1dbe:	31 f4       	brne	.+12     	; 0x1dcc <__vector_7+0xf4>
    1dc0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dc4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dc8:	2f 5f       	subi	r18, 0xFF	; 255
    1dca:	3f 4f       	sbci	r19, 0xFF	; 255
    1dcc:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1dd0:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1dd4:	ef e6       	ldi	r30, 0x6F	; 111
    1dd6:	f0 e0       	ldi	r31, 0x00	; 0
    1dd8:	80 81       	ld	r24, Z
    1dda:	82 60       	ori	r24, 0x02	; 2
    1ddc:	80 83       	st	Z, r24
    1dde:	05 c0       	rjmp	.+10     	; 0x1dea <__vector_7+0x112>
    1de0:	ef e6       	ldi	r30, 0x6F	; 111
    1de2:	f0 e0       	ldi	r31, 0x00	; 0
    1de4:	80 81       	ld	r24, Z
    1de6:	8d 7f       	andi	r24, 0xFD	; 253
    1de8:	80 83       	st	Z, r24
    1dea:	0e 94 11 06 	call	0xc22	; 0xc22 <schedule>
    1dee:	ff 91       	pop	r31
    1df0:	ef 91       	pop	r30
    1df2:	bf 91       	pop	r27
    1df4:	af 91       	pop	r26
    1df6:	9f 91       	pop	r25
    1df8:	8f 91       	pop	r24
    1dfa:	7f 91       	pop	r23
    1dfc:	6f 91       	pop	r22
    1dfe:	5f 91       	pop	r21
    1e00:	4f 91       	pop	r20
    1e02:	3f 91       	pop	r19
    1e04:	2f 91       	pop	r18
    1e06:	ff 90       	pop	r15
    1e08:	ef 90       	pop	r14
    1e0a:	df 90       	pop	r13
    1e0c:	cf 90       	pop	r12
    1e0e:	0f 90       	pop	r0
    1e10:	0f be       	out	0x3f, r0	; 63
    1e12:	0f 90       	pop	r0
    1e14:	1f 90       	pop	r1
    1e16:	18 95       	reti

00001e18 <async>:
    1e18:	3f 92       	push	r3
    1e1a:	4f 92       	push	r4
    1e1c:	5f 92       	push	r5
    1e1e:	6f 92       	push	r6
    1e20:	7f 92       	push	r7
    1e22:	8f 92       	push	r8
    1e24:	9f 92       	push	r9
    1e26:	af 92       	push	r10
    1e28:	bf 92       	push	r11
    1e2a:	cf 92       	push	r12
    1e2c:	df 92       	push	r13
    1e2e:	ef 92       	push	r14
    1e30:	ff 92       	push	r15
    1e32:	0f 93       	push	r16
    1e34:	1f 93       	push	r17
    1e36:	cf 93       	push	r28
    1e38:	df 93       	push	r29
    1e3a:	2b 01       	movw	r4, r22
    1e3c:	3c 01       	movw	r6, r24
    1e3e:	49 01       	movw	r8, r18
    1e40:	5a 01       	movw	r10, r20
    1e42:	8f b7       	in	r24, 0x3f	; 63
    1e44:	80 78       	andi	r24, 0x80	; 128
    1e46:	38 2e       	mov	r3, r24
    1e48:	f8 94       	cli
    1e4a:	86 e0       	ldi	r24, 0x06	; 6
    1e4c:	91 e0       	ldi	r25, 0x01	; 1
    1e4e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <dequeue>
    1e52:	ec 01       	movw	r28, r24
    1e54:	1b 87       	std	Y+11, r17	; 0x0b
    1e56:	0a 87       	std	Y+10, r16	; 0x0a
    1e58:	fd 86       	std	Y+13, r15	; 0x0d
    1e5a:	ec 86       	std	Y+12, r14	; 0x0c
    1e5c:	df 86       	std	Y+15, r13	; 0x0f
    1e5e:	ce 86       	std	Y+14, r12	; 0x0e
    1e60:	33 20       	and	r3, r3
    1e62:	61 f0       	breq	.+24     	; 0x1e7c <async+0x64>
    1e64:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e68:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e6c:	02 80       	ldd	r0, Z+2	; 0x02
    1e6e:	f3 81       	ldd	r31, Z+3	; 0x03
    1e70:	e0 2d       	mov	r30, r0
    1e72:	82 81       	ldd	r24, Z+2	; 0x02
    1e74:	93 81       	ldd	r25, Z+3	; 0x03
    1e76:	a4 81       	ldd	r26, Z+4	; 0x04
    1e78:	b5 81       	ldd	r27, Z+5	; 0x05
    1e7a:	08 c0       	rjmp	.+16     	; 0x1e8c <async+0x74>
    1e7c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <timestamp>
    1e80:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <timestamp+0x1>
    1e84:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <timestamp+0x2>
    1e88:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <timestamp+0x3>
    1e8c:	48 0e       	add	r4, r24
    1e8e:	59 1e       	adc	r5, r25
    1e90:	6a 1e       	adc	r6, r26
    1e92:	7b 1e       	adc	r7, r27
    1e94:	4a 82       	std	Y+2, r4	; 0x02
    1e96:	5b 82       	std	Y+3, r5	; 0x03
    1e98:	6c 82       	std	Y+4, r6	; 0x04
    1e9a:	7d 82       	std	Y+5, r7	; 0x05
    1e9c:	18 14       	cp	r1, r8
    1e9e:	19 04       	cpc	r1, r9
    1ea0:	1a 04       	cpc	r1, r10
    1ea2:	1b 04       	cpc	r1, r11
    1ea4:	44 f0       	brlt	.+16     	; 0x1eb6 <async+0x9e>
    1ea6:	0f 2e       	mov	r0, r31
    1ea8:	88 24       	eor	r8, r8
    1eaa:	8a 94       	dec	r8
    1eac:	98 2c       	mov	r9, r8
    1eae:	a8 2c       	mov	r10, r8
    1eb0:	ff e7       	ldi	r31, 0x7F	; 127
    1eb2:	bf 2e       	mov	r11, r31
    1eb4:	f0 2d       	mov	r31, r0
    1eb6:	84 0c       	add	r8, r4
    1eb8:	95 1c       	adc	r9, r5
    1eba:	a6 1c       	adc	r10, r6
    1ebc:	b7 1c       	adc	r11, r7
    1ebe:	8e 82       	std	Y+6, r8	; 0x06
    1ec0:	9f 82       	std	Y+7, r9	; 0x07
    1ec2:	a8 86       	std	Y+8, r10	; 0x08
    1ec4:	b9 86       	std	Y+9, r11	; 0x09
    1ec6:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1eca:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1ece:	c9 01       	movw	r24, r18
    1ed0:	03 2e       	mov	r0, r19
    1ed2:	00 0c       	add	r0, r0
    1ed4:	aa 0b       	sbc	r26, r26
    1ed6:	bb 0b       	sbc	r27, r27
    1ed8:	dc 01       	movw	r26, r24
    1eda:	99 27       	eor	r25, r25
    1edc:	88 27       	eor	r24, r24
    1ede:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ee2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ee6:	60 e0       	ldi	r22, 0x00	; 0
    1ee8:	70 e0       	ldi	r23, 0x00	; 0
    1eea:	84 2b       	or	r24, r20
    1eec:	95 2b       	or	r25, r21
    1eee:	a6 2b       	or	r26, r22
    1ef0:	b7 2b       	or	r27, r23
    1ef2:	b0 9b       	sbis	0x16, 0	; 22
    1ef4:	13 c0       	rjmp	.+38     	; 0x1f1c <async+0x104>
    1ef6:	c9 01       	movw	r24, r18
    1ef8:	01 96       	adiw	r24, 0x01	; 1
    1efa:	09 2e       	mov	r0, r25
    1efc:	00 0c       	add	r0, r0
    1efe:	aa 0b       	sbc	r26, r26
    1f00:	bb 0b       	sbc	r27, r27
    1f02:	dc 01       	movw	r26, r24
    1f04:	99 27       	eor	r25, r25
    1f06:	88 27       	eor	r24, r24
    1f08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	70 e0       	ldi	r23, 0x00	; 0
    1f14:	84 2b       	or	r24, r20
    1f16:	95 2b       	or	r25, r21
    1f18:	a6 2b       	or	r26, r22
    1f1a:	b7 2b       	or	r27, r23
    1f1c:	48 1a       	sub	r4, r24
    1f1e:	59 0a       	sbc	r5, r25
    1f20:	6a 0a       	sbc	r6, r26
    1f22:	7b 0a       	sbc	r7, r27
    1f24:	14 14       	cp	r1, r4
    1f26:	15 04       	cpc	r1, r5
    1f28:	16 04       	cpc	r1, r6
    1f2a:	17 04       	cpc	r1, r7
    1f2c:	ac f5       	brge	.+106    	; 0x1f98 <async+0x180>
    1f2e:	6e e3       	ldi	r22, 0x3E	; 62
    1f30:	71 e0       	ldi	r23, 0x01	; 1
    1f32:	ce 01       	movw	r24, r28
    1f34:	0e 94 ab 05 	call	0xb56	; 0xb56 <enqueueByBaseline>
    1f38:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1f3c:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1f40:	30 97       	sbiw	r30, 0x00	; 0
    1f42:	21 f1       	breq	.+72     	; 0x1f8c <async+0x174>
    1f44:	82 81       	ldd	r24, Z+2	; 0x02
    1f46:	93 81       	ldd	r25, Z+3	; 0x03
    1f48:	a4 81       	ldd	r26, Z+4	; 0x04
    1f4a:	b5 81       	ldd	r27, Z+5	; 0x05
    1f4c:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <__data_end>
    1f50:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <__data_end+0x1>
    1f54:	2a 17       	cp	r18, r26
    1f56:	3b 07       	cpc	r19, r27
    1f58:	c9 f4       	brne	.+50     	; 0x1f8c <async+0x174>
    1f5a:	9c 01       	movw	r18, r24
    1f5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f64:	84 1b       	sub	r24, r20
    1f66:	95 0b       	sbc	r25, r21
    1f68:	01 97       	sbiw	r24, 0x01	; 1
    1f6a:	31 f4       	brne	.+12     	; 0x1f78 <async+0x160>
    1f6c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f70:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f74:	2f 5f       	subi	r18, 0xFF	; 255
    1f76:	3f 4f       	sbci	r19, 0xFF	; 255
    1f78:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1f7c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1f80:	ef e6       	ldi	r30, 0x6F	; 111
    1f82:	f0 e0       	ldi	r31, 0x00	; 0
    1f84:	80 81       	ld	r24, Z
    1f86:	82 60       	ori	r24, 0x02	; 2
    1f88:	80 83       	st	Z, r24
    1f8a:	39 c0       	rjmp	.+114    	; 0x1ffe <async+0x1e6>
    1f8c:	ef e6       	ldi	r30, 0x6F	; 111
    1f8e:	f0 e0       	ldi	r31, 0x00	; 0
    1f90:	80 81       	ld	r24, Z
    1f92:	8d 7f       	andi	r24, 0xFD	; 253
    1f94:	80 83       	st	Z, r24
    1f96:	33 c0       	rjmp	.+102    	; 0x1ffe <async+0x1e6>
    1f98:	60 e4       	ldi	r22, 0x40	; 64
    1f9a:	71 e0       	ldi	r23, 0x01	; 1
    1f9c:	ce 01       	movw	r24, r28
    1f9e:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <enqueueByDeadline>
    1fa2:	33 20       	and	r3, r3
    1fa4:	61 f1       	breq	.+88     	; 0x1ffe <async+0x1e6>
    1fa6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1faa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1fae:	89 2b       	or	r24, r25
    1fb0:	31 f1       	breq	.+76     	; 0x1ffe <async+0x1e6>
    1fb2:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    1fb6:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    1fba:	86 81       	ldd	r24, Z+6	; 0x06
    1fbc:	97 81       	ldd	r25, Z+7	; 0x07
    1fbe:	a0 85       	ldd	r26, Z+8	; 0x08
    1fc0:	b1 85       	ldd	r27, Z+9	; 0x09
    1fc2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fc6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fca:	02 80       	ldd	r0, Z+2	; 0x02
    1fcc:	f3 81       	ldd	r31, Z+3	; 0x03
    1fce:	e0 2d       	mov	r30, r0
    1fd0:	46 81       	ldd	r20, Z+6	; 0x06
    1fd2:	57 81       	ldd	r21, Z+7	; 0x07
    1fd4:	60 85       	ldd	r22, Z+8	; 0x08
    1fd6:	71 85       	ldd	r23, Z+9	; 0x09
    1fd8:	84 1b       	sub	r24, r20
    1fda:	95 0b       	sbc	r25, r21
    1fdc:	a6 0b       	sbc	r26, r22
    1fde:	b7 0b       	sbc	r27, r23
    1fe0:	72 f4       	brpl	.+28     	; 0x1ffe <async+0x1e6>
    1fe2:	84 e0       	ldi	r24, 0x04	; 4
    1fe4:	91 e0       	ldi	r25, 0x01	; 1
    1fe6:	0e 94 07 06 	call	0xc0e	; 0xc0e <pop>
    1fea:	62 e0       	ldi	r22, 0x02	; 2
    1fec:	71 e0       	ldi	r23, 0x01	; 1
    1fee:	0e 94 fd 05 	call	0xbfa	; 0xbfa <push>
    1ff2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1ff6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1ffa:	0e 94 5a 05 	call	0xab4	; 0xab4 <dispatch>
    1ffe:	33 20       	and	r3, r3
    2000:	09 f0       	breq	.+2      	; 0x2004 <async+0x1ec>
    2002:	78 94       	sei
    2004:	ce 01       	movw	r24, r28
    2006:	df 91       	pop	r29
    2008:	cf 91       	pop	r28
    200a:	1f 91       	pop	r17
    200c:	0f 91       	pop	r16
    200e:	ff 90       	pop	r15
    2010:	ef 90       	pop	r14
    2012:	df 90       	pop	r13
    2014:	cf 90       	pop	r12
    2016:	bf 90       	pop	r11
    2018:	af 90       	pop	r10
    201a:	9f 90       	pop	r9
    201c:	8f 90       	pop	r8
    201e:	7f 90       	pop	r7
    2020:	6f 90       	pop	r6
    2022:	5f 90       	pop	r5
    2024:	4f 90       	pop	r4
    2026:	3f 90       	pop	r3
    2028:	08 95       	ret

0000202a <sync>:
    202a:	cf 92       	push	r12
    202c:	df 92       	push	r13
    202e:	ef 92       	push	r14
    2030:	ff 92       	push	r15
    2032:	0f 93       	push	r16
    2034:	1f 93       	push	r17
    2036:	cf 93       	push	r28
    2038:	df 93       	push	r29
    203a:	ec 01       	movw	r28, r24
    203c:	7b 01       	movw	r14, r22
    203e:	6a 01       	movw	r12, r20
    2040:	1f b7       	in	r17, 0x3f	; 63
    2042:	10 78       	andi	r17, 0x80	; 128
    2044:	f8 94       	cli
    2046:	a8 81       	ld	r26, Y
    2048:	b9 81       	ldd	r27, Y+1	; 0x01
    204a:	10 97       	sbiw	r26, 0x00	; 0
    204c:	19 f4       	brne	.+6      	; 0x2054 <sync+0x2a>
    204e:	35 c0       	rjmp	.+106    	; 0x20ba <sync+0x90>
    2050:	a0 81       	ld	r26, Z
    2052:	b1 81       	ldd	r27, Z+1	; 0x01
    2054:	14 96       	adiw	r26, 0x04	; 4
    2056:	ed 91       	ld	r30, X+
    2058:	fc 91       	ld	r31, X
    205a:	15 97       	sbiw	r26, 0x05	; 5
    205c:	30 97       	sbiw	r30, 0x00	; 0
    205e:	c1 f7       	brne	.-16     	; 0x2050 <sync+0x26>
    2060:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2064:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2068:	a2 17       	cp	r26, r18
    206a:	b3 07       	cpc	r27, r19
    206c:	11 f0       	breq	.+4      	; 0x2072 <sync+0x48>
    206e:	11 11       	cpse	r17, r1
    2070:	07 c0       	rjmp	.+14     	; 0x2080 <sync+0x56>
    2072:	11 23       	and	r17, r17
    2074:	09 f4       	brne	.+2      	; 0x2078 <sync+0x4e>
    2076:	4a c0       	rjmp	.+148    	; 0x210c <sync+0xe2>
    2078:	78 94       	sei
    207a:	8f ef       	ldi	r24, 0xFF	; 255
    207c:	9f ef       	ldi	r25, 0xFF	; 255
    207e:	4e c0       	rjmp	.+156    	; 0x211c <sync+0xf2>
    2080:	8a 81       	ldd	r24, Y+2	; 0x02
    2082:	9b 81       	ldd	r25, Y+3	; 0x03
    2084:	00 97       	sbiw	r24, 0x00	; 0
    2086:	19 f0       	breq	.+6      	; 0x208e <sync+0x64>
    2088:	fc 01       	movw	r30, r24
    208a:	15 82       	std	Z+5, r1	; 0x05
    208c:	14 82       	std	Z+4, r1	; 0x04
    208e:	3b 83       	std	Y+3, r19	; 0x03
    2090:	2a 83       	std	Y+2, r18	; 0x02
    2092:	f9 01       	movw	r30, r18
    2094:	d5 83       	std	Z+5, r29	; 0x05
    2096:	c4 83       	std	Z+4, r28	; 0x04
    2098:	cd 01       	movw	r24, r26
    209a:	0e 94 5a 05 	call	0xab4	; 0xab4 <dispatch>
    209e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20a2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20a6:	82 81       	ldd	r24, Z+2	; 0x02
    20a8:	93 81       	ldd	r25, Z+3	; 0x03
    20aa:	89 2b       	or	r24, r25
    20ac:	31 f4       	brne	.+12     	; 0x20ba <sync+0x90>
    20ae:	11 23       	and	r17, r17
    20b0:	81 f1       	breq	.+96     	; 0x2112 <sync+0xe8>
    20b2:	78 94       	sei
    20b4:	80 e0       	ldi	r24, 0x00	; 0
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	31 c0       	rjmp	.+98     	; 0x211c <sync+0xf2>
    20ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20c2:	99 83       	std	Y+1, r25	; 0x01
    20c4:	88 83       	st	Y, r24
    20c6:	11 23       	and	r17, r17
    20c8:	29 f0       	breq	.+10     	; 0x20d4 <sync+0xaa>
    20ca:	8a 81       	ldd	r24, Y+2	; 0x02
    20cc:	9b 81       	ldd	r25, Y+3	; 0x03
    20ce:	01 97       	sbiw	r24, 0x01	; 1
    20d0:	09 f0       	breq	.+2      	; 0x20d4 <sync+0xaa>
    20d2:	78 94       	sei
    20d4:	b6 01       	movw	r22, r12
    20d6:	ce 01       	movw	r24, r28
    20d8:	f7 01       	movw	r30, r14
    20da:	09 95       	icall
    20dc:	f8 2e       	mov	r15, r24
    20de:	09 2f       	mov	r16, r25
    20e0:	8f b7       	in	r24, 0x3f	; 63
    20e2:	f8 94       	cli
    20e4:	19 82       	std	Y+1, r1	; 0x01
    20e6:	18 82       	st	Y, r1
    20e8:	8a 81       	ldd	r24, Y+2	; 0x02
    20ea:	9b 81       	ldd	r25, Y+3	; 0x03
    20ec:	82 30       	cpi	r24, 0x02	; 2
    20ee:	91 05       	cpc	r25, r1
    20f0:	38 f0       	brcs	.+14     	; 0x2100 <sync+0xd6>
    20f2:	1b 82       	std	Y+3, r1	; 0x03
    20f4:	1a 82       	std	Y+2, r1	; 0x02
    20f6:	fc 01       	movw	r30, r24
    20f8:	15 82       	std	Z+5, r1	; 0x05
    20fa:	14 82       	std	Z+4, r1	; 0x04
    20fc:	0e 94 5a 05 	call	0xab4	; 0xab4 <dispatch>
    2100:	11 23       	and	r17, r17
    2102:	51 f0       	breq	.+20     	; 0x2118 <sync+0xee>
    2104:	78 94       	sei
    2106:	8f 2d       	mov	r24, r15
    2108:	90 2f       	mov	r25, r16
    210a:	08 c0       	rjmp	.+16     	; 0x211c <sync+0xf2>
    210c:	8f ef       	ldi	r24, 0xFF	; 255
    210e:	9f ef       	ldi	r25, 0xFF	; 255
    2110:	05 c0       	rjmp	.+10     	; 0x211c <sync+0xf2>
    2112:	80 e0       	ldi	r24, 0x00	; 0
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	02 c0       	rjmp	.+4      	; 0x211c <sync+0xf2>
    2118:	8f 2d       	mov	r24, r15
    211a:	90 2f       	mov	r25, r16
    211c:	df 91       	pop	r29
    211e:	cf 91       	pop	r28
    2120:	1f 91       	pop	r17
    2122:	0f 91       	pop	r16
    2124:	ff 90       	pop	r15
    2126:	ef 90       	pop	r14
    2128:	df 90       	pop	r13
    212a:	cf 90       	pop	r12
    212c:	08 95       	ret

0000212e <run>:
    212e:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2132:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2136:	80 e4       	ldi	r24, 0x40	; 64
    2138:	91 e0       	ldi	r25, 0x01	; 1
    213a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <dequeue>
    213e:	ec 01       	movw	r28, r24
    2140:	f8 01       	movw	r30, r16
    2142:	93 83       	std	Z+3, r25	; 0x03
    2144:	82 83       	std	Z+2, r24	; 0x02
    2146:	78 94       	sei
    2148:	6c 85       	ldd	r22, Y+12	; 0x0c
    214a:	7d 85       	ldd	r23, Y+13	; 0x0d
    214c:	4e 85       	ldd	r20, Y+14	; 0x0e
    214e:	5f 85       	ldd	r21, Y+15	; 0x0f
    2150:	8a 85       	ldd	r24, Y+10	; 0x0a
    2152:	9b 85       	ldd	r25, Y+11	; 0x0b
    2154:	0e 94 15 10 	call	0x202a	; 0x202a <sync>
    2158:	8f b7       	in	r24, 0x3f	; 63
    215a:	f8 94       	cli
    215c:	66 e0       	ldi	r22, 0x06	; 6
    215e:	71 e0       	ldi	r23, 0x01	; 1
    2160:	ce 01       	movw	r24, r28
    2162:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <insert>
    2166:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    216a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    216e:	01 90       	ld	r0, Z+
    2170:	f0 81       	ld	r31, Z
    2172:	e0 2d       	mov	r30, r0
    2174:	c2 81       	ldd	r28, Z+2	; 0x02
    2176:	d3 81       	ldd	r29, Z+3	; 0x03
    2178:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    217c:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    2180:	30 97       	sbiw	r30, 0x00	; 0
    2182:	a1 f0       	breq	.+40     	; 0x21ac <run+0x7e>
    2184:	20 97       	sbiw	r28, 0x00	; 0
    2186:	99 f2       	breq	.-90     	; 0x212e <run>
    2188:	86 81       	ldd	r24, Z+6	; 0x06
    218a:	97 81       	ldd	r25, Z+7	; 0x07
    218c:	a0 85       	ldd	r26, Z+8	; 0x08
    218e:	b1 85       	ldd	r27, Z+9	; 0x09
    2190:	4e 81       	ldd	r20, Y+6	; 0x06
    2192:	5f 81       	ldd	r21, Y+7	; 0x07
    2194:	68 85       	ldd	r22, Y+8	; 0x08
    2196:	79 85       	ldd	r23, Y+9	; 0x09
    2198:	84 1b       	sub	r24, r20
    219a:	95 0b       	sbc	r25, r21
    219c:	a6 0b       	sbc	r26, r22
    219e:	b7 0b       	sbc	r27, r23
    21a0:	18 16       	cp	r1, r24
    21a2:	19 06       	cpc	r1, r25
    21a4:	1a 06       	cpc	r1, r26
    21a6:	1b 06       	cpc	r1, r27
    21a8:	0c f0       	brlt	.+2      	; 0x21ac <run+0x7e>
    21aa:	c1 cf       	rjmp	.-126    	; 0x212e <run>
    21ac:	82 e0       	ldi	r24, 0x02	; 2
    21ae:	91 e0       	ldi	r25, 0x01	; 1
    21b0:	0e 94 07 06 	call	0xc0e	; 0xc0e <pop>
    21b4:	64 e0       	ldi	r22, 0x04	; 4
    21b6:	71 e0       	ldi	r23, 0x01	; 1
    21b8:	0e 94 fd 05 	call	0xbfa	; 0xbfa <push>
    21bc:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    21c0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    21c4:	02 c0       	rjmp	.+4      	; 0x21ca <run+0x9c>
    21c6:	a0 81       	ld	r26, Z
    21c8:	b1 81       	ldd	r27, Z+1	; 0x01
    21ca:	14 96       	adiw	r26, 0x04	; 4
    21cc:	ed 91       	ld	r30, X+
    21ce:	fc 91       	ld	r31, X
    21d0:	15 97       	sbiw	r26, 0x05	; 5
    21d2:	30 97       	sbiw	r30, 0x00	; 0
    21d4:	c1 f7       	brne	.-16     	; 0x21c6 <run+0x98>
    21d6:	cd 01       	movw	r24, r26
    21d8:	0e 94 5a 05 	call	0xab4	; 0xab4 <dispatch>
    21dc:	a8 cf       	rjmp	.-176    	; 0x212e <run>

000021de <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    21de:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    21e0:	42 31       	cpi	r20, 0x12	; 18
    21e2:	b8 f4       	brcc	.+46     	; 0x2212 <install+0x34>
        char status;
        DISABLE(status);
    21e4:	9f b7       	in	r25, 0x3f	; 63
    21e6:	90 78       	andi	r25, 0x80	; 128
    21e8:	f8 94       	cli
        otable[i] = obj;
    21ea:	50 e0       	ldi	r21, 0x00	; 0
    21ec:	44 0f       	add	r20, r20
    21ee:	55 1f       	adc	r21, r21
    21f0:	da 01       	movw	r26, r20
    21f2:	ae 5b       	subi	r26, 0xBE	; 190
    21f4:	be 4f       	sbci	r27, 0xFE	; 254
    21f6:	ed 93       	st	X+, r30
    21f8:	fc 93       	st	X, r31
        mtable[i] = m;
    21fa:	da 01       	movw	r26, r20
    21fc:	a6 52       	subi	r26, 0x26	; 38
    21fe:	be 4f       	sbci	r27, 0xFE	; 254
    2200:	6d 93       	st	X+, r22
    2202:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2204:	21 e0       	ldi	r18, 0x01	; 1
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	33 83       	std	Z+3, r19	; 0x03
    220a:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    220c:	99 23       	and	r25, r25
    220e:	09 f0       	breq	.+2      	; 0x2212 <install+0x34>
    2210:	78 94       	sei
    2212:	08 95       	ret

00002214 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2214:	8c 01       	movw	r16, r24
    2216:	7b 01       	movw	r14, r22
    2218:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    221a:	8f b7       	in	r24, 0x3f	; 63
    221c:	f8 94       	cli
    initialize();
    221e:	0e 94 c0 04 	call	0x980	; 0x980 <initialize>
    ENABLE(1);
    2222:	78 94       	sei
    if (m != NULL)
    2224:	e1 14       	cp	r14, r1
    2226:	f1 04       	cpc	r15, r1
    2228:	41 f0       	breq	.+16     	; 0x223a <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    222a:	20 e0       	ldi	r18, 0x00	; 0
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	a9 01       	movw	r20, r18
    2230:	60 e0       	ldi	r22, 0x00	; 0
    2232:	70 e0       	ldi	r23, 0x00	; 0
    2234:	cb 01       	movw	r24, r22
    2236:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <async>
    DISABLE(status);
    223a:	8f b7       	in	r24, 0x3f	; 63
    223c:	f8 94       	cli
    idle();
    223e:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <idle>

00002242 <__divmodhi4>:
    2242:	97 fb       	bst	r25, 7
    2244:	07 2e       	mov	r0, r23
    2246:	16 f4       	brtc	.+4      	; 0x224c <__divmodhi4+0xa>
    2248:	00 94       	com	r0
    224a:	07 d0       	rcall	.+14     	; 0x225a <__divmodhi4_neg1>
    224c:	77 fd       	sbrc	r23, 7
    224e:	09 d0       	rcall	.+18     	; 0x2262 <__divmodhi4_neg2>
    2250:	0e 94 3c 11 	call	0x2278	; 0x2278 <__udivmodhi4>
    2254:	07 fc       	sbrc	r0, 7
    2256:	05 d0       	rcall	.+10     	; 0x2262 <__divmodhi4_neg2>
    2258:	3e f4       	brtc	.+14     	; 0x2268 <__divmodhi4_exit>

0000225a <__divmodhi4_neg1>:
    225a:	90 95       	com	r25
    225c:	81 95       	neg	r24
    225e:	9f 4f       	sbci	r25, 0xFF	; 255
    2260:	08 95       	ret

00002262 <__divmodhi4_neg2>:
    2262:	70 95       	com	r23
    2264:	61 95       	neg	r22
    2266:	7f 4f       	sbci	r23, 0xFF	; 255

00002268 <__divmodhi4_exit>:
    2268:	08 95       	ret

0000226a <__usmulhisi3>:
    226a:	0e 94 50 11 	call	0x22a0	; 0x22a0 <__umulhisi3>

0000226e <__usmulhisi3_tail>:
    226e:	b7 ff       	sbrs	r27, 7
    2270:	08 95       	ret
    2272:	82 1b       	sub	r24, r18
    2274:	93 0b       	sbc	r25, r19
    2276:	08 95       	ret

00002278 <__udivmodhi4>:
    2278:	aa 1b       	sub	r26, r26
    227a:	bb 1b       	sub	r27, r27
    227c:	51 e1       	ldi	r21, 0x11	; 17
    227e:	07 c0       	rjmp	.+14     	; 0x228e <__udivmodhi4_ep>

00002280 <__udivmodhi4_loop>:
    2280:	aa 1f       	adc	r26, r26
    2282:	bb 1f       	adc	r27, r27
    2284:	a6 17       	cp	r26, r22
    2286:	b7 07       	cpc	r27, r23
    2288:	10 f0       	brcs	.+4      	; 0x228e <__udivmodhi4_ep>
    228a:	a6 1b       	sub	r26, r22
    228c:	b7 0b       	sbc	r27, r23

0000228e <__udivmodhi4_ep>:
    228e:	88 1f       	adc	r24, r24
    2290:	99 1f       	adc	r25, r25
    2292:	5a 95       	dec	r21
    2294:	a9 f7       	brne	.-22     	; 0x2280 <__udivmodhi4_loop>
    2296:	80 95       	com	r24
    2298:	90 95       	com	r25
    229a:	bc 01       	movw	r22, r24
    229c:	cd 01       	movw	r24, r26
    229e:	08 95       	ret

000022a0 <__umulhisi3>:
    22a0:	a2 9f       	mul	r26, r18
    22a2:	b0 01       	movw	r22, r0
    22a4:	b3 9f       	mul	r27, r19
    22a6:	c0 01       	movw	r24, r0
    22a8:	a3 9f       	mul	r26, r19
    22aa:	70 0d       	add	r23, r0
    22ac:	81 1d       	adc	r24, r1
    22ae:	11 24       	eor	r1, r1
    22b0:	91 1d       	adc	r25, r1
    22b2:	b2 9f       	mul	r27, r18
    22b4:	70 0d       	add	r23, r0
    22b6:	81 1d       	adc	r24, r1
    22b8:	11 24       	eor	r1, r1
    22ba:	91 1d       	adc	r25, r1
    22bc:	08 95       	ret

000022be <setjmp>:
    22be:	dc 01       	movw	r26, r24
    22c0:	2d 92       	st	X+, r2
    22c2:	3d 92       	st	X+, r3
    22c4:	4d 92       	st	X+, r4
    22c6:	5d 92       	st	X+, r5
    22c8:	6d 92       	st	X+, r6
    22ca:	7d 92       	st	X+, r7
    22cc:	8d 92       	st	X+, r8
    22ce:	9d 92       	st	X+, r9
    22d0:	ad 92       	st	X+, r10
    22d2:	bd 92       	st	X+, r11
    22d4:	cd 92       	st	X+, r12
    22d6:	dd 92       	st	X+, r13
    22d8:	ed 92       	st	X+, r14
    22da:	fd 92       	st	X+, r15
    22dc:	0d 93       	st	X+, r16
    22de:	1d 93       	st	X+, r17
    22e0:	cd 93       	st	X+, r28
    22e2:	dd 93       	st	X+, r29
    22e4:	ff 91       	pop	r31
    22e6:	ef 91       	pop	r30
    22e8:	8d b7       	in	r24, 0x3d	; 61
    22ea:	8d 93       	st	X+, r24
    22ec:	8e b7       	in	r24, 0x3e	; 62
    22ee:	8d 93       	st	X+, r24
    22f0:	8f b7       	in	r24, 0x3f	; 63
    22f2:	8d 93       	st	X+, r24
    22f4:	ed 93       	st	X+, r30
    22f6:	fd 93       	st	X+, r31
    22f8:	88 27       	eor	r24, r24
    22fa:	99 27       	eor	r25, r25
    22fc:	09 94       	ijmp

000022fe <longjmp>:
    22fe:	dc 01       	movw	r26, r24
    2300:	cb 01       	movw	r24, r22
    2302:	81 30       	cpi	r24, 0x01	; 1
    2304:	91 05       	cpc	r25, r1
    2306:	81 1d       	adc	r24, r1
    2308:	2d 90       	ld	r2, X+
    230a:	3d 90       	ld	r3, X+
    230c:	4d 90       	ld	r4, X+
    230e:	5d 90       	ld	r5, X+
    2310:	6d 90       	ld	r6, X+
    2312:	7d 90       	ld	r7, X+
    2314:	8d 90       	ld	r8, X+
    2316:	9d 90       	ld	r9, X+
    2318:	ad 90       	ld	r10, X+
    231a:	bd 90       	ld	r11, X+
    231c:	cd 90       	ld	r12, X+
    231e:	dd 90       	ld	r13, X+
    2320:	ed 90       	ld	r14, X+
    2322:	fd 90       	ld	r15, X+
    2324:	0d 91       	ld	r16, X+
    2326:	1d 91       	ld	r17, X+
    2328:	cd 91       	ld	r28, X+
    232a:	dd 91       	ld	r29, X+
    232c:	ed 91       	ld	r30, X+
    232e:	fd 91       	ld	r31, X+
    2330:	0d 90       	ld	r0, X+
    2332:	f8 94       	cli
    2334:	fe bf       	out	0x3e, r31	; 62
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	ed bf       	out	0x3d, r30	; 61
    233a:	ed 91       	ld	r30, X+
    233c:	fd 91       	ld	r31, X+
    233e:	09 94       	ijmp

00002340 <_exit>:
    2340:	f8 94       	cli

00002342 <__stop_program>:
    2342:	ff cf       	rjmp	.-2      	; 0x2342 <__stop_program>
