
Lab1-Proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000fe  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000070  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000000fe  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000012d  2**0
                  CONTENTS, READONLY
  4 .debug_info   000007b6  00000000  00000000  0000013b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000074b  00000000  00000000  000008f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000125  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000002b3  00000000  00000000  00001161  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .text         00000002  00000088  00000088  000000fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .text.startup.main 00000002  0000007e  0000007e  000000f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.__dummy_fini 00000002  00000080  00000080  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.__dummy_funcs_on_exit 00000002  00000086  00000086  000000fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.__dummy_simulator_exit 00000002  00000082  00000082  000000f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.exit    0000000e  00000070  00000070  000000e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text._Exit   00000002  00000084  00000084  000000f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	2d c0       	rjmp	.+90     	; 0x5c <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
	...

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61
  68:	0a d0       	rcall	.+20     	; 0x7e <main>
  6a:	02 c0       	rjmp	.+4      	; 0x70 <_etext>

0000006c <_exit>:
  6c:	f8 94       	cli

0000006e <__stop_program>:
  6e:	ff cf       	rjmp	.-2      	; 0x6e <__stop_program>

Disassembly of section .text:

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.startup.main:

0000007e <main>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <main>

Disassembly of section .text.__dummy_fini:

00000080 <_fini>:
  80:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000086 <__funcs_on_exit>:
  86:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000082 <__simulator_exit>:
  82:	08 95       	ret

Disassembly of section .text.exit:

00000070 <exit>:
  70:	ec 01       	movw	r28, r24
  72:	09 d0       	rcall	.+18     	; 0x86 <__funcs_on_exit>
  74:	05 d0       	rcall	.+10     	; 0x80 <_fini>
  76:	ce 01       	movw	r24, r28
  78:	04 d0       	rcall	.+8      	; 0x82 <__simulator_exit>
  7a:	ce 01       	movw	r24, r28
  7c:	03 d0       	rcall	.+6      	; 0x84 <_Exit>

Disassembly of section .text._Exit:

00000084 <_Exit>:
  84:	f3 df       	rcall	.-26     	; 0x6c <_exit>
