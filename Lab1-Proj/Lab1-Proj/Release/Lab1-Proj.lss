
Lab1-Proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000020e  000002a2  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002a2  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000002d1  2**0
                  CONTENTS, READONLY
  4 .debug_info   000007b6  00000000  00000000  000002df  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000074b  00000000  00000000  00000a95  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000125  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000002b3  00000000  00000000  00001305  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .text         00000002  000001dc  000001dc  00000270  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .text.LCD_Init 0000001a  000000da  000000da  0000016e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.writeChar 000000d4  000000fc  000000fc  00000190  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .data.offsetPos 00000008  00800100  000001de  00000272  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 13 .rodata.charCodes 00000028  00800108  000001e6  0000027a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 14 .text.CLK_init 0000000c  000001d0  000001d0  00000264  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.button_init 00000008  000000f4  000000f4  00000188  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    00000010  000000c2  000000c2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_fini 00000002  000000d2  000000d2  00000166  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  000000d8  000000d8  0000016c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  000000d4  000000d4  00000168  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    0000000e  000000b4  000000b4  00000148  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000002  000000d6  000000d6  0000016a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	31 c0       	rjmp	.+98     	; 0x64 <__ctors_end>
   2:	00 00       	nop
   4:	eb c0       	rjmp	.+470    	; 0x1dc <__bad_interrupt>
   6:	00 00       	nop
   8:	e9 c0       	rjmp	.+466    	; 0x1dc <__bad_interrupt>
   a:	00 00       	nop
   c:	e7 c0       	rjmp	.+462    	; 0x1dc <__bad_interrupt>
   e:	00 00       	nop
  10:	e5 c0       	rjmp	.+458    	; 0x1dc <__bad_interrupt>
  12:	00 00       	nop
  14:	e3 c0       	rjmp	.+454    	; 0x1dc <__bad_interrupt>
  16:	00 00       	nop
  18:	e1 c0       	rjmp	.+450    	; 0x1dc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	df c0       	rjmp	.+446    	; 0x1dc <__bad_interrupt>
  1e:	00 00       	nop
  20:	dd c0       	rjmp	.+442    	; 0x1dc <__bad_interrupt>
  22:	00 00       	nop
  24:	db c0       	rjmp	.+438    	; 0x1dc <__bad_interrupt>
  26:	00 00       	nop
  28:	d9 c0       	rjmp	.+434    	; 0x1dc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	d7 c0       	rjmp	.+430    	; 0x1dc <__bad_interrupt>
  2e:	00 00       	nop
  30:	d5 c0       	rjmp	.+426    	; 0x1dc <__bad_interrupt>
  32:	00 00       	nop
  34:	d3 c0       	rjmp	.+422    	; 0x1dc <__bad_interrupt>
  36:	00 00       	nop
  38:	d1 c0       	rjmp	.+418    	; 0x1dc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	cf c0       	rjmp	.+414    	; 0x1dc <__bad_interrupt>
  3e:	00 00       	nop
  40:	cd c0       	rjmp	.+410    	; 0x1dc <__bad_interrupt>
  42:	00 00       	nop
  44:	cb c0       	rjmp	.+406    	; 0x1dc <__bad_interrupt>
  46:	00 00       	nop
  48:	c9 c0       	rjmp	.+402    	; 0x1dc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	c7 c0       	rjmp	.+398    	; 0x1dc <__bad_interrupt>
  4e:	00 00       	nop
  50:	c5 c0       	rjmp	.+394    	; 0x1dc <__bad_interrupt>
  52:	00 00       	nop
  54:	c3 c0       	rjmp	.+390    	; 0x1dc <__bad_interrupt>
  56:	00 00       	nop
  58:	c1 c0       	rjmp	.+386    	; 0x1dc <__bad_interrupt>
	...

0000005c <.dinit>:
  5c:	01 00       	.word	0x0001	; ????
  5e:	01 30       	cpi	r16, 0x01	; 1
  60:	00 01       	movw	r0, r0
  62:	de 00       	.word	0x00de	; ????

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf ef       	ldi	r28, 0xFF	; 255
  6a:	d4 e0       	ldi	r29, 0x04	; 4
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
  70:	ec e5       	ldi	r30, 0x5C	; 92
  72:	f0 e0       	ldi	r31, 0x00	; 0
  74:	40 e0       	ldi	r20, 0x00	; 0
  76:	17 c0       	rjmp	.+46     	; 0xa6 <__do_clear_bss+0x8>
  78:	b5 91       	lpm	r27, Z+
  7a:	a5 91       	lpm	r26, Z+
  7c:	35 91       	lpm	r19, Z+
  7e:	25 91       	lpm	r18, Z+
  80:	05 91       	lpm	r16, Z+
  82:	07 fd       	sbrc	r16, 7
  84:	0c c0       	rjmp	.+24     	; 0x9e <__do_clear_bss>
  86:	95 91       	lpm	r25, Z+
  88:	85 91       	lpm	r24, Z+
  8a:	ef 01       	movw	r28, r30
  8c:	f9 2f       	mov	r31, r25
  8e:	e8 2f       	mov	r30, r24
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a2 17       	cp	r26, r18
  96:	b3 07       	cpc	r27, r19
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0x20>
  9a:	fe 01       	movw	r30, r28
  9c:	04 c0       	rjmp	.+8      	; 0xa6 <__do_clear_bss+0x8>

0000009e <__do_clear_bss>:
  9e:	1d 92       	st	X+, r1
  a0:	a2 17       	cp	r26, r18
  a2:	b3 07       	cpc	r27, r19
  a4:	e1 f7       	brne	.-8      	; 0x9e <__do_clear_bss>
  a6:	e3 36       	cpi	r30, 0x63	; 99
  a8:	f4 07       	cpc	r31, r20
  aa:	31 f7       	brne	.-52     	; 0x78 <__do_copy_data+0x8>
  ac:	0a d0       	rcall	.+20     	; 0xc2 <main>
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <_etext>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>

Disassembly of section .text:

000001dc <__bad_interrupt>:
 1dc:	11 cf       	rjmp	.-478    	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.LCD_Init:

000000da <LCD_Init>:
  da:	87 eb       	ldi	r24, 0xB7	; 183
  dc:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
  e0:	87 e0       	ldi	r24, 0x07	; 7
  e2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
  e6:	8e e2       	ldi	r24, 0x2E	; 46
  e8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
  f2:	08 95       	ret

Disassembly of section .text.writeChar:

000000fc <writeChar>:
  fc:	66 30       	cpi	r22, 0x06	; 6
  fe:	71 05       	cpc	r23, r1
 100:	08 f0       	brcs	.+2      	; 0x104 <writeChar+0x8>
 102:	65 c0       	rjmp	.+202    	; 0x1ce <writeChar+0xd2>
 104:	90 ed       	ldi	r25, 0xD0	; 208
 106:	98 0f       	add	r25, r24
 108:	9a 30       	cpi	r25, 0x0A	; 10
 10a:	08 f0       	brcs	.+2      	; 0x10e <writeChar+0x12>
 10c:	60 c0       	rjmp	.+192    	; 0x1ce <writeChar+0xd2>
 10e:	fb 01       	movw	r30, r22
 110:	e0 50       	subi	r30, 0x00	; 0
 112:	ff 4f       	sbci	r31, 0xFF	; 255
 114:	e0 81       	ld	r30, Z
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	e4 51       	subi	r30, 0x14	; 20
 11a:	ff 4f       	sbci	r31, 0xFF	; 255
 11c:	a8 2f       	mov	r26, r24
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	d0 97       	sbiw	r26, 0x30	; 48
 122:	61 70       	andi	r22, 0x01	; 1
 124:	70 78       	andi	r23, 0x80	; 128
 126:	77 23       	and	r23, r23
 128:	34 f4       	brge	.+12     	; 0x136 <writeChar+0x3a>
 12a:	61 50       	subi	r22, 0x01	; 1
 12c:	71 09       	sbc	r23, r1
 12e:	6e 6f       	ori	r22, 0xFE	; 254
 130:	7f 6f       	ori	r23, 0xFF	; 255
 132:	6f 5f       	subi	r22, 0xFF	; 255
 134:	7f 4f       	sbci	r23, 0xFF	; 255
 136:	61 30       	cpi	r22, 0x01	; 1
 138:	71 05       	cpc	r23, r1
 13a:	71 f4       	brne	.+28     	; 0x158 <writeChar+0x5c>
 13c:	80 81       	ld	r24, Z
 13e:	8f 70       	andi	r24, 0x0F	; 15
 140:	80 83       	st	Z, r24
 142:	85 81       	ldd	r24, Z+5	; 0x05
 144:	8f 70       	andi	r24, 0x0F	; 15
 146:	85 83       	std	Z+5, r24	; 0x05
 148:	82 85       	ldd	r24, Z+10	; 0x0a
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	82 87       	std	Z+10, r24	; 0x0a
 14e:	87 85       	ldd	r24, Z+15	; 0x0f
 150:	8f 70       	andi	r24, 0x0F	; 15
 152:	87 87       	std	Z+15, r24	; 0x0f
 154:	94 e0       	ldi	r25, 0x04	; 4
 156:	0d c0       	rjmp	.+26     	; 0x172 <writeChar+0x76>
 158:	80 81       	ld	r24, Z
 15a:	80 7f       	andi	r24, 0xF0	; 240
 15c:	80 83       	st	Z, r24
 15e:	85 81       	ldd	r24, Z+5	; 0x05
 160:	80 7f       	andi	r24, 0xF0	; 240
 162:	85 83       	std	Z+5, r24	; 0x05
 164:	82 85       	ldd	r24, Z+10	; 0x0a
 166:	80 7f       	andi	r24, 0xF0	; 240
 168:	82 87       	std	Z+10, r24	; 0x0a
 16a:	87 85       	ldd	r24, Z+15	; 0x0f
 16c:	80 7f       	andi	r24, 0xF0	; 240
 16e:	87 87       	std	Z+15, r24	; 0x0f
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	20 81       	ld	r18, Z
 174:	aa 0f       	add	r26, r26
 176:	bb 1f       	adc	r27, r27
 178:	aa 0f       	add	r26, r26
 17a:	bb 1f       	adc	r27, r27
 17c:	a8 5f       	subi	r26, 0xF8	; 248
 17e:	be 4f       	sbci	r27, 0xFE	; 254
 180:	8c 91       	ld	r24, X
 182:	09 2e       	mov	r0, r25
 184:	01 c0       	rjmp	.+2      	; 0x188 <writeChar+0x8c>
 186:	88 0f       	add	r24, r24
 188:	0a 94       	dec	r0
 18a:	ea f7       	brpl	.-6      	; 0x186 <writeChar+0x8a>
 18c:	82 2b       	or	r24, r18
 18e:	80 83       	st	Z, r24
 190:	25 81       	ldd	r18, Z+5	; 0x05
 192:	11 96       	adiw	r26, 0x01	; 1
 194:	8c 91       	ld	r24, X
 196:	11 97       	sbiw	r26, 0x01	; 1
 198:	09 2e       	mov	r0, r25
 19a:	01 c0       	rjmp	.+2      	; 0x19e <writeChar+0xa2>
 19c:	88 0f       	add	r24, r24
 19e:	0a 94       	dec	r0
 1a0:	ea f7       	brpl	.-6      	; 0x19c <writeChar+0xa0>
 1a2:	82 2b       	or	r24, r18
 1a4:	85 83       	std	Z+5, r24	; 0x05
 1a6:	22 85       	ldd	r18, Z+10	; 0x0a
 1a8:	12 96       	adiw	r26, 0x02	; 2
 1aa:	8c 91       	ld	r24, X
 1ac:	12 97       	sbiw	r26, 0x02	; 2
 1ae:	09 2e       	mov	r0, r25
 1b0:	01 c0       	rjmp	.+2      	; 0x1b4 <writeChar+0xb8>
 1b2:	88 0f       	add	r24, r24
 1b4:	0a 94       	dec	r0
 1b6:	ea f7       	brpl	.-6      	; 0x1b2 <writeChar+0xb6>
 1b8:	82 2b       	or	r24, r18
 1ba:	82 87       	std	Z+10, r24	; 0x0a
 1bc:	27 85       	ldd	r18, Z+15	; 0x0f
 1be:	13 96       	adiw	r26, 0x03	; 3
 1c0:	8c 91       	ld	r24, X
 1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <writeChar+0xca>
 1c4:	88 0f       	add	r24, r24
 1c6:	9a 95       	dec	r25
 1c8:	ea f7       	brpl	.-6      	; 0x1c4 <writeChar+0xc8>
 1ca:	82 2b       	or	r24, r18
 1cc:	87 87       	std	Z+15, r24	; 0x0f
 1ce:	08 95       	ret

Disassembly of section .text.CLK_init:

000001d0 <CLK_init>:
 1d0:	e1 e6       	ldi	r30, 0x61	; 97
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 e8       	ldi	r24, 0x80	; 128
 1d6:	80 83       	st	Z, r24
 1d8:	10 82       	st	Z, r1
 1da:	08 95       	ret

Disassembly of section .text.button_init:

000000f4 <button_init>:
  f4:	2f 9a       	sbi	0x05, 7	; 5
  f6:	80 e8       	ldi	r24, 0x80	; 128
  f8:	84 b9       	out	0x04, r24	; 4
  fa:	08 95       	ret

Disassembly of section .text.main:

000000c2 <main>:
  c2:	86 d0       	rcall	.+268    	; 0x1d0 <CLK_init>
  c4:	0a d0       	rcall	.+20     	; 0xda <LCD_Init>
  c6:	16 d0       	rcall	.+44     	; 0xf4 <button_init>
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	80 e3       	ldi	r24, 0x30	; 48
  ce:	16 d0       	rcall	.+44     	; 0xfc <writeChar>
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <main+0xe>

Disassembly of section .text.__dummy_fini:

000000d2 <_fini>:
  d2:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000000d8 <__funcs_on_exit>:
  d8:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000000d4 <__simulator_exit>:
  d4:	08 95       	ret

Disassembly of section .text.exit:

000000b4 <exit>:
  b4:	ec 01       	movw	r28, r24
  b6:	10 d0       	rcall	.+32     	; 0xd8 <__funcs_on_exit>
  b8:	0c d0       	rcall	.+24     	; 0xd2 <_fini>
  ba:	ce 01       	movw	r24, r28
  bc:	0b d0       	rcall	.+22     	; 0xd4 <__simulator_exit>
  be:	ce 01       	movw	r24, r28
  c0:	0a d0       	rcall	.+20     	; 0xd6 <_Exit>

Disassembly of section .text._Exit:

000000d6 <_Exit>:
  d6:	ec df       	rcall	.-40     	; 0xb0 <_exit>
